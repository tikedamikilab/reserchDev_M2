status,problem,source
1,1A - Theatre Square,"n , m , a = map ( int , input (). split ()) print (- n // a *(- m // a ))"
2,2A - Winner,"n , k , s = eval ( input ()),{},[] for  i  in  range ( n ): a , b = input (). split ( ' ' ); k [ a ]= k . get ( a , 0 )+ int ( b ); s . append ([ a , k [ a ]]) n = max ( k . values ()) for  i  , j  in  s :      if  k [ i ]== n  and  int ( j )>= n : print ( i ); break"
3,3A - Shortest path of the king,"L = input R = print a = L ()+ L () a , b =( ord ( a [ i ])- ord ( a [ i + 2 ]) for  i  in ( 0 , 1 )) R ( max ( a ,- a , b ,- b )) while  a != 0   or  b != 0 :  r = ''   if  a < 0 : r = 'R' ; a += 1   if  a > 0 : r = 'L' ; a -= 1   if  b < 0 : r += 'U' ; b += 1   if  b > 0 : r += 'D' ; b -= 1  R ( r )"
4,4A - Watermelon,"print ( ""YNEOS"" [ 2 ** int ( input ())% 24 < 9 :: 2 ])"
5,5A - Chat Servers Outgoing Traffic,import  sys s = 0 ; n = 0 for  i  in  sys . stdin :      if  i [ 0 ]== '+' : n += 1      elif  i [ 0 ]== '-' : n -= 1      else : s += n *( len ( i )- i . find ( ':' )- 2 ) print ( s )
6,6A - Triangle,"a , b , c , d = sorted ( map ( int , input (). split ())) x = min ( d - b - c , c - a - b ) print ([ ""SEGMENT"" , ""IMPOSSIBLE"" , ""TRIANGLE"" ][( x > 0 )-( x < 0 )])"
7,7A - Kalevitch and Chess,t  =   [ input (). count ( 'B' )   for  i  in  range ( 8 )] print ( min ( t )   %   8   +  t . count ( 8 ))
8,8A - Train and Peter,"def  f ( a ,  b ,  c ):     i ,  j  =  a . find ( b ),  a . rfind ( c )      return  i  !=   - 1   and  j  !=   - 1   and  i  +  len ( b )   <=  j a ,  b ,  c  =  input (),  input (),  input () print (( 'fantasy' ,   'backward' ,   'forward' ,   'both' )[ 2   *  f ( a ,  b ,  c )   +  f ( a [::- 1 ],  b ,  c )])"
9,9A - Die Roll,"print ([ '1/1' , '5/6' , '2/3' , '1/2' , '1/3' , '1/6' ][ max ( map ( int , input (). split ()))- 1 ])"
10,10A - Power Consumption Calculation,"I = lambda : map ( int , input (). split ()) n , a , b , c , u , v = I () exec ( 'x=[' + n * '[*I()],' + ']' ) r = 0 for  i  in  range ( n ):   r += a *( x [ i ][ 1 ]- x [ i ][ 0 ])    if  i :     t = x [ i ][ 0 ]- x [ i - 1 ][ 1 ]     s = min ( t , u ); r += s * a ; t -= s     s = min ( t , v ); r += s * b ; t -= s     r += t * c print ( r )"
11,11A - Increasing Sequence,"I = lambda : map ( int , input (). split ()) n , d = I () a =* I (), x = a [ 0 ] r = 0 for  y  in  a [ 1 :]:   z = 0 --( x + 1 - y )// d    if  z >= 0 :     r += z     y += z * d   x = y print ( r )"
12,12A - Super Agent,I  =  input   s  =  I ()+ I ()+ I ()   print ( 'YES'   if  s == s [::- 1 ]   else   'NO' )
13,13A - Numbers,"import  math a = int ( input ()) r = 0 for  b  in  range ( 2 , a ):   c = a    while  c : r += c % b ; c //= b a -= 2 d = math . gcd ( r , a ) print ( f '{r//d}/{a//d}' )"
14,14A - Letter,"n , m = map ( int , input (). split ()) A =[ input () for  _  in [ 0 ]* n ] a = b = 1E2 ; c = d =- 1 for  y  in  range ( n ):    for  x  in  range ( m ):      if  A [ y ][ x ]== '*' :       a = min ( a , y ); b = min ( b , x )       c = max ( c , y ); d = max ( d , x ) print (*[ x [ b : d + 1 ] for  x  in  A [ a : c + 1 ]], sep = '\n' )"
15,15A - Cottage Village,"I = lambda : list ( map ( int , input (). split ())) n , t = I () x = sorted ( I () for  _  in '0' * n ) a = 0 for  i  in  range ( n - 1 ): 	l = x [ i ][ 0 ]+ t +( x [ i ][ 1 ]+ x [ i + 1 ][ 1 ])/ 2 ; r = x [ i + 1 ][ 0 ] 	 if  l == r : a += 1 	 if  l < r : a += 2 print ( a + 2 )"
16,16A - Flag,"a =[* open ( 0 )][ 1 :] r = any ( len ({* b })> 2   for  b  in  a ) print ( 'YNEOS' [ r | any ( x [ 0 ]== y [ 0 ]   for  x , y  in  zip ( a , a [ 1 :])):: 2 ])"
17,17A - Noldbach problem,"n , k = map ( int , input (). strip (). split ()) v  =   [] for  i  in  range ( 2 , n + 1 ): 	 if  all ( i % j != 0   for  j  in  v ): 		v . append ( i ) c = 0 for  i  in  range ( len ( v )- 1 ): 	 if  v [ i ]+ v [ i + 1 ]+ 1   in  v : 		c += 1 if ( c >= k ): 	 print ( ""YES"" ) else : 	 print ( ""NO"" )"
18,18A - Triangle,"s  =  list ( map ( int , input (). split ()))     def  dis ( a , b , c , d ): 	  return   (( a - c )** 2   +   ( b - d )** 2 )   def  ass ( s ): 	a , b , c , d , e , f  =  s 	AB  =  dis ( a , b , c , d ) 	BC  =  dis ( c , d , e , f ) 	CA  =  dis ( e , f , a , b )   	x  =  max ( AB , BC , CA ) 	 	 return  x  ==  AB + BC + CA - x  and  AB  and  BC  and  CA   if  ass ( s ): 	 print ( ""RIGHT"" )   	exit ()   for  i  in  range ( 6 ): 	s [ i ]   -=   1 	 if  ass ( s ):   print ( ""ALMOST"" ); exit () 	s [ i ]   +=   2 	 if  ass ( s ):   print ( ""ALMOST"" ); exit () 	s [ i ]   -= 1   print ( ""NEITHER"" )  "
19,19A - World Football Cup,"n  =  int ( input ()) d  =  dict () for  i  in  range ( n ): 	d [ input ()]   =   [ 0 ,   0 ,   0 ] for  i  in  range ( n  *   ( n  -   1 )   //   2 ): 	t ,  s  =  input (). split () 	t1 ,  t2  =  t . split ( '-' ) 	s1 ,  s2  =   [ int ( x )   for  x  in  s . split ( ':' )] 	a  =  d [ t1 ] 	b  =  d [ t2 ] 	a [ 2 ]   +=  s1 	b [ 2 ]   +=  s2 	a [ 1 ]   +=  s1  -  s2 	b [ 1 ]   +=  s2  -  s1 	 if  s1  ==  s2 : 		a [ 0 ]   +=   1 		b [ 0 ]   +=   1 	 elif  s1  <  s2 : 		b [ 0 ]   +=   3 	 else : 		a [ 0 ]   +=   3 print ( '\n' . join ( sorted ( b  for  a ,  b  in  sorted (( b ,  a )   for  a ,  b  in  d . items ())[ n  //   2 :   ])))"
20,20A - BerOS file system,"print ( '/'   +   '/' . join ( filter ( None ,  input (). split ( '/' ))))"
21,21A - Jabber ID,"import  re   s  =  input () reg  =  re . compile ( r '^\w{1,16}@(\w{1,16}\.)*\w{1,16}(/\w{1,16})?$' )   if  reg . match ( s ): 	 print ( ""YES"" ) else : 	 print ( ""NO"" )"
22,22A - Second Order Statistics,"print (( sorted ({* map ( int ,[* open ( 0 )][ 1 ]. split ())})+[ 'NO' ])[ 1 ])"
23,23A - You're Given a String...,"s  =  input () for  i  in  range ( len ( s ),   0 ,   - 1 ): 	 for  j  in  range ( len ( s )   -  i  +   1 ): 		 if  s [ j :  j  +  i ]   in  s [ j  +   1 :]: 			 print ( i ) 			exit () print ( 0 )"
24,24A - Ring road,"n  =  int ( input ()) source ,  dest  =   [],   [] sum1 ,  sum2  =   0 ,   0 for  i  in  range ( n ): 	t ,  s  ,  w =  map ( int ,  input (). split ()) 	 if ( t  in  source  or  s  in  dest ): 		t ,  s  =  s ,  t 		sum1  += w 	 else : 		sum2 += w 	source . append ( t ) 	dest . append ( s ) print ( min ( sum2 ,  sum1 ))"
25,25A - IQ test,input (); l =[ int ( x )% 2   for  x  in  input (). split ()] print ( l . index ( sum ( l )== 1 )+ 1 )
26,26A - Almost Prime,"n = int ( input ()) x =[ 0 ]*( n + 1 ) for  i  in  range  ( 2 , n + 1 ):      if  x [ i ]== 0 :          for  j  in  range ( 2 * i , n + 1 , i ):             x [ j ]+= 1 print ( x . count ( 2 ))"
27,27A - Next Test,"input () print ( min ( set ( range ( 1 , 3002 ))- set ( map ( int , input (). split ()))))"
28,28A - Bender Problem,"from  collections  import  defaultdict   n ,  m  =  map ( int ,  input (). split ()) tmp  =  list ( tuple ( map ( int ,  input (). split ()))   for  _  in  range ( n )) nails  =   [ abs ( a  -  c )   +  abs ( b  -  d )   for   ( a ,  b ),   ( c ,  d )   in  zip ( tmp ,  tmp [ 2 :]   +  tmp [: 2 ])] segments  =  defaultdict ( list ) for  i ,  s  in  enumerate ( map ( int ,  input (). split ()),   1 ):     segments [ s ]. append ( i ) for  shift  in   - 1 ,   0 :     res  =   [- 1 ]   *  n      for  nailidx  in  range ( shift ,  n  +  shift ,   2 ):         nail  =  nails [ nailidx ]          if  nail  in  segments  and  segments [ nail ]:             res [( nailidx  +   1 )   %  n ]   =  segments [ nail ]. pop ()          else :              break      else :          print ( ""YES"" )          print ( "" "" . join ( map ( str ,  res )))         exit ( 0 ) print ( ""NO"" )"
29,29A - Spit Problem,"a =[[* map ( int , s . split ())] for  s  in [* open ( 0 )][ 1 :]] print ( 'YNEOS' [ all ( u + v != w  or  w + x != u  for  u , v  in  a  for  w , x  in  a ):: 2 ])"
30,30A - Accounting,"a ,  b ,  n  =   [ int ( x )   for  x  in  input (). split ()] for  x  in  range (- 1000 ,   1001 ): 	 if  a  *  pow ( x ,  n )   ==  b : 		 print ( x ) 		exit () print ( 'No solution' )"
31,31A - Worms Evolution,"n  =  int ( input ()) A  =   [* map ( int ,  input (). split ())] X  =  set ( A )   for  i  in  range ( n ): 	 for  j  in  range ( i ): 		 if  A [ i ]+ A [ j ]   in  X : 			 print ( A . index ( A [ i ]+ A [ j ])+ 1 ,  i + 1 ,  j + 1 ) 			exit ()   print (- 1 )"
32,32A - Reconnaissance,"i = lambda : map ( int , input (). split ()) n , d = i (); a =[* i ()] print ( sum ( abs ( x - y )<= d  for  x  in  a  for  y  in  a )- n )"
33,33A - What is for dinner?,"n ,  m ,  k  =  map ( int , input (). split ()) a  =   [ 200000000 ]* m for  i  in  range ( n ):     r ,  c = map ( int , input (). split ())     a [ r - 1 ]   =  min ( a [ r - 1 ],  c ) print ( min ( sum ( a ),  k ))"
34,34A - Reconnaissance 2,"I = input n = int ( I ()) m = list ( map ( int , I (). split ())) m +=[ m [ 0 ]] a = 0 for  i  in  range ( n ):      if  abs ( m [ i ]- m [ i + 1 ])< abs ( m [ a ]- m [ a + 1 ]): a = i r =( a + 2 )% n print ( a + 1 ,[ n , r ][ r > 0 ])"
35,35A - Shell Game,"F = open ( 'input.txt' , 'r' ) W = open ( 'output.txt' , 'w' ) I = lambda :[* map ( int , F . readline (). split ())] x = I ()[ 0 ] for  _  in [ 0 ]* 3 :   u , v = I ()    if  x == u : x = v    elif  x == v : x = u W . write ( str ( x )) W . close ()"
36,36A - Extra-terrestrial Intelligence,"S = str . split s = S ( open ( 'input.txt' ,   'r' ). read ())[ 1 ] f = open ( 'output.txt' ,   'w' ) f . write ([ 'NO' , 'YES' ][ len ( set ( S ( s [ s . find ( '1' ): s . rfind ( '1' )+ 1 ], '1' )[ 1 :- 1 ]))== 1 ]) f . flush ()"
37,37A - Towers,"input () b  =  input (). split () print ( max ( map ( b . count ,  b )),  len ( set ( b )))"
38,38A - Army,"input (); a = list ( map ( int , input (). split ())); c , d = map ( int , input (). split ()); print ( sum ( a [ c - 1 : d - 1 ]))"
39,39A - C*++ Calculations,"import  re   u  =  int G  =  input X  =  sorted y  =   print A  =  re . findall a  =  u ( G ()) b  =  X ([[ u (( i [ 0 ] or   '+' )+( i [ 1 ] or   '1' )),  i [ 3 ]]         for  i  in  A ( '(\+|-)?(\d{0,4})(\*)?(a\+\+|\+\+a)' ,  G ())]) z  =   0 for  i  in  b :      if  i [ 1 ]   ==   'a++' :         z  +=  i [ 0 ]* a      else :         z  +=  i [ 0 ]*( a + 1 )     a  +=   1 y ( z )"
40,40A - Find Color,"from  math  import  ceil   x ,  y  =  map ( int ,  input (). split ()) R  =  x * x  +  y * y r  =  ceil ( R **. 5 )   print ( 'black'   if  r * r == R  or   ( r % 2 )^( x * y <= 0 )   else   'white' )"
41,41A - Translation,"r = input ; print ( ""YNEOS"" [ r ()!= r ()[::- 1 ]:: 2 ])"
42,42A - Guilty --- to the kitchen!,"n ,  v  =  map ( int ,  input (). split ()) a  =  list ( map ( int ,  input (). split ())) b  =  list ( map ( int ,  input (). split ())) r  =  min ( bi  /  ai  for  ai ,  bi  in  zip ( a ,  b )) print ( min ( v ,  r  *  sum ( a )))"
43,43A - Football,n = int ( input ()) print ( sorted ([ input ()   for  _  in  range ( n )])[ n // 2 ])
44,44A - Indian Summer,print ( len ({*[* open ( 0 )][ 1 :]}))
45,45A - Codecraft III,import  calendar a = input () b =[ calendar . month_name [ i ] for  i  in  range ( 13 )][ 1 :] print ( b [( int ( input ())+ b . index ( a ))% 12 ])
46,46A - Ball Game,"n , x = int ( input ()), 0 for  i  in  range ( 1 , n ):  x =( x + i )% n   print ( x + 1 , '' )"
47,47A - Triangular numbers,print ( 'YNEOS' [( int ( input ())* 8 + 1 )** 0.5 % 1 > 0 :: 2 ])
48,48A - Rock-paper-scissors,"a =[ input () for  _  in [ 0 ]* 3 ] d = dict ( zip ( 'rsp' , 'spr' )) r = 'FMS' for  i  in  range ( 3 ):    if  sum ( x [ 0 ]== d [ a [ i ][ 0 ]]   for  x  in  a )== 2 :      print ( r [ i ])     exit () print ( '?' )"
49,49A - Sleuth,print ( 'NYOE S' [ input ()[:- 1 ]. rstrip ()[- 1 ]   in   'aeiouyAEIOUY' :: 2 ])
50,50A - Domino piling,print ( eval ( '*' . join ( input (). split ()))// 2 )
51,51A - Cheaterius's Problem,I  =  input   n  =  int ( I ()) X  =  set ()   for  i  in  range ( n ):     s  =  I ()   +  I ()[::- 1 ]      if  i  <  n - 1 :         I ()      if  all ( s  not   in  x  for  x  in  X ):         X . add ( 2 * s )   print ( len ( X ))
52,52A - 123-sequence,n = int ( input ()) a = input () print ( n - max ( a . count ( x ) for  x  in   '123' ))
53,53A - Autocomplete,a = input () b = int ( input ()) c =[] for  i  in  range ( b ): 	d = input () 	 if  d [: len ( a )]== a : 		c . append ( d ) if  len ( c )> 0 : 	 print ( min ( c )) else : 	 print ( a )
54,54A - Presents,"I  =   lambda :  map ( int ,  input (). split ())   n ,  k  =  I () C ,   * X  =  I () X  =   [ 0 ]   +  X  +   [ n + 1 ]   print ( C  +  sum (( X [ i + 1 ]- X [ i ]- 1 )// k  for  i  in  range ( C + 1 )))"
55,55A - Flea travel,n = int ( input ()) print ( 'NO' if  n & n - 1   else   'YES' )
56,56A - Bar,"a =[ 'ABSINTH' ,   'BEER' ,   'BRANDY' ,   'CHAMPAGNE' ,   'GIN' ,   'RUM' ,   'SAKE' ,   'TEQUILA' ,   'VODKA' ,   'WHISKEY' ,   'WINE' ] r = 0 for  s  in   [* open ( 0 )][ 1 :]:    if  s [ 0 ]. isdigit (): r += int ( s )< 18    else : r += s [:- 1 ] in  a print ( r )"
57,57A - Square Earth?,"n , x , y , p , q = map ( int , input (). split ()) d = abs ( x - p )+ abs ( y - q )   if ( abs ( x - p )== n ):     d = min ( n + y + q , 3 * n -( y + q )) if ( abs ( y - q )== n ):     d = min ( n + x + p , 3 * n -( x + p )) print ( d )"
58,58A - Chat room,s = iter ( input ()); print ( 'NYOE S' [ all ( c  in  s  for  c  in   'hello' ):: 2 ])
59,59A - Word,"s = input (); print ([ s . lower (), s . upper ()][ sum ( x < '['   for  x  in  s )* 2 > len ( s )])"
60,60A - Where Are My Flakes?,"n ,  m  =  map ( int ,  input (). split ()) L ,  R  =   1 ,  n   for  _  in  range ( m ):     s  =  input (). split ()     i  =  int ( s [- 1 ])      if  s [ 2 ]   ==   'left' :         R  =  min ( R ,  i - 1 )      else :         L  =  max ( L ,  i + 1 )   print ( R - L + 1   if  L <= R  else   - 1 )"
61,61A - Ultra-Fast Mathematician,"i = input ; print ( '' . join ( '01' [ a != b ] for  a , b  in  zip ( i (), i ())))"
62,62A - A Student's Dream,"bl , br = map ( int , input (). split ()) al , ar = map ( int , input (). split ()) if  bl - 1 <= ar <= 2 * bl + 2   or  br - 1 <= al <= 2 * br + 2 :      print ( ""YES"" ) else :      print ( 'NO' )"
63,63A - Sinking Ship,"n = int ( input ()) o = dict ( zip ( 'tminp' ,[ 0 , 1 , 1 , 2 , 3 ])) a = sorted ( enumerate ([ input (). split () for  _  in [ 0 ]* n ]), key = lambda  x :( o [ x [ 1 ][ 1 ][ 2 ]], x [ 0 ])) for  x  in  a : print ( x [ 1 ][ 0 ])"
65,65A - Harry Potter and Three Spells,"a ,  b ,  c ,  d ,  e ,  f  =  map ( int ,  input (). split ()) print ( 'Ron'   if  a  *  e  *  c  <  f  *  d  *  b  or   ( c  ==   0   and  d )   or   ( a  ==   0   and  b  and  d )   else   'Hermione' )"
66,66A - Petya and Java,"n = int ( input ()) s = ""byte"" if  n > 127 : s = ""short"" if  n > 32767 : s = ""int"" if  n >= 2 ** 31 : s = ""long"" if  n >= 2 ** 63 : s = ""BigInteger"" print ( s )"
67,67A - Partial Teacher,"n = int ( input ()) s = input () w =[ 1 ]* n for  i  in  range ( n - 1 ):      if  s [ i ]== '=' :         w [ i + 1 ]= w [ i ]      elif  s [ i ]== 'R' :          if  w [ i + 1 ]<= w [ i ]:             w [ i + 1 ]= w [ i ]+ 1      else :          if  w [ i ]<= w [ i + 1 ]:             w [ i ]= w [ i + 1 ]+ 1 for  i  in  range ( n - 2 ,- 1 ,- 1 ):      if  s [ i ]== '=' :         w [ i ]= w [ i + 1 ]      elif  s [ i ]== 'R' :          if  w [ i + 1 ]== w [ i ]:             w [ i + 1 ]= w [ i ]+ 1      else :          if  w [ i ]<= w [ i + 1 ]:             w [ i ]= w [ i + 1 ]+ 1 for  i  in  range ( n ):      print ( w [ i ], end = ' ' )"
68,68A - Irrational problem,"* l ,  a ,  b  =  map ( int ,  input (). split ()) print ( max ( 0 ,  min ( b  +   1 ,   * l )   -  a ))"
69,69A - Young Physicist,"print ( 'YNEOS' [ any ( map ( sum , zip (*[ map ( int , input (). split ()) for  x  in ' ' * int ( input ())]))):: 2 ])"
70,70A - Cookies,"print ( pow ( 3 , max ( int ( input ())- 1 , 0 ), 1000003 ))"
71,71A - Way Too Long Words,"for  _  in   [ 0 ]* int ( input ()):     s = input (); l = len ( s )- 2 ; print ([ s , s [ 0 ]+ str ( l )+ s [- 1 ]][ l > 8 ])"
73,73A - The Elder Trolls IV: Oblivon,"x ,  y ,  z ,  k  =  map ( int ,  input (). split ()) x ,  y ,  z  =  sorted (( x ,  y ,  z )) a  =  min ( k  //   3 ,  x  -   1 ) b  =  min (( k  -  a )   //   2 ,  y  -   1 ) c  =  min ( k  -  a  -  b ,  z  -   1 ) print (( a  +   1 )   *   ( b  +   1 )   *   ( c  +   1 ))"
74,74A - Room Leader,"a =[] for  s  in   [* open ( 0 )][ 1 :]:   s = s . split ()   a +=[[ s [ 0 ],* map ( int , s [ 1 :])]] print ( max ( a , key = lambda  x : x [ 1 ]* 100 - x [ 2 ]* 50 + sum ( x [ 3 :]))[ 0 ])"
75,75A - Life Without Zeros,"I = lambda  x : int ( str ( x ). replace ( '0' , '' )) a = int ( input ()) b = int ( input ()) print ( ""YNEOS"" [ I ( a )+ I ( b )!= I ( a + b ):: 2 ])"
77,77A - Heroes,"R = range S = str . split I = input L = S ( 'Anka Chapay Cleo Troll Dracul Snowy Hexadecimal' ) h ={} for  i  in  R ( 7 ): h [ L [ i ]]= i d =[[] for  i  in  R ( 9 )] for  z  in   '0' * int ( I ()): a , _ , b = S ( I ()); d [ h [ a ]]+=[ h [ b ]] a , b , c = map ( int , S ( I ())) o =[ 10 ** 9 , 0 ] def  C ( q , w , e , n ):      if  n == 7 :          if   not ( q  and  w  and  e ): return         p =[ a // len ( q ), b // len ( w ), c //( len ( e ))]; p = max ( p )- min ( p ); l = sum ( k  in  g  for  g  in ( q , w , e ) for  h  in  g  for  k  in  d [ h ]); global  o          if  o [ 0 ]> p  or  o [ 0 ]== p  and  o [ 1 ]< l : o = p , l      else : C ( q +[ n ], w , e , n + 1 ); C ( q , w +[ n ], e , n + 1 ); C ( q , w , e +[ n ], n + 1 ) C ([],[],[], 0 ) print ( o [ 0 ], o [ 1 ])"
78,78A - Haiku,"r = 0 for  i  in   [ 0 , 1 , 2 ]: r |= sum ( x  in   'aeiou'   for  x  in  input ())!= 5 + i % 2 * 2 print ( 'YNEOS' [ r :: 2 ])"
79,79A - Bus Game,"x ,  y  =  map ( int ,  input (). split ())   c  =  min ( x  //   2 ,  y  //   24 ) x  -=   2   *  c y  -=   24   *  c   c  =  min ( x  //   3 ,  y  //   14 ) x  -=   3   *  c y  -=   14   *  c   c  =  min ( x  //   4 ,  y  //   4 ) x  -=   4   *  c y  -=   4   *  c   c  =  min ( x ,  y  //   34 ) x  -=   1   *  c y  -=   34   *  c   c  =  y  //   44 y  -=   44   *  c   if  y  >=   2   and   10   *  x  +  y  >=   22 :      print ( 'Ciel' ) else :      print ( 'Hanako' )"
80,80A - Panoramix's Prediction,"f = lambda  x : all ( x % i  for  i  in  range ( 2 , x )) n , m = map ( int , input (). split ()) print ([ 'NO' , 'YES' ][ f ( m ) and  all ( not  f ( i ) for  i  in  range ( n + 1 , m ))])"
81,81A - Plug-in,s =[] for  c  in  input ():      if  s  and  c == s [- 1 ]: s . pop ()      else : s +=[ c ] print ( '' . join ( s ))
82,82A - Double Cola,"n = int ( input ())- 1 while  n > 4 : n = n - 5 >> 1 print ( ""SLPRHheeaoeonjwlnneadaysror hdnd"" [ n :: 5 ])"
83,84B - Magical Array,"n = int ( input ())- 1 while  n > 4 : n = n - 5 >> 1 print ( ""SLPRHheeaoeonjwlnneadaysror hdnd"" [ n :: 5 ])"
84,84A - Toy Army,print ( int ( input ())// 2 * 3 )
85,85A - Domino,"n  =  int ( input ()) k  =  n  //   4 if  n  %   2 :      if   ( n  -   1 )   %   4 :         a  =   'aabb'   *  k  +   'aac'         b  =   'bbaa'   *  k  +   'bbc'         c  =   'dee'   +   'ffee'   *  k         d  =   'dff'   +   'eeff'   *  k      else :         a  =   'aabb'   *  k  +   'c'         b  =   'bbaa'   *  k  +   'c'         c  =   'd'   +   'ffee'   *  k         d  =   'd'   +   'eeff'   *  k      print ( '\n' . join (( a ,  b ,  c ,  d ))) else :           if  n  %   4 :                  a  =   'aabb'   *  k  +   'aa'         b  =   'c'   +   'ddcc'   *  k  +   'd'         c  =   'c'   +   'eeff'   *  k  +   'd'      else :         a  =   'aabb'   *  k         b  =   'c'   +   'ddcc'   *   ( k  -   1 )   +   'ddc'         c  =   'c'   +   'eeff'   *   ( k  -   1 )   +   'eec'      print ( '\n' . join (( a ,  b ,  c ,  a )))"
86,86A - Reflection,"l , r = map ( int , input (). split ( "" "" )) x = len ( str ( r )) m = '9' * x m = int ( m ) m1 = '1' + '0' *( x - 1 ) m1 = int ( m1 ) ans = max ( l *( m - l ), r *( m - r )) if  l <= m1 <= r :     ans = max ( ans , m1 *( m - m1 ))   if  l <= m // 2 <= r :     ans = max ( ans ,( m // 2 )*( m - m // 2 ))   if  l <= m // 2 + 1 <= r :     ans = max ( ans ,( m // 2 + 1 )*( m - m // 2 - 1 ))   print ( ans )"
87,87A - Trains,"from  math  import   * a ,  b  =  map ( int ,  input (). split ()) print ( 'Equal'   if  gcd ( a ,  b )   ==  abs ( b  -  a )   else   'Dasha'   if  a  <  b  else   'Masha' )"
88,88A - Chord,"NOTES  =   'C C# D D# E F F# G G# A B H' . split ()   a ,  b ,  c  =  sorted ( map ( NOTES . index ,  input (). split ())) x ,  y  =  b - a ,  c - b   if   ( x , y )   in   (( 3 , 5 ),   ( 4 , 3 ),   ( 5 , 4 )):      print ( 'major' ) elif   ( x , y )   in   (( 3 , 4 ),   ( 4 , 5 ),   ( 5 , 3 )):      print ( 'minor' ) else :      print ( 'strange' )"
89,89A - Robbery,"z = lambda :  list ( map ( int , input (). split ())) n , m , k = z () print ( n % 2 * min ( m //( n // 2 + 1 )* k ,   * z ()[:: 2 ]))"
90,90A - Cableway,"r , g , b = map ( int , input (). split ()) f = lambda  x :( 0 -- x // 2 - 1 )* 3 print ( max ( f ( r ), 1 + f ( g ), 2 + f ( b ))+ 30 )"
91,91A - Newspaper Headline,"from  bisect  import  bisect_right a ,  b ,  c  =  input (),  input (),   'abcdefghijklmnopqrstuvwxyz' p  =   { i :   []   for  i  in  c } for  i ,  j  in  enumerate ( a ):  p [ j ]. append ( i ) if  any ( j  in  b  and   not  p [ j ]   for  j  in  c ):   print (- 1 ) else :     k ,  s  =   - 1 ,   1      for  j  in  b :         q  =  p [ j ]          if  k  <  q [- 1 ]:  k  =  q [ bisect_right ( q ,  k )]          else :  k ,  s  =  q [ 0 ],  s  +   1      print ( s )"
92,92A - Chips,"n , m = map ( int , input (). split ()) i = 0 while  m > i : m , i = m - i - 1 ,( i + 1 )% n print ( m )"
93,93A - Frames,"n ,  m ,  a ,  b  =  map ( int ,  input (). split ()) a  -=   1 x ,  y  =  a  %  m ,  b  %  m d  =  b  //  m  -  a  //  m if  b  ==  n  and  y :  d  +=   1 u ,  v  =  x  ==   0 ,  y  ==   0   or  b  ==  n print ( 1   if  u  and  v  or  d  <=  v  else   2   if  x  ==  y  or  u  or  v  or  d  ==   1   else   3 )"
94,94A - Restoring Password,"a  =  input () b  =   [ input ()   for  i  in  range ( 10 )] print (*[ b . index ( a [ i : i  +   10 ])   for  i  in  range ( 0 ,   80 ,   10 )],  sep = '' )"
95,96C - Hockey,"a  =  input () b  =   [ input ()   for  i  in  range ( 10 )] print (*[ b . index ( a [ i : i  +   10 ])   for  i  in  range ( 0 ,   80 ,   10 )],  sep = '' )"
96,96A - Football,"s = input (); print ([ ""NO"" , ""YES"" ][ 7 * ""1"" in  s  or   7 * ""0"" in  s ])"
98,99C - Help Victoria the Wise,"s = input (); print ([ ""NO"" , ""YES"" ][ 7 * ""1"" in  s  or   7 * ""0"" in  s ])"
99,99A - Help Far Away Kingdom,a = input (). split ( '.' ) if  a [ 0 ][- 1 ]== '9' : print ( 'GOTO Vasilisa.' ) else : print ( int ( a [ 0 ])+ int ( a [ 1 ][ 0 ] in '56789' ))
101,101A - Homework,"I = input s = I () C ={} for  x  in  set ( s ): C [ x ]= s . count ( x ) k = int ( I ()) t = sorted ( set ( s ), key = lambda  x : C [ x ]) while  t  and  C [ t [ 0 ]]<= k : k -= C [ t [ 0 ]]; s = s . replace ( t [ 0 ], '' ); t = t [ 1 :] print ( len ( set ( s ))) print ( s )"
102,102A - Clothes,"I = lambda : map ( int , input (). split ()) n , m = I () N = list ( I ()) p = set () for  i  in  range ( m ): 	x , y = I (); x -= 1 ; y -= 1 	p . add (( x , y ) if  x < y  else ( y , x )) r = 1e9 for  i  in  range ( n ): 	 for  j  in  range ( i ): 		 for  k  in  range ( j ): 			 if ( j , i ) in  p  and ( k , i ) in  p  and ( k , j ) in  p : 				r  =  min ( r , N [ i ]+ N [ j ]+ N [ k ]) print (- 1   if  r > 1e8   else  r )"
103,104B - Testing Pants for Sadness,"I = lambda : map ( int , input (). split ()) n , m = I () N = list ( I ()) p = set () for  i  in  range ( m ): 	x , y = I (); x -= 1 ; y -= 1 	p . add (( x , y ) if  x < y  else ( y , x )) r = 1e9 for  i  in  range ( n ): 	 for  j  in  range ( i ): 		 for  k  in  range ( j ): 			 if ( j , i ) in  p  and ( k , i ) in  p  and ( k , j ) in  p : 				r  =  min ( r , N [ i ]+ N [ j ]+ N [ k ]) print (- 1   if  r > 1e8   else  r )"
104,104A - Blackjack,a = int ( input ()) print (( 10 < a < 22 )* 4 +( a == 20 )* 11 )
105,105A - Transmigration,"from  collections  import   Counter n ,  m ,  k  =  input (). split () k ,  c  =  int ( k . split ( '.' )[ 1 ]),   Counter () for  i  in  range ( int ( n )):     s ,  e  =  input (). split ()     e  =  int ( e )   *  k  //   100      if  e  >=   100 :         c [ s ]   =  e for  i  in  range ( int ( m )):     c [ input ()]   +=   0 print ( len ( c )) print ( '\n' . join ( sorted ( x  +   ' '   +  str ( c [ x ])   for  x  in  c )))"
106,106A - Card Game,"t = '6789TJQKA' I = input s = I () x = I () print ([ 'NO' , 'YES' ][ x [ 1 ]== s  and  x [ 4 ]!= s  or  x [ 1 ]== x [ 4 ] and  t . find ( x [ 0 ])> t . find ( x [ 3 ])])"
107,107A - Dorm Water Supply,"import  math n , p  =  map ( int ,  input (). split ()) g  =   [[- 1 ,- 1 ]   for  _  in  range ( n + 1 )] t  =  set ( range ( 1 ,  n + 1 )) for  i  in  range ( p ):     a , b , d  = map ( int ,  input (). split ())     g [ a ]   =   [ b ,  d ]     t . remove ( b ) ans  =   [] for  tt  in  t :     c  =  g [ tt ][ 0 ]     m  =  g [ tt ][ 1 ]      while  g [ c ][ 0 ]   !=   - 1 :         m  =  min ( m ,  g [ c ][ 1 ])         c  =  g [ c ][ 0 ]      if  m  >   - 1 :         ans . append ( '%i %i %i'   %   ( tt , c , m )) print ( len ( ans )) if  len ( ans )   !=   0 :      print ( '\n' . join ( ans ))"
108,108A - Palindromic Times,"h , m = map ( int , input (). split ( ':' )) m += h * 60 while   1 :   m =( m + 1 )% 1440      r = f '{m//60:02}:{m%60:02}'    if  r == r [::- 1 ]:      print ( r )      break"
109,109A - Lucky Sum of Digits,"n = int ( input ()) a , b = n // 7 , n % 7 c , d = b // 4 , b % 4 print (- 1if  a < d  else '4' *( c + 2 * d )+ '7' *( a - d ))"
110,110A - Nearly Lucky Number,"print ( 'NYOE S' [ sum ( i  in '47' for  i  in  input ()) in ( 4 , 7 ):: 2 ])"
111,111A - Petya and Inequiations,"n , x , y = map ( int , input (). split ()) n -= 1 t = y - n print ([ '1\n' * n + str ( t ),- 1 ][ t < 1   or  t * t + n < x ])"
112,112A - Petya and Strings,i = input ; a = i (). lower (); b = i (). lower () print (( a > b )-( a < b ))
113,113A - Grammar Lessons,"import  re t  =  input () p  =   [ r '([^ ]*lios )*([^ ]*etr)( [^ ]*initis)*' ,      r '([^ ]*liala )*([^ ]*etra)( [^ ]*inites)*' ,      r '[^ ]*(li(os|ala)|etra?|init[ie]s)' ] print ([ 'NO' ,   'YES' ][ any ( re . fullmatch ( q ,  t )   for  q  in  p )])"
114,114A - Cifera,"I = input k = int ( I ()) l = int ( I ()) r = 1 while  k ** r < l : r += 1 print ([ 'NO' , 'YES\n' + str ( r - 1 )][ k ** r == l ])"
115,115A - Party,"n  =  int ( input ()) p  =   [ int ( input ())   for  _  in  range ( n )] r  =   0 for  i  in  range ( n ): 	c  =   0 	 while  i  >=   0 : 		i  =  p [ i ]   -   1 		c  +=   1 	r  =  max ( r ,  c ) print ( r )"
116,116A - Tram,"a = p = 0 for  x  in [ 0 ]* int ( input ()): p -= eval ( input (). replace ( ' ' , '-' )); a = max ( a , p ) print ( a )"
117,117A - Elevator,"n ,  m  =  map ( int ,  input (). split ()) k  =   2   *   ( m  -   1 ) for  i  in  range ( n ):     s ,  f ,  t  =  map ( int ,  input (). split ())     d  =  t  %  k      if  s  <  f :   print ( k  *   ( s  <=  d )   +  f  -   1   +  t  -  d )      elif  f  <  s :   print ( k  *   ( d  +  s  >  k  +   1 )   +  k  +   1   -  f  +  t  -  d )      else :   print ( t )"
118,118A - String Task,print ( '' . join ( '.' + x  for  x  in  input (). lower ()   if  x  not   in 'aeyoui' ))
119,119A - Epic Game,"from  math  import  gcd * a , n = map ( int , input (). split ()) p = 1 while  n : p ^= 1 ; n -= gcd ( a [ p ], n ) print ( '01' [ p ])"
120,120A - Elevator,"import  sys sys . stdin = open ( 'input.txt' , 'r' ) sys . stdout = open ( 'output.txt' , 'w' ) print ([ 'L' , 'R' ][( input ()== 'front' )^( input ()== '1' )])"
121,121A - Lucky Sum,"l , r = map ( int , input (). split ())   a =[] def  foo ( n ): 	a . append ( n ) 	 if  n > 10 * r : 		 return 	foo ( 10 * n + 4 ) 	foo ( 10 * n + 7 ) 	 return   foo ( 0 ) a . sort ()   def  get_sum ( m ): 	s = 0 	 for  i  in  range ( 1 , len ( a )): 		s += a [ i ]*( min ( a [ i ], m )- min ( a [ i - 1 ], m )) 	 return  s   print ( get_sum ( r )- get_sum ( l - 1 ))  "
122,122A - Lucky Division,"n = int ( input ()); print ([ ""YES"" , ""NO"" ][ all ( n % i  for  i  in [ 4 , 7 , 47 , 744 , 477 ])])"
123,123A - Prime Permutation,"from  collections  import   Counter   d ,  t  =   'NO' ,  input () c ,  n  =   Counter ( t ),  len ( t ) p  =   [ 0 ]   *   ( n  +   1 ) for  i  in  range ( 2 ,  n  //   2   +   1 ):      if   1   -  p [ i ]:  p [ i :: i ]   =   [ 1 ]   *   ( n  //  i ) s  =  sum ( p ) u  =  v  =   '' for  q ,  k  in  c . items ():      if  v  or  k  <  s :         u  +=  q  *  k      else :         u  +=  q  *   ( k  -  s )         v  =  q if  v :     d ,  j  =   'YES\n' ,   0      for  i  in  range ( 1 ,  n  +   1 ):          if  p [ i ]:             d  +=  v          else :             d  +=  u [ j ]             j  +=   1 print ( d )"
124,124A - The number of positions,"n , a , b = map ( int , input (). split ()); print ( min ( n - a , b + 1 ))"
125,125A - Measuring Lengths in Baden,"n =( int ( input ())+ 1 )// 3 print ( n // 12 , n % 12 )"
127,127A - Wasted Time,"I = lambda : map ( int , input (). split ()) n , k = I () a =[[* map ( int , input (). split ())] for  _  in [ 0 ]* n ] r = 0 for  u , v  in  zip ( a , a [ 1 :]):   r +=(( u [ 0 ]- v [ 0 ])** 2 +( u [ 1 ]- v [ 1 ])** 2 )** 0.5 print ( r * k / 50 )"
128,128A - Statues,"r ,  s  =   [ 63 ],   '' . join ( input ()   +   'T'   for  i  in  range ( 8 ))   +   'T'   *   9 for  i  in  range ( 0 ,   72 ,   9 ):     t  =  set ()      for  x  in  r :          for  y  in   ( x ,  x  -   1 ,  x  +   1 ,  x  -   9 ,  x  +   9 ,  x  -   10 ,  x  -   8 ,  x  +   10 ,  x  +   8 ):              if  s [ y ]   ==   'T' :   continue              if   ( y  <  i  or  s [ y  -  i ]   !=   'S' )   and   ( y  <  i  +   9   or  s [ y  -  i  -   9 ]   !=   'S' ):  t . add ( y )     r  =  t print ( 'WIN'   if  r  else   'LOSE' )"
129,129A - Cookies,input () a =[ int ( x )% 2   for  x  in  input (). split ()] print ( a . count ( sum ( a )% 2 ))
131,131A - cAPS lOCK,"n = input (); print ([ n , n . swapcase ()][ n [ 1 :]. upper ()== n [ 1 :]])"
132,132A - Turing Tape,"s  =  input ()   e  =   0 for  i  in  s : 	a  =  ord ( i ) 	b  =  format ( a , '08b' ) 	c  =  str ( b )[::- 1 ] 	d  =  int ( c ,   2 ) 	 print   (( e - d )% 256 ) 	e  =  d"
133,133A - HQ9+,"print ( set ( ""HQ9"" )& set ( input ()) and ""YES"" or ""NO"" )"
134,134A - Average Numbers,"n ,  t  =  int ( input ()),  list ( map ( int ,  input (). split ())) s  =  sum ( t ) p  =   [ i  +   1   for  i  in  range ( n )   if  t [ i ]   *  n  ==  s ] print ( len ( p )) print ( ' ' . join ( map ( str ,  p )))"
135,135A - Replacement,"input () a  =  sorted ( list ( map ( int ,  input (). split ()))) print (*(* a [:- 1 ],   2 )   if  a [- 1 ]   ==   1   else   ( 1 ,   * a [:- 1 ]))"
136,136A - Presents,k = int ( input ()) a = input (). split () for  i  in  range ( k ): 	 print ( a . index ( str ( i + 1 ))+ 1 )
137,137A - Postcards and photos,"from  itertools  import  groupby   print ( sum (-(- len ( list ( g ))// 5 )   for  _ ,  g  in  groupby ( input ())))"
138,138A - Literature Lesson,"def  s ( l ,  k ):     v  =   0      for  i  in  range ( len ( l )   -   1 ,   - 1 ,   - 1 ):          if  l [ i ]   in   'aeiou' :             v  +=   1              if  v  ==  k :                  return  l [ i :]      return   '' def  f ( q ):      if   ''   in  q :          return   'NO'      elif  q [ 0 ]   ==  q [ 1 ]:          if  q [ 2 ]   ==  q [ 3 ]:              return   'aaaa'   if  q [ 1 ]   ==  q [ 2 ]   else   'aabb'          else :              return   'NO'      elif  q [ 0 ]   ==  q [ 2 ]   and  q [ 1 ]   ==  q [ 3 ]:          return   'abab'      elif  q [ 0 ]   ==  q [ 3 ]   and  q [ 1 ]   ==  q [ 2 ]:          return   'abba'      else :          return   'NO' n ,  k  =  map ( int ,  input (). split ()) v  =   '' for  i  in  range ( n ):     c  =  f ([ s ( input (),  k )   for  i  in  range ( 4 )])      if  c  ==   'NO' :         v  =  c          break      elif  v  and  c  in   ( v ,   'aaaa' ):          pass      elif  v  in   ( '' ,   'aaaa' ):         v  =  c      else :         v  =   'NO'          break print ( v )"
139,139A - Petr and Book,n = int ( input ()) x =[ int ( q )   for  q  in  input (). split ()] i = 0 while  n > x [ i ]:     n -= x [ i ]     i =( i + 1 )% 7 print ( i + 1 )
140,140A - New Year Table,"from  math  import  pi ,  sin n ,  R ,  r  =  map ( int ,  input (). split ()) print ( 'NO'   if  r  >  R  or   ( n  >   1   and   (( R  -  r )   *  sin ( pi  /  n )   +   1e-9 )   <  r )   else   'YES' )"
141,141A - Amusing Joke,"s , i = sorted , input ; print ( 'YNEOS' [ s ( i ()+ i ())!= s ( i ()):: 2 ])"
142,142A - Help Farmer,"n  =  int ( input ()) u  =  v  =   9   +   8   *  n for  a  in  range ( 1 ,  int ( n  **   ( 1   /   3 ))   +   1 ):      if  n  %  a :   continue     m  =  n  //  a      for  b  in  range ( a ,  int ( m  **   0.5 )   +   1 ):          if  m  %  b :   continue         p  =   ( a  +   1 )   *   ( b  +   2 )   *   ( m  //  b  +   2 )   -  n          if  u  >  p :  u  =  p print ( u ,  v )"
143,143A - Help Vasilisa the Wise 2,"r1 , r2 = map ( int , input (). split ()) c1 , c2 = map ( int , input (). split ()) d1 , d2 = map ( int , input (). split ())   x =( d1 + c1 - r2 )// 2 y = r1 - x z = c1 - x w = d1 - x if   1 <= x <= 9   and   1 <= y <= 9   and   1 <= z <= 9   and   1 <= w <= 9   and  len ( set ([ x , y , z , w ]))== 4 : 	 print ( x , y ) 	 print ( z , w ) else : 	 print (- 1 )"
144,144A - Arrival of the General,"n = int ( input ()); l = list ( map ( int , input (). split ())) s = l . index ( max ( l ))+ l [::- 1 ]. index ( min ( l )) print ( s -( s >= n ))"
145,145A - Lucky Conversion,"a , b = 0 , 0 for  i , j  in  zip ( input (), input ()):      if  i != j :          if  i == '4' : a += 1 ;          else : b += 1 ; print ( max ( a , b ))"
146,146A - Lucky Ticket,n = int ( input ()) a = input () print ( 'YNEOS' [ any ( x  not   in '47' for  x  in  a ) or  sorted ( a [: n // 2 ])!= sorted ( a [ n // 2 :]):: 2 ])
147,147A - Punctuation,"import  re   s  =  input (). strip () s  =  re . sub ( '\s+' ,   ' ' ,  s ) s  =  re . sub ( '\s?([.,!?])\s?' ,   '\\1 ' ,  s ) print ( s )"
148,148A - Insomnia cure,"* k , d =[ int ( input ()) for  i  in ' ' * 5 ]; print ( d - sum ( all ( i % x  for  x  in  k ) for  i  in  range ( 1 , d + 1 )))"
149,149A - Business trip,"k = int ( input ()) m = sorted ( map ( int , input (). split ()))[::- 1 ] for  i  in  range ( 13 ):   if  sum ( m [: i ])>= k :    print ( i )   exit ( 0 ) print (- 1 )"
150,150A - Win or Freeze,n = int ( input ()) x = n v1 = 0 v2 = 0 i = 2 while  i * i <= n :      while  n % i == 0 :          if  v1 :             v2 = i          else :             v1 = i         n //= i     i += 1   if  n - 1 :     v2 = n   if  v1 * v2 - x :      print ( 1 )      print ( v1 * v2 ) else :      print ( 2 )
151,151A - Soft Drinking,"n , k , l , c , d , p , a , b = map ( int , input (). split ()) print ( min ( k * l // a , c * d , p // b )// n )"
152,152A - Marks,"n ,  m  =  map ( int ,  input (). split ()) r  =   [ input ()   for  _  in  range ( n )] table  =   [ max ( i )   for  i  in  zip (* r )] print ( sum ( any ( i [ idx ]   ==  table [ idx ]   for  idx  in  range ( m ))   for  i  in  r ))"
154,154A - Hometask,"p ,  t  =   {},  input () a ,  n  =   False ,  len ( t ) x  =  y  =  s  =   0 q  =   [ input ()   for  i  in  range ( int ( input ()))] for  a ,  b  in  q :  p [ a ],  p [ b ]   =  b ,  a for  i  in  t :      if  a :          if  i  ==  a :  x  +=   1          elif  i  ==  b :  y  +=   1          else :             s  +=  min ( x ,  y )              if  i  in  p :                 a ,  b  =  i ,  p [ i ]                 x ,  y  =   1 ,   0              else :  a  =   False      elif  i  in  p :                  a ,  b  =  i ,  p [ i ]         x ,  y  =   1 ,   0 if  a :  s  +=  min ( x ,  y ) print ( s )"
155,155A - I_love_\%username\%,"n = int ( input ()) a = list ( map ( int , input (). split ())) x = a [: 1 ] for  i  in  a : 	n -= min ( x )<= i <= max ( x ) 	x +=[ i ] print ( n )"
156,156A - Message,"s ,  u  =  input (),  input () t  =   [ 0 ]   *  len ( s ) p  =   { i :   []   for  i  in   'abcdefghijklmnopqrstuvwxyz' } for  i ,  j  in  enumerate ( s ):  p [ j ]. append ( i ) for  j  in  u :      for  i  in  p [ j ]:  t [ i ]   +=   1     t  =   [ 0 ]   +  t print ( len ( u )   -  max ( t ))"
157,157A - Game Outcome,"A  =   [ list ( map ( int ,  input (). split ()))   for  _  in  range ( int ( input ()))]   print ( sum ( h < v  for  h  in  map ( sum ,  A )   for  v  in  map ( sum ,  zip (* A ))))"
158,158A - Next Round,"i = lambda : map ( int , input (). split ()); n , k = i (); l = list ( i ()); print ( sum ( v >= max ( 1 , l [ k - 1 ]) for  v  in  l ))"
159,159A - Friends or Not,"def  readln ():   return  tuple ( map ( int ,  input (). split ()))   n ,  d  =  readln () a  =   [] b  =   [] for  _  in  range ( n ):     p ,  q ,  t  =  input (). split ()     t  =  int ( t )      if  p  >  q :         a . append (( p ,  q ,  t ))      else :         b . append (( q ,  p ,  t )) ans  =  set () for  p ,  q ,  t  in  a :      for  p1 ,  q1 ,  t1  in  b :          if  p  ==  p1  and  q  ==  q1  and   0   <  abs ( t  -  t1 )   <=  d :             ans . add ( p  +   ' '   +  q ) print ( len ( ans )) print ( '\n' . join ( ans ))"
160,160A - Twins,"input (); a = sorted ( map ( int , input (). split ())); s = c = 0 while  s <= sum ( a ): s += a . pop (); c += 1 print ( c )"
161,161A - Dress'em in Vests!,"I  =   lambda :  list ( map ( int ,  input (). split ())) n ,  m ,  x ,  y  =  I () a ,  b  =  I (),  I () l  =   [] j  =   0 for  i  in  range ( n ):      while  j  <  m  and  b [ j ]   <=  a [ i ]   +  y :          if  a [ i ]   -  x  <=  b [ j ]:             j  +=   1             l  +=   [( i  +   1 ,  j )]              break         j  +=   1 print ( len ( l )) for  i ,  j  in  l :      print ( i ,  j )"
165,165A - Supercentral Point,"a =[[* map ( int , input (). split ())] for  _  in [ 0 ]* int ( input ())] c = lambda  a , b :( a > b )-( a < b ) print ( sum ( len ({( c ( x , X ), c ( y , Y )) for  x , y  in  a  if  x == X  or  y == Y })> 4   for  X , Y  in  a ))"
166,166A - Rank List,"I  =   lambda :  map ( int ,  input (). split ())   n ,  k  =  I () A  =  sorted (( tuple ( I ())   for  _  in  range ( n )),  key = lambda  x :   (- x [ 0 ],  x [ 1 ]))   print ( A . count ( A [ k - 1 ]))"
167,167A - Wizards and Trolleybuses,"n ,  a ,  d  =  map ( int ,  input (). split ()) p  =   [ 0 ]   *  n for  i  in  range ( n ):     t ,  v  =  map ( int ,  input (). split ())     x  =  v  /  a     y  =   ( 2   *  d  /  a )   **   0.5     p [ i ]   =  t  +  y  if  y  <  x  else  t  +  d  /  v  +  x  /   2     p [ i ]   =  max ( p [ i  -   1 ],  p [ i ]) print ( '\n' . join ( map ( str ,  p )))"
168,168A - Wizards and Demonstration,"n , x , y = map ( int , input (). split ()) print ( max ( 0 ,( 0 -- n * y // 100 )- x ))"
169,169A - Chores,"i = lambda : map ( int , input (). split ()) * _ , b = i () c = sorted ( i ()) print ( c [ b ]- c [ b - 1 ])"
171,171A - Mysterious numbers - 1,"a , b = input (). split () print ( int ( a )+ int ( b [::- 1 ]))"
172,172A - Phone Code,"j ,  n  =   0 ,  int ( input ()) t  =   [ input ()   for  i  in  range ( n )] while  len ( set ( i [ j ]   for  i  in  t ))   ==   1 :  j  +=   1 print ( j )"
173,173A - Rock-Paper-Scissors,"f  =   lambda  x ,  y  :   0   if  x  +  y  ==   'RS'   or  x  +  y  ==   'SP'   or  x  +  y  ==   'PR'   else   1   if  x  ==  y  else   2 n  =  int ( input ()) * s ,   =  input () * t ,   =  input () m ,  k ,  res  =  len ( s ),  len ( t ),   [ 0 ]   *   3 for  i  in  range ( m  *  k ): 	 if  i  <  n : 		res [ f ( s [ i  %  m ],  t [ i  %  k ])]   +=   ( n  -   1   -  i )   //   ( m  *  k )   +   1 print ( res [ 2 ],  res [ 0 ])"
174,174A - Problem About Equation,"I = lambda : map ( int , input (). split ()) P = print n , b = I () a = list ( I ()) x =( b + sum ( a ))/ n if  any ( i > x  for  i  in  a ): P (- 1 ) else :[ P ( x - i ) for  i  in  a ]"
175,175A - Robot Bicorn Attack,"s = input () a =- 1 for  i  in  range ( 1 , len ( s )): 	 for  j  in  range ( i + 1 , len ( s )): 		x =[ s [: i ], s [ i : j ], s [ j :]] 		 if  sum ( map ( lambda  s :( len ( s )< 2or  s [ 0 ]!= '0' ) and  int ( s )<= 10 ** 6 ,[ s [: i ], s [ i : j ], s [ j :]]))== 3 : a = max ( a , sum ( map ( int , x ))) print ( a )"
176,176A - Trading Business,"I = lambda : map ( int , input (). split ()) R = range n , m , k = I () def  r ( a , b , c = k ): 	q = 0 	 for  a , b  in  sorted (( b [ i ][ 1 ]- a [ i ][ 0 ], a [ i ][ 2 ]) for  i  in  R ( m ))[::- 1 ]: 		 if  a < 1or  c < 1 : break 		q += a * min ( b , c ); c -= b 	 return  q w =[] for  _  in   '0' * n : I (); w +=[[ list ( I ()) for  _  in   '0' * m ]] print ( max ( r ( w [ i ], w [ j ]) for  i  in  R ( n ) for  j  in  R ( n )))"
180,180A - Defragmentation,"import  sys n ,  m ,   * inp  =  map ( int ,  sys . stdin . read (). split ())   inp . reverse () f  =   [[ 0   for  x  in  range ( 201 )]   for  y  in  range ( 201 )]       #2D Array c  =   [( 0 , 0 )]* 201 f_size  =   [ 0 ]* 201   def  putData ( f_id ,  s_id ,  c_id ):      global  f ,  c     f [ f_id ][ s_id ]   =  c_id     c [ c_id ]   =   ( f_id ,  s_id )   for  f_id  in  range ( 1 ,  m + 1 ):     f_size [ f_id ]   =  inp . pop ()      for  s_id  in  range ( 1 ,  f_size [ f_id ]+ 1 ):         c_id  =  inp . pop ()         putData ( f_id ,  s_id ,  c_id )   e_id  =  c [ 1 :]. index (( 0 , 0 ))+ 1 next_id  =   1 op  =   []   for  f_id  in  range ( 1 ,  m + 1 ):      for  s_id  in  range ( 1 ,  f_size [ f_id ]+ 1 ):          if  c [ next_id ]==( f_id ,  s_id ):             next_id  +=   1              continue          if  c [ next_id ]   !=   ( 0 ,   0 ):             op . append (( next_id ,  e_id ))             putData ( c [ next_id ][ 0 ],  c [ next_id ][ 1 ],  e_id )         e_id  =  f [ f_id ][ s_id ]         c [ e_id ]   =   ( 0 , 0 )         op . append (( e_id ,  next_id ))         putData ( f_id ,  s_id ,  next_id )         next_id  +=   1   print ( len ( op )) for  p  in  op :      print ( ""%d %d""   %  p )  "
181,181A - Series of Crimes,"r = int ( input (). split ()[ 0 ]) x = y = 0 for  i  in  range ( r ):    for  j , v  in  enumerate ( input ()):      if  v == '*' :  x ^= j ; y ^= i print ( y + 1 , x + 1 )"
183,183A - Headquarters,"n  =  int ( input ()) r  =   1 ;  c  =   1 for  i  in  range ( n ):     s  =  input ()      if   ( len ( s )   ==   4 ):         r  +=   1 ;  c  +=   1      elif ( s  ==   ""UL""   or  s  ==   ""DR"" ):         r  +=   1      else :         c  +=   1 print ( r  *  c )"
185,185A - Plant,"n , m = int ( input ()), 1000000007 n = pow ( 2 , n , m ) print (((( n % m )*(( n + 1 )% m ))// 2 )% m )"
186,186A - Comparing Strings,"from  collections  import   Counter a = input () b = input () print ( 'YNEOS' [ Counter ( a )!= Counter ( b )   or  sum ( i != j  for  i , j  in  zip ( a , b ))> 2 :: 2 ])"
187,187A - Permutations,"n  =  int ( input ()) a ,  b  =  list ( map ( int ,  input (). split ())),  list ( map ( int ,  input (). split ())) i  =  j  =   0 while  i  <  n  and  j  <  n :      if  b [ j ]   ==  a [ i ]:  i  +=   1     j  +=   1 print ( n  -  i )"
189,189A - Cut Ribbon,"n , a , b , c = map ( int , input (). split ()) z =[ 0 ]+[- 1e9 ]* 5000 for  i  in  range ( 1 , n + 1 ): z [ i ]= max ( z [ i - a ], z [ i - b ], z [ i - c ])+ 1 print ( z [ n ])"
190,190A - Vasya and the Bus,"n ,  m  =  map ( int ,  input (). split ()) print (*[[ n + m - min ( m ,  n ),   [ n , m + n - 1 ][ m > 0 ]],[ 'Impossible' ]][ n == 0   and  m > 0 ])"
192,192A - Funky Numbers,"T  =   { k *( k + 1 )// 2   for  k  in  range ( 1 , 44721 )}   n  =  int ( input ())   print ( 'YES'   if  any ( n - t  in  T  for  t  in  T )   else   'NO' )"
194,194A - Exams,"n , k = map ( int , input (). split ()) print ( max ( n * 3 - k , 0 ))"
195,195A - Let's Watch Football,"a , b , c = map ( int , input (). split ()) print ( 0 --( a * c )// b - c )"
196,197C - Lexicographically Maximum Subsequence,"a , b , c = map ( int , input (). split ()) print ( 0 --( a * c )// b - c )"
197,197A - Plate Game,"a , b , r = map ( int , input (). split ()) print ([ ""First"" , 'Second' ][ a < 2 * r  or  b < 2 * r ])"
198,198A - About Bacteria,"k ,  b ,  n ,  t  =  map ( int ,  input (). split ()) z  =  int ( 1 ) res  =  int ( n )   for  i  in  range ( n ): 	z  =  k * z  +  b 	 if  z  <=  t : 		res  -=   1 	 else : 		 break   print ( res )"
199,199A - Hexadecimal's theorem,"print ( input (), 0 , 0 )"
201,201A - Clear Symmetry,"x  =  int ( input ()) print ( 5   if  x == 3   else   [ i  for  i  in  range ( 1 ,   17 ,   2 )   if  i * i + 1 >= 2 * x ][ 0 ])"
202,202A - LLPS,z = input (); j = max ( z ); print ( z . count ( j )* j )
203,203A - Two Problems,"x , t , a , b , c , d = map ( int , input (). split ()) R = range ( t ) y = x == 0 for  i  in  R : 	 if  x == a - c * i  or  x == b - d * i : y = 1 	 for  j  in  R : y |= x == a + b - c * i - d * j print ([ 'NO' , 'YES' ][ y ])"
204,204A - Little Elephant and Interval,"def  f ( x ):   return  x  if  x < 10   else  x // 10 + 9 -( 0   if  str ( x )[ 0 ]<= str ( x )[- 1 ]   else   1 )   l ,  r  =  map ( int , input (). split ()) print ( f ( r )- f ( l - 1 ))"
205,205A - Little Elephant and Rozdil,"input () a =* map ( int , input (). split ()), c = min ( a ) print ([ a . index ( c )+ 1 , 'Still Rozdil' ][ a . count ( c )> 1 ])"
208,208A - Dubstep,print (* input (). split ( 'WUB' ))
209,209A - Multicolored Marbles,"n  =  int ( input ()) m  =  int ( 1e9   +   7 ) u ,  v  =   0 ,   1 for  _  in  range ( n  -   1 ):     u ,  v  =  v ,   ( u  +  v  +   2 )   %  m print ( v )"
213,213A - Game,"f  =   lambda :   [ int ( q )   -   1   for  q  in  input (). split ()] def  g ():      for  i  in  p :          if  h [ i ]   ==  k  and   not  v [ i ]:   return  i   r  =  range ( int ( input ())) t ,  h  =   1e9 ,  f () u  =   [ set ( f ()[ 1 :])   for  i  in  r ]   for  k  in   ( 0 ,   1 ,   2 ):     p  =  list ( r )     d  =   - 1     v  =   [ q . copy ()   for  q  in  u ]        while  p :         i  =  g ()          while  i  !=   None :             d  +=   1             p . remove ( i )              for  q  in  v :  q . discard ( i )             i  =  g ()         k  =   ( k  +   1 )   %   3         d  +=   1       t  =  min ( d ,  t )   print ( t )"
214,214A - System of Equations,"n , m = map ( int , input (). split ()) r = range ( 32 ) print ( sum ( a * a + b - n == a + b * b - m == 0   for  a  in  r  for  b  in  r ))"
215,215A - Bicycle Chain,"i = lambda : list ( map ( int , input (). split ())) i () a = i () i () b = i () l =[ x // y  for  x  in  b  for  y  in  a  if  x % y == 0 ] print ( l . count ( max ( l )))"
216,216A - Tiling with Hexagons,"a , b , c = map ( int , input (). split ()); print (( a + b - 1 )*( c - 1 )+ a * b )"
217,217A - Ice Skating,"n = int ( input ( '' )) r =[- 1   for  i  in  range ( 2005 )] def  f ( v ):      if  r [ v ]< 0 :         r [ v ]= v      if  r [ v ]!= v :         r [ v ]= f ( r [ v ])      return  r [ v ]      for  i  in  range ( n ):     x , y = map ( int , input (). split ())     y += 1000     n -=( r [ x ]>= 0 )+( r [ y ]>= 0 )-( f ( x )== f ( y ))     r [ f ( x )]= f ( y ) print ( n - 1 )"
218,218A - Mountain Scenery,"n , m = map ( int , input (). split ()) l = list ( map ( int , input (). split ())) for  i  in  range ( 1 , 2 * n , 2 ):      if   ( l [ i ]- 1 )> max ( l [ i - 1 ], l [ i + 1 ])   and  m > 0 :         l [ i ]-= 1         m -= 1 print (* l )"
219,219A - k-String,"n = int ( input ()) s = sorted ( input ()) x = s [:: n ]* n if  sorted ( x )== s :      print ( """" . join ( x )) else :      print (- 1 )"
220,220A - Little Elephant and Problem,"n = int ( input ()) a = list ( map ( int , input (). split ())) b = sorted ( a ) print ([ ""NO"" , ""YES"" ][ sum ([ a [ i ]!= b [ i ] for  i  in  range ( n )])< 3 ])"
221,221A - Little Elephant and Function,"n  =  int ( input ()) print ( n ,   * range ( 1 , n ))"
222,222A - Shooshuns and Sequence,"n , k = map ( int , input (). split ()) l = input (). split () while  n  and  l [ n - 1 ]== l [- 1 ]:     n -= 1 print ( n  if  k > n  else   - 1 )"
223,223A - Bracket Sequence,"string  =  list ( input ())   d ,  p  =   [],  set ( range ( len ( string )))   for  j ,  q  in  enumerate ( string ):      if  q  in   '([' :  d . append (( j , q ))      elif  d :         i ,  x  =  d . pop ()          if  x + q  in   '(][)' :  d  =   []          else :  p  -=   { i ,  j }   n ,  s  =   0 ,   '' for  i  in  p :  string [ i ]   =   ' ' for  k  in   """" . join ( string ). split ():      if  k . count ( ""["" )   >  n :         n  =  k . count ( ""["" )         s  =  k   print ( n ,  s )"
224,224A - Parallelepiped,"a , b , c = map ( int , input (). split ()) k =( a * b * c )** 0.5 print ( 4 * int ( k / a + k / b + k / c ))"
225,225A - Dice Tower,"n  =  int ( input ()) x  =  int ( input ()) s  =   { x ,   7 - x }   print (( 'YES' , 'NO' )[ any ( s & set ( map ( int ,  input (). split ()))   for  _  in  range ( n ))])"
226,226A - Flying Saucer Segments,"n , m = map ( int , input (). split ()); print (( pow ( 3 , n , m )- 1 )% m )"
227,227A - Where do I Turn?,"a , b , c , d , e , f = map ( int , input (). split ()+ input (). split ()+ input (). split ()) g =( c - a )*( f - b )-( e - a )*( d - b ) if  g > 0 : print ( 'LEFT' ) elif  g < 0 : print ( 'RIGHT' ) else : print ( 'TOWARDS' )"
228,228A - Is your horseshoe on the other hoof?,print ( 4 - len ({* input (). split ()}))
229,229A - Shifts,"G  =   [[],   [ 1 ],   [ 1 ,   1 ],   [ 1 ,   2 ,   1 ],   [ 1 ,   2 ,   2 ,   1 ],   [ 1 ,   2 ,   3 ,   2 ,   1 ]]   def  g ( k ):      global  G      if  k  <   6 :   return  G [ k ]      return  list ( range ( 1 ,   ( k  +   1 )   //   2   +   1 ))   +  list ( range ( k  //   2 ,   0 ,   - 1 ))   def  f ():     n ,  m  =  map ( int ,  input (). split ())     s ,  p  =   [ 0 ]   *  m ,   [ 0 ]   *  m      for  i  in  range ( n ):         q  =   [ j  for  j ,  x  in  enumerate ( input ())   if  x  ==   '1' ]          if   not  q :   return   - 1         c  =  q . pop ( 0 )         p [ c ],  a  =   0 ,  c  +   1          for  b  in  q :             p [ b ]   =   0              if  b  >  a :  p [ a :  b ]   =  g ( b  -  a )             a  =  b  +   1          if  c  +  m  >  a :             t  =  g ( c  +  m  -  a )             p [ a :   ],  p [:  c ]   =  t [:  m  -  a ],  t [ m  -  a :   ]          for  j ,  x  in  enumerate ( p ):  s [ j ]   +=  x      return  min ( s ) print ( f ())"
230,230A - Dragons,"f = lambda : map ( int , input (). split ()) s , n = f () for  a ,  b  in  sorted ( list ( f ())   for  i  in   ' ' * n ): 	s =( s + b )*( s > a ) print ( 'YNEOS' [ s < 1 :: 2 ])"
231,231A - Team,print ( sum ( input (). count ( '1' )> 1for  x  in   [ 0 ]* int ( input ())))
232,232A - Cycles,"n  ,  k  =   0   ,  int ( input ()) p =[[ '0' ]* 100   for  i  in  range ( 100 )] while  k : 	 for  i  in  range ( n ): 		 if  i > k : 			 break 		p [ n ][ i ]= p [ i ][ n ]= '1' 		k = k - i 	n += 1 print ( n ) for  i  in  range ( n ):   print ( '' . join ( p [ i ][: n ]))"
233,233A - Perfect Permutation,"n = int ( input ()); print (*[[ i  for  i  in  range ( n , 0 ,- 1 )],[- 1 ]][ n & 1 ])"
234,234A - Lefthanders and Righthanders,"i , o = open ( ""input.txt"" , ""r"" ), open ( ""output.txt"" , ""w"" ) n , s = int ( i . readline (). strip ()), i . readline (). strip () for  x  in  range ( n // 2 ):   a , b = x , x + n // 2    if  s [ a ]== 'R' and  s [ b ]== 'L' : a , b = b , a   o . write ( str ( a + 1 )+ "" "" + str ( b + 1 )+ ""\n"" )"
235,235A - LCM Challenge,n  =  int ( input ()) print ( n  if  n  <   3   else   (( n  -   1 )   *   ( n  *   ( n  -   2 )   if  n  &   1   else   ( n  -   3 )   *   ( n  if  n  %   3   else  n  -   2 ))))
236,236A - Boy or Girl,"print ([ ""CHAT WITH HER!"" , ""IGNORE HIM!"" ][ len ({* input ()})% 2 ])"
237,237A - Free Cash,"d ={} for  i  in  range ( int ( input ())): 	s = input () 	d [ s ]= d . get ( s , 0 )+ 1 print ( max ( d . values ()))"
238,238A - Not Wool Sequences,"e = 10 ** 9 + 9 n , m = map ( int , input (). split ()) t = pow ( 2 , m , e ) r = 1 for  i  in  range ( n ): r =( r *( t - i - 1 ))% e print ( r )"
239,239A - Two Bags of Potatoes,"y ,  k ,  n  =  map ( int , input (). split ()) s  =   ' ' . join ( map ( str ,  range ( k - y % k ,  n - y + 1 ,  k )))   print ( s  if  s  else   - 1 )"
240,234D - Cinema,"y ,  k ,  n  =  map ( int , input (). split ()) s  =   ' ' . join ( map ( str ,  range ( k - y % k ,  n - y + 1 ,  k )))   print ( s  if  s  else   - 1 )"
241,241A - Old Peykan,"from  math  import  ceil n ,  k  =  map ( int , input (). split ()) d  =  list ( map ( int , input (). split ())) s  =  list ( map ( int , input (). split ())) fuel  =   0 stor  =   0 time  =   0   for  i  in  range ( n ): 	fuel +=  s [ i ] 	stor  =  max ( stor ,  s [ i ]) 	 if  fuel  >=  d [ i ]: 		fuel -=  d [ i ] 		time +=  d [ i ] 	 else : 		yy  =  ceil (( d [ i ]   -  fuel )   /  stor ) 		time +=  k  *  yy 		time +=  d [ i ] 		fuel +=  stor  *  yy 		fuel -=  d [ i ] print ( time )"
242,242A - Heads or Tails,"x ,  y ,  a ,  b  =  map ( int ,  input (). split ()) C  =   [( i , j )   for  i  in  range ( max ( a , b + 1 ),  x + 1 )   for  j  in  range ( b ,  min ( i , y + 1 ))]   print ( len ( C ))   for  c  in  C :      print (* c )"
243,243A - The Brand New Function,"input (); a , b = set (), set () for  i  in  map ( int , input (). split ()): a ={ i | j  for  j  in  a };  a . add ( i ,); b . update ( a ) print ( len ( b ))"
244,244A - Dividing Orange,"n , k = map ( int , input (). split ()); l = list ( map ( int , input (). split ())) a =[ x  for  x  in  range ( 1 , n * k + 1 )   if  x  not   in  l ] for  x  in  range ( k ): print ( l [ x ],* a [ x *( n - 1 ):( x + 1 )*( n - 1 )])"
245,245A - System Administrator,"a =[ 0 , 0 ] for  _  in   [ 0 ]* int ( input ()):   t , x , y = map ( int , input (). split ())   a [ t - 1 ]+= x - y for  x  in  a :   print ([ 'LIVE' , 'DEAD' ][ x < 0 ])"
246,246A - Buggy Sorting,"n = int ( input ()) print (*[[ 2 , 2 ]+[ 1 ]*( n - 2 ),[- 1 ]][ n < 3 ])"
247,250A - Paper Work,"n = int ( input ()) print (*[[ 2 , 2 ]+[ 1 ]*( n - 2 ),[- 1 ]][ n < 3 ])"
248,248A - Cupboards,"n = int ( input ()) l , r = 0 , 0 for  _  in  range ( n ): 	a , b = map ( int , input (). split ()) 	l += a 	r += b print ( min ( l , n - l )+ min ( r , n - r ))"
250,250A - Paper Work,"n = c = 0 ; r =[] for  x  in  map ( int ,[* open ( 0 )][ 1 ]. split ()):    if  x < 0 :      if  n == 2 :       r +=[ c ]       n = 1       c = 0      else : n += 1   c += 1 r +=[ c ] print ( len ( r )) print (* r )"
251,252C - Points on Line,"n = c = 0 ; r =[] for  x  in  map ( int ,[* open ( 0 )][ 1 ]. split ()):    if  x < 0 :      if  n == 2 :       r +=[ c ]       n = 1       c = 0      else : n += 1   c += 1 r +=[ c ] print ( len ( r )) print (* r )"
252,252A - Little Xor,"n = int ( input ()) a = list ( map ( int , input (). split ())) m = 0 for  i  in  range ( n ): 	k = 0 	 for  j  in  range ( i ,- 1 ,- 1 ): 		k ^= a [ j ] 		 if  k > m : 			m = k print ( m )"
253,253A - Boys and Girls,"f = open ( ""input.txt"" , 'r' ) g = open ( ""output.txt"" , 'w' ) n , m = map ( int , f . readline (). split ()) t = min ( n , m ) g . write ([ 'GB' , 'BG' ][ t == m ]* t + 'G' *( m - t )+ 'B' *( n - t ))"
254,254A - Cards with Numbers,"import  sys sys . stdin  =  open ( ""input.txt"" ,   ""r"" ) sys . stdout  =  open ( ""output.txt"" ,   ""w"" ) n = int ( input ()) d ={} for  x , y  in  enumerate ( input (). split (), 1 ):     d . setdefault ( y ,[]). append ( x ) if  any ( len ( d [ i ])% 2 != 0   for  i  in  d ):      print (- 1 )     exit ( 0 ) for  i  in  d :      print ( ""\n"" . join ( ""{0} {1}"" . format (* k )   for  k  in  zip ( d [ i ][:: 2 ], d [ i ][ 1 :: 2 ])))"
255,255A - Greg's Workout,"input () a =[* map ( int , input (). split ())] print ([ 'chest' , 'biceps' , 'back' ][ max ( 0 , 1 , 2 , key = lambda  i :  sum ( a [ i :: 3 ]))])"
257,257A - Sockets,"n , m , k = input (). split () n = int ( n ) m = int ( m ) k = int ( k ) l  =  list ( map ( int , input (). split ())) l . sort () l . reverse () z = k f = 0 while ( z < m  and  f < n ): 	z += l [ f ]- 1 	f += 1 if ( z >= m ): 	 print ( f ) else : 	 print (- 1 )"
258,258A - Little Elephant and Bits,"n = input () z = max ( 0 , n . find ( '0' )) print ( n [: z ]+ n [ z + 1 :])"
259,259A - Little Elephant and Chess,"exec ( ""print('YNEOS'[any('WW'in a or'BB' in a for a in["" + 8 * ""input(),"" + ""])::2])"" )"
260,260A - Adding Digits,"a , b , n = map ( int , input (). split ()) R =- 1 for  i  in  range ( 10 ): 	r = a * 10 + i 	 if  r % b == 0 : R = str ( r )+ '0' *( n - 1 ) print ( R )"
261,262C - Maxim and Discounts,"a , b , n = map ( int , input (). split ()) R =- 1 for  i  in  range ( 10 ): 	r = a * 10 + i 	 if  r % b == 0 : R = str ( r )+ '0' *( n - 1 ) print ( R )"
262,262A - Roma and Lucky Numbers,i = lambda : input (). split () k = int ( i ()[ 1 ]) print ( sum ( sum ( c  in   '47' for  c  in  x )<= k  for  x  in  i ()))
263,263A - Beautiful Matrix,"l =[ 2 , 1 , 0 , 1 , 2 ] for  i  in  l :  s = input ()   if ""1"" in  s : print ( i + l [ s . find ( ""1"" )// 2 ])"
264,264A - Escape from Stones,"a  =  input () n  =  len ( a ) for  i  in  range ( n ): 	 if   ( a [ i ]   ==   'r' ): 		 print ( i  +   1 ) for  i  in  range ( n  -   1 ,   - 1 ,   - 1 ): 	 if   ( a [ i ]   ==   'l' ): 		 print ( i  +   1 )"
265,265A - Colorful Stones (Simplified Edition),s = input () i = 0 for  c  in  input ():  i +=( s [ i ]   ==  c ) print ( i + 1 )
266,266A - Stones on the Table,"r = input ; r (); c = r (); print ( sum ( p == n  for  p , n  in  zip ( c [ 1 :], c )))"
267,267A - Subtractions,"f = lambda  x , y : f ( y % x , x )+ y // x  if  x  else   0 I = input for  _  in '0' * int ( I ()): a , b = map ( int , I (). split ()); print ( f ( a , b ))"
268,268A - Games,"n = int ( input ()) a , b = zip (*( input (). split () for  _  in   ' ' * n )) print ( sum ( a . count ( x ) for  x  in  b ))"
269,269A - Magical Boxes,"t  =   [ tuple ( map ( int ,  input (). split ()))   for  i  in  range ( int ( input ()))] print (( max ( 2   *  x  +  len ( bin ( y  -   1 ))   for  x ,  y  in  t )   +   1 )   //   2   -   1 )"
270,270A - Fancy Fence,"i = input ; exec ( int ( i ())* 'print(""YNEOS""[360%(180-int(i()))>0::2]);' )"
271,271A - Beautiful Year,s = int ( input ())+ 1 while  len ( set ( str ( s )))< 4 : s += 1 print ( s )
272,272A - Dima and Friends,"n = int ( input ()) a = sum ( map ( int , input (). split ())) print ( sum (( a + i )%( n + 1 )!= 1   for  i  in  range ( 1 , 6 )))"
273,272C - Dima and Staircase,"n = int ( input ()) a = sum ( map ( int , input (). split ())) print ( sum (( a + i )%( n + 1 )!= 1   for  i  in  range ( 1 , 6 )))"
274,275C - k-Multiple Free Set,"n = int ( input ()) a = sum ( map ( int , input (). split ())) print ( sum (( a + i )%( n + 1 )!= 1   for  i  in  range ( 1 , 6 )))"
275,275A - Lights Out,"a =[[ 0 ,* map ( int , input (). split ()), 0 ] for  _  in [ 0 ]* 3 ] a =[[ 0 ]* 5 ,* a ,[ 0 ]* 5 ] dy =[ 0 ,- 1 , 0 , 0 , 1 ] dx =[ 0 , 0 ,- 1 , 1 , 0 ] for  i  in  range ( 1 , 4 ):    print ( '' . join ([ str ( 1 - sum ( a [ i + y ][ j + x ]   for  x , y  in  zip ( dx , dy ))% 2 ) for  j  in  range ( 1 , 4 )]))  "
276,276A - Lunch Rush,"I = lambda : map ( int , input (). split ()) n , k = I () print ( max (( lambda  a , b : a - max ( 0 , b - k ))(* I ()) for  i  in [ 0 ]* n ))"
277,277A - Learning Languages,"I = lambda : list ( map ( int , input (). split ())) n , m = I () r = 0 t =[] for  _  in  range ( n ): 	l = I (); 	 if  l [ 0 ]== 0 : r += 1 	 else : t +=[ set ( l [ 1 :])] i = 0 while  i < len ( t ): 	 for  j  in  t [ i + 1 :]: 		 if  t [ i ]& j : t [ i ]|= j ; t . remove ( j ); break 	 else : i += 1 print ( max ( 0 , len ( t )- 1 )+ r )"
278,278A - Circle Line,"I = lambda : list ( map ( int , input (). split ())) I () d =[ 0 ]+ I () s , t = sorted ( I ()) s = sum ( d [ s : t ]) print ( min ( sum ( d )- s , s ))"
279,279A - Point on Spiral,"x , y  =  map ( int , input (). split ()) if  y > x  and  x >=- y :   print ( y * 4 - 2 ) elif  y < x  and  x <=- y + 1 :   print (- y * 4 ) elif  y <= x  and  x >- y + 1 :   print ( x * 4 - 3 ) elif  y >= x  and  x <- y :   print (- 1 - 4 * x ) else :   print ( 0 )"
280,280A - Rectangle Puzzle,"#!/usr/bin/python3 from  math  import   *   w , h , alpha  =   [ int ( x )   for  x  in  input (). strip (). split ()]   if  alpha  >   90   :  alpha  =   180 - alpha if  w  <  h :  w , h  =  h , w   c  =  cos ( alpha * pi / 180.0 ) s  =  sin ( alpha * pi / 180.0 ) t  =  tan ( alpha * pi / 360.0 )   print ( h * h / s )   if  t  >  h / w  else   print (   ( w * h -( w * w + h * h )/ 2 * tan ( alpha * pi / 360.0 ))/( c )   )"
281,281A - Word Capitalization,s = input (); print ( s [ 0 ]. upper ()+ s [ 1 :])
282,282A - Bit++,print ( sum ( 44 - ord ( input ()[ 1 ]) for  i  in [ 0 ]* int ( input ())))
283,283A - Cows and Sequence,"n  =  int ( input ()) a ,  b  =   [ 0 ]   *   ( n  +   2 ),   [ 0 ]   *   ( n  +   2 ) s ,  l  =   0 ,   1 p  =   [ 0 ]   *  n for  i  in  range ( n ):     t  =  list ( map ( int ,  input (). split ()))      if  t [ 0 ]   ==   1 :         b [ t [ 1 ]   -   1 ]   +=  t [ 2 ]         s  +=  t [ 1 ]   *  t [ 2 ]      elif  t [ 0 ]   ==   2 :         a [ l ]   =  t [ 1 ]         l  +=   1         s  +=  t [ 1 ]      else :         l  -=   1         s  -=  a [ l ]   +  b [ l ]         b [ l  -   1 ]   +=  b [ l ]         b [ l ]   =   0     p [ i ]   =  str ( s  /  l ) print ( '\n' . join ( p ))"
284,284A - Cows and Primitive Roots,"import  math sol  =   0 p = int ( input ()) for  e  in  range ( 1 ,  p ):       if  math . gcd ( p - 1 ,  e )   ==   1 :  sol += 1 print ( sol )"
285,285A - Slightly Decreasing Permutations,"n , k = map ( int , input (). split ()) print (* range ( 1 , n - k ),* range ( n , n - 1 - k ,- 1 ))"
286,286A - Lucky Permutation,"n  =  int ( input ()) if  n % 4   >   1 :    print (- 1 ) else :   a  =   [ n + 1 >> 1 ]* n    for  i  in  range ( n // 4 ):     j  =  i * 2     a [ j ],  a [ j + 1 ],  a [- 2 - j ],  a [- 1 - j ]   =  j + 2 ,  n - j ,  j + 1 ,  n - 1 - j    print ( ' ' . join ( map ( str ,  a )))"
287,287A - IQ Test,"a = '' . join ([ input () for  _  in [ 0 ]* 4 ]) print ( 'YNEOS' [ all ([ a [ x ], a [ x + 1 ], a [ x + 4 ], a [ x + 5 ]]. count ( '.' )== 2   for  x  in [ 0 , 1 , 2 , 4 , 5 , 6 , 8 , 9 , 10 ]):: 2 ])"
288,288A - Polo the Penguin and Strings,"n , k = map ( int , input (). split ()) if  k > n  or  k == 1   and  n != 1 : print (- 1 ) else :     s =( ""ab"" *( n // 2 + 1 ))[: n ]      print ( s [:-( k - 2 )]+ '' . join ([ chr ( 97 + i )   for  i  in  range ( 2 , k )])   if  k > 2   else  s )"
289,289A - Polo the Penguin and Segments,"n ,  k  =  map ( int ,  input (). split ()) print (( sum ( int ( l )   -  int ( r )   for  l ,  r  in   [ input (). split ()   for  i  in  range ( n )])   -  n )   %  k )"
290,290A - Mysterious strings,"a  =   'Washington,Adams,Jefferson,Madison,Monroe,Adams,Jackson,Van Buren,Harrison,Tyler,Polk,Taylor,Fillmore,Pierce,Buchanan,Lincoln,Johnson,Grant,Hayes,Garfield,Arthur,Cleveland,Harrison,Cleveland,McKinley,Roosevelt,Taft,Wilson,Harding,Coolidge,Hoover,Roosevelt,Truman,Eisenhower,Kennedy,Johnson,Nixon,Ford,Carter,Reagan,Bush,Clinton' . split ( ',' ) print ( a [ int ( input ())- 1 ])"
291,291A - Spyke Talks,"a =[* open ( 0 )][ 1 ]. split () a =[ a . count ( x ) for  x  in   {* a }-{ '0' }] print ([ a . count ( 2 ),- 1 ][ max ( a +[ 0 ])> 2 ])"
292,292A - SMSC,"n  =  int ( input ()) a1 , a2  =   0 , 0 r  =   0 for  _  in  range ( n ):     b1 , b2  =  map ( int , input (). split ())     a2  =  max ( 0 , a2 -( b1 - a1 ))+ b2     r  =  max ( r , a2 )     a1  =  b1 print ( a1 + a2 , r )  "
293,293A - Weird Game,"n  =  int ( input ()) a ,  b  =  input (),  input () t  =   { i  +  j :   0   for  i  in   '01'   for  j  in   '01' } for  i  in  range ( 2   *  n ):  t [ a [ i ]   +  b [ i ]]   +=   1 d  =  t [ '11' ]   &   1 d  +=   ( t [ '10' ]   -  t [ '01' ]   +   1   -  d )   //   2 if  d  >   0 :  d  =   1 elif  d  <   0 :  d  =   2 print ([ 'Draw' ,   'First' ,   'Second' ][ d ])"
294,294A - Shaass and Oskols,"i = lambda :[* map ( int , input (). split ())] n = i ()[ 0 ]; a =[ 0 ]+ i ()+[ 0 ] for  _  in [ 0 ]* i ()[ 0 ]: x , y = i (); a [ x - 1 ]+= y - 1 ; a [ x + 1 ]+= a [ x ]- y ; a [ x ]= 0 print (* a [ 1 : n + 1 ], sep = '\n' )"
295,295A - Greg and Array,"from  sys  import  stdin ,  stdout   rd  =   lambda :  list ( map ( int ,  stdin . readline (). split ()))   n ,  m ,  k  =  rd () a  =  rd () b  =   [ rd ()   for  _  in  range ( m )] x  =   [ 0 ]*( m + 1 ) y  =   [ 0 ]*( n + 1 )   for  _  in  range ( k ):   l ,  r  =  rd ()   x [ l - 1 ]   +=   1   x [ r   ]   -=   1   s  =   0 for  i  in  range ( m ):   l ,  r ,  d  =  b [ i ]   s  +=  x [ i ]   y [ l - 1 ]   +=  s * d   y [ r   ]   -=  s * d   s  =   0 for  i  in  range ( n ):   s  +=  y [ i ]   a [ i ]   +=  s print ( ' ' . join ( map ( str ,  a )))"
296,296A - Yaroslav and Permutations,"n = int ( input ()) s = input (). split () print ( ""YES"" if  all ([ s . count ( i )* 2 - 1 <= n  for  i  in  s ]) else ""NO"" )"
297,297A - Parity Game,print ( 'YES'   if  input (). count ( '1' )+ 1 >> 1 << 1   >=  input (). count ( '1' )   else   'NO' )
298,298A - Snow Footprints,"I = input I () x = '.' + I () z = 'L' if  x . count ( 'R' ): z = 'R' a , b = x . find ( z ), x . rfind ( z ) if  z == 'L' : a , b = b , a - 1 else : b += 1 print ( a , b )"
299,299A - Ksusha and Array,"a = sorted ( map ( int ,[* open ( 0 )][ 1 ]. split ())) print ([ a [ 0 ],- 1 ][ any ( x % a [ 0 ]   for  x  in  a )])"
300,300A - Array,"( input ()) a = sorted ( map ( int , input (). split ())) b =[ a . pop ( 0 )] c = a [- 1 ]> 0   and   [ a . pop ()]   or   [ a . pop ( 0 ), a . pop ( 0 )] for  l  in  b , c , a :      print ( len ( l ),* l )"
301,301A - Yaroslav and Sequence,"n ,  t  =  int ( input ()),  list ( map ( int ,  input (). split ())) p  =  list ( map ( abs ,  t )) s  =  sum ( p ) if  n  &   1   ==   0   and  len ([ 0   for  i  in  t  if  i  <   0 ])   &   1 :  s  -=   2   *  min ( p ) print ( s )"
302,302A - Eugeny and Array,"I = lambda : map ( int , input (). split ()) n , m = I () x = sum ( x > 0   for  x  in  I ()) x = min ( x , n - x ) o =[] while  m :   l , r = I ()   o +=[[ 0 , 1 ][( r - l )% 2   and   ( r - l + 1 )// 2 <= x ]]   m -= 1 print (* o )"
303,303A - Lucky Permutation Triple,"n  =  int ( input ()) if  n  %   2   ==   0 :    print (- 1 ) else :    print (* range ( n ))    print (* range ( n ))    print (* map ( lambda  x :  x  *   2   %  n ,  range ( n )))"
304,304A - Pythagorean Theorem II,"from  math  import  gcd   n  =  int ( input ())   print ( sum ( n //( a * a + b * b )   for  a  in  range ( 2 ,   1 + int ( n **. 5 ))                         for  b  in  range ( 1 + a % 2 ,  a ,   2 )   if  gcd ( a , b )< 2 ))"
305,305A - Strange Addition,"n  =  int ( input ()) a  =  sorted ( list ( map ( int ,  input (). split ()))) b  =  set () for  x  in  a :      if  all ( all (( '%03d'   %  x )[ i ]   ==   '0'   or   ( '%03d'   %  t )[ i ]   ==   '0'   for  i  in  range ( 3 )) for  t  in  b ):         b . add ( x ) print ( len ( b )) print ( ' ' . join ( map ( str ,  b )))"
306,306A - Candies,"n , m = map ( int , input (). split ()) print (*[ n // m ]*( m - n % m )+[ n // m + 1 ]*( n % m ))"
311,311A - The Closest Pair,"n , k = map ( int , input (). split ()) if  k * 2 >=( n - 1 )* n : print ( 'no solution' ) else :[ print ( 0 , i ) for  i  in  range ( n )]"
312,312A - Whose sentence is it?,"I = input for  _  in ""0"" * int ( I ()): s = I (); a = s [- 5 :]== ""lala."" ; b = s [: 5 ]== ""miao."" ; print ([ ""Freda's"" , ""Rainbow's"" ][ b ] if  a ^ b  else ""OMG>.< I don't know!"" )"
313,313A - Ilya and Bank Account,"n = input (); print ( max ( map ( int ,( n , n [:- 1 ], n [:- 2 ]+ n [- 1 ]))))"
314,314A - Sereja and Contest,"f  =   lambda :  map ( int ,  input (). split ()) n ,  k  =  f () s  =  j  =   0 for  i ,  q  in  enumerate ( f (),   1 ):      if  s  -  j  *   ( n  -  i )   *  q  <  k :   print ( i )      else :         s  +=  q  *  j         j  +=   1"
315,315A - Sereja and Bottles,"n = int ( input ()) a =[] b =[] c =[ 1 ]* n for  i  in  range ( n ): 	x , y = map ( int , input (). split ()) 	a . append ( x ) 	b . append ( y ) for  i  in  range ( n ): 	 for  j  in  range ( n ): 		 if  a [ j ]== b [ i ]   and  i != j : 			c [ j ]= 0 print ( sum ( c ))"
317,317A - Perfect Pair,"x , y , m  =  map ( int , input (). split ()) if ( x  >  y ): 	x , y  =  y , x if ( y  >=  m ): 	 print ( '0' ) elif ( x + y  <=  x ): 	 print ( '-1' ) else : 	ans  =   ( y - x + y - 1 )// y 	x  +=  y * ans 	 while ( x  <  m ): 		x , y  =  x + y , x 		ans  +=   1 	 print ( ans )  "
318,318A - Even Odds,"n , k = map ( int , input (). split ()); t =( n + 1 )// 2 ; print ( 2 * k -[ 1 , 2 * t ][ k > t ])"
319,319A - Malek Dance Club,"s = input () a = int ( s , 2 ) n = len ( s ) print (( a *( 2 **( n - 1 )))% 1000000007 )  "
320,320A - Magic Numbers,"import  re print ( 'YES'   if  re . match ( r '(14?4?)*$' , input ())   else   'NO' )"
321,322C - Ciel and Robot,"import  re print ( 'YES'   if  re . match ( r '(14?4?)*$' , input ())   else   'NO' )"
322,322A - Ciel and Dancing,"n , m = map ( int , input (). split ()) print ( n + m - 1 ) for  i  in  range ( m ): print ( 1 , i + 1 ) for  i  in  range ( 2 , n + 1 ): print ( i , 1 )"
323,323A - Black-and-White Cube,"n = int ( input ()) print ([ ""\n"" . join ( ""\n"" . join ( """" . join ( ""b""   if   ( i // 2 + j // 2 + k )% 2   else   ""w""   for  j  in  range ( n ))   for  i  in  range ( n ))+ ""\n""   for  k  in  range ( n )),- 1 ][ n % 2 ])"
325,325A - Square and Rectangles,"n = int ( input ()) c =[[],[],[],[]] plos = 0   for  i  in  range ( n ):     q = list ( map ( int , input (). split ()))     plos +=( q [ 2 ]- q [ 0 ])*( q [ 3 ]- q [ 1 ])          for  j  in  range ( 4 ):         c [ j ]. append ( q [ j ])     fw =( max ( c [ 2 ])- min ( c [ 0 ])) fh =( max ( c [ 3 ])- min ( c [ 1 ]))   if ( fw == fh  and  fw * fh == plos ):      print ( ""YES"" ) else :      print ( ""NO"" )"
326,335A - Banana,"n = int ( input ()) c =[[],[],[],[]] plos = 0   for  i  in  range ( n ):     q = list ( map ( int , input (). split ()))     plos +=( q [ 2 ]- q [ 0 ])*( q [ 3 ]- q [ 1 ])          for  j  in  range ( 4 ):         c [ j ]. append ( q [ j ])     fw =( max ( c [ 2 ])- min ( c [ 0 ])) fh =( max ( c [ 3 ])- min ( c [ 1 ]))   if ( fw == fh  and  fw * fh == plos ):      print ( ""YES"" ) else :      print ( ""NO"" )"
327,327A - Flipping Game,"n = int ( input ()) * l ,= map ( int , input (). split ()) print ( max ( sum ( l )+ j - i - 2 * sum ( l [ i : j ]) for  i  in  range ( n ) for  j  in  range ( i + 1 , n + 1 )))"
328,328A - IQ Test,"a , b , c , d = map ( int , input (). split ()) r = 42 if  b - a == c - b == d - c : r = d + b - a if  b / a == c / b == d / c == int ( d * c / b )/ d : r = int ( d * c / b ) print ( r )"
329,329A - Purification,"n  =  int ( input ()) t  =   [ input ()   for  i  in  range ( n )] e  =   'E'   *  n if  e  in  t :     t  =  list ( '' . join ( i )   for  i  in  zip (* t ))      if  e  in  t :   print ( '-1' )      else :         p  =   [ str ( c . find ( '.' )   +   1 )   +   ' '   +  str ( i )   for  i ,  c  in  enumerate ( t ,   1 )]          print ( '\n' . join ( p )) else :     p  =   [ str ( i )   +   ' '   +  str ( c . find ( '.' )   +   1 )   for  i ,  c  in  enumerate ( t ,   1 )]      print ( '\n' . join ( p ))"
330,330A - Cakeminator,"r , c = map ( int , input (). split ()); a =[ input ()   for  _  in [ 0 ]* r ] s = lambda  x : sum ( i . count ( 'S' )> 0   for  i  in  x ) print ( r * c - s ( a )* s ( zip (* a )))"
332,332A - Down the Hatch!,"I = input n = int ( I ()) s = I () print ( sum ( 2 > len ( set ( s [ i - 3 : i ])) for  i  in  range ( n , len ( s ), n )))"
333,334C - Secrets,"I = input n = int ( I ()) s = I () print ( sum ( 2 > len ( set ( s [ i - 3 : i ])) for  i  in  range ( n , len ( s ), n )))"
334,334A - Candy Bags,"w = int ( input ()) for  i  in  range ( w * w // 2 ):   print ( i + 1 , w * w - i )"
335,335A - Banana,"s  =  input () n  =  int ( input ())   symb_cnt  =   {} for  c  in  s : 	symb_cnt [ c ]   =  symb_cnt [ c ]   +   1   if  c  in  symb_cnt  else   1 for  cnt  in  range ( 1 ,  len ( s )   +   1 ): 	s1  =   """" 	 for  c  in  symb_cnt : 		s1  +=  c  *   (( symb_cnt [ c ]   +  cnt  -   1 )   //  cnt ) 	 if  len ( s1 )   <=  n : 		 for  i  in  range ( n  -  len ( s1 )): 			s1  +=   'a' 		 print ( cnt ) 		 print ( s1 ) 		exit ( 0 ) print (- 1 )"
336,336A - Vasily the Bear and Triangle,"x , y = map ( int , input (). split ()) a = abs ( x )+ abs ( y ) v =[- a , a ][ y > 0 ] print (*((- a , 0 , 0 , v ) if  x < 0   else ( 0 , v , a , 0 )))"
337,337A - Puzzles,"I = lambda : map ( int , input (). split ()); n , m = I (); a = sorted ( I ()); print ( min ( j - i  for  i , j  in  zip ( a , a [ n - 1 :])))"
338,337C - Quiz,"I = lambda : map ( int , input (). split ()); n , m = I (); a = sorted ( I ()); print ( min ( j - i  for  i , j  in  zip ( a , a [ n - 1 :])))"
339,339A - Helpful Maths,"print ( ""+"" . join ( sorted ( input ()[:: 2 ])))"
340,340A - The Wall,"x , y , a , b = map ( int , input (). split ())   A = 1 while  A % x  or  A % y :     A += 1 print ( b // A -( a - 1 )// A )"
341,340C - Tourist Problem,"x , y , a , b = map ( int , input (). split ())   A = 1 while  A % x  or  A % y :     A += 1 print ( b // A -( a - 1 )// A )"
342,342A - Xenia and Divisors,"n = int ( input ()) l = sorted ( map ( int , input (). split ())) for  i  in  range ( n // 3 ):      if   not  l [ i ]< l [ i + n // 3 ]< l [ i + 2 *( n // 3 )]   or  l [ i + n // 3 ]% l [ i ]!= 0   or  l [ i + 2 *( n // 3 )]% l [ i +( n // 3 )]:          print (- 1 )         exit ( 0 )   for  i  in  range ( n // 3 ):      print (* l [ i :: n // 3 ])"
343,343A - Rational Resistance,"n , m = map ( int , input (). split ()) a = 0 while  m : a += n // m ; n , m = m , n % m print ( a )"
344,344A - Magnets,n = input c = p = 0 for  i  in ' ' * int ( n ()): s = n (); c += s != p ; p = s print ( c )
346,346A - Alice and Bob,"from  fractions  import  gcd n ,  f ,  m  =  int ( input ()),   0 ,   0 for  x  in  map ( int ,  input (). split ()):     f ,  m  =  gcd ( f ,  x ),  max ( m ,  x ) print ( 'Alice'   if   ( m  //  f  -  n )   %   2   else   'Bob' )"
347,347A - Difference Row,"input () a = sorted ( input (). split (), key = int ) print ( a [- 1 ],* a [ 1 :- 1 ], a [ 0 ])"
348,348A - Mafia,"n = int ( input ()) a = list ( map ( int , input (). split ())) print ( max ( max ( a ),( sum ( a )- 1 )//( n - 1 )+ 1 ))"
349,349A - Cinema Line,"input () a = b = c = 0 for  i  in  map ( int , input (). split ()): 	 if  i == 25 : a += 1 	 elif  i == 50 : a , b = a - 1 , b + 1 	 elif  b : a , b = a - 1 , b - 1 	 else : a -= 3 	 if  a < 0   or  b < 0 : c = 1 print ( 'YNEOS' [ c :: 2 ])"
350,350A - TL,"a = lambda : list ( map ( int , input (). split ())) n , m = a () b , c = a (), a () TL = max ( 2 * min ( b ), max ( b )) print ( TL  if  TL < min ( c )   else   ""-1"" )"
352,352A - Jeff and Digits,"a , b = int ( input ()), input (); c = b . count ( '5' ); d = a - c ; print ( int ( '5' *( 9 *( c // 9 ))+ '0' * d )   if  d  else   '-1' )"
353,353A - Domino,"n  =  int ( input ()) x , y , z  =   [ 0 ]* 3 for  i  in  range ( n ):     a , b  =  input (). split ()     x  +=  int ( a )     y  +=  int ( b )     z  +=   ( int ( a )+ int ( b ))% 2 print   ((- 1 ,( 0 ,(- 1 , 1 )[ z > 0 ])[ y % 2 ])[ x % 2 == y % 2 ])"
354,354A - Vasya and Robot,"n ,  l  ,  r ,  ql  ,  qr  =  map ( int , input (). split ()) w  =   [ 0 ]   +  list ( map ( int , input (). split ())) for  i  in  range  ( 1 , n + 1 ):     w [ i ]   +=  w [ i - 1 ] s  =  w [ n ] print ( min ( l * w [ i ]   +  r *( s - w [ i ])   +  ql * max ( 0 , 2 * i - n - 1 )   +  qr * max ( 0 , n - 2 * i - 1 )   for  i  in  range ( n + 1 )))"
355,355A - Vasya and Digital Root,"k , d = input (). split () k = int ( k )- 1 print ( 'No solution' if ( d == '0' )* k  else  d + '0' * k )"
356,356A - Knight Tournament,"from  sys  import  stdin input = lambda   :  stdin . readline (). strip () from  math  import  ceil , sqrt , factorial , gcd n , m = map ( int , input (). split ()) ans =[ 0   for  i  in  range ( n )] nextl =[ i + 1   for  i  in  range ( n + 2 )] for  j  in  range ( m ): 	l , r , x = map ( int , input (). split ()) 	i = l 	 while  i <= r : 		 if  ans [ i - 1 ]== 0   and  i != x : 			ans [ i - 1 ]= x 		a = nextl [ i ] 		 if  i < x : 			nextl [ i ]= x 		 else : 			nextl [ i ]= r + 1 		i = a print (* ans )"
357,357A - Group of Students,"I = input R = lambda : list ( map ( int , I (). split ())) m = int ( I ()) c = R () x , y = R () r = 0 for  i  in  range ( m ): 	 if  x <= sum ( c [: i ])<= y  and  x <= sum ( c [ i :])<= y : r = i + 1 print ( r )"
358,358A - Dima and Continuous Line,"n = int ( input ()) a = list ( map ( int , input (). split ())) p =[] for  i  in  range ( n - 1 ): 	p . append ([ min ( a [ i ], a [ i + 1 ]), max ( a [ i ], a [ i + 1 ])]) for  i  in  p : 	 for  j  in  p : 		 if  i [ 0 ]< j [ 0 ]< i [ 1 ]< j [ 1 ]   or  j [ 0 ]< i [ 0 ]< j [ 1 ]< i [ 1 ]: 			 print ( ""yes"" ) 			exit () print ( ""no"" )"
359,359A - Table,"n , m = map ( int , input (). split ()) a =[ input (). split () for  _  in [ 0 ]* n ] b =[* zip (* a )] print ([ 4 , 2 ][ '1' in '' . join ([* a [ 0 ],* a [ n - 1 ],* b [ 0 ],* b [ m - 1 ]])])"
361,361A - Levko and Table,"a , b = map ( int , input (). split ()) for  i  in  range ( a ): c =[ 0 ]* a ; c [ i ]= b ; print (* c )"
362,362A - Two Semiknights Meet,"def  f ():     t  =   []      for  i  in  range ( 8 ):         p  =  input ()          for  j  in  range ( 8 ):              if  p [ j ]   ==   'K' :  t  +=   [ i ,  j ]      if  t [ 2 ]   -  t [ 0 ]   in   ( 0 ,   4 )   and  t [ 1 ]   -  t [ 3 ]   in   (- 4 ,   0 ,   4 ):   return   'YES'      return   'NO' for  i  in  range ( int ( input ())   -   1 ):      print ( f ())     input () print ( f ())"
363,363A - Soroban,"n = int ( input ()) while   1 :   x = n % 10    print ([ 'O-' , '-O' ][ x > 4 ]+ '|' + x % 5 * 'O' + '-' +( 4 - x % 5 )* 'O' )   n //= 10    if  n < 1 : break"
365,365A - Good Number,"n ,  k  =  map ( int ,  input (). split ()) s  =  set ( '0123456789' [: k + 1 ])   print ( sum ( set ( input ())>= s  for  _  in  range ( n )))"
366,366A - Dima and Guards,"n  =  int ( input ()) for  i  in  range ( 4 ): 	a ,  b ,   * l  =   [ int ( x )   for  x  in  input (). split ()] 	 for  c  in   [ a ,  b ]: 		 for  d  in  l : 			 if  c  +  d  <=  n : 				 print ( i  +   1 ,  c ,  n  -  c ) 				exit () print (- 1 )"
367,367A - Sereja and Algorithm,"def  main ():     l ,  xyz ,  res  =   [( 0 ,   0 ,   0 )],   [ 0 ,   0 ,   0 ],   []      for  c  in  input ():         xyz [ ord ( c )   -   120 ]   +=   1         l . append ( tuple ( xyz ))      for  _  in  range ( int ( input ())):         a ,  b  =  map ( int ,  input (). split ())          if  b  -  a  >   1 :             xyz  =   [ i  -  j  for  i ,  j  in  zip ( l [ b ],  l [ a  -   1 ])]             res . append (( ""NO"" ,   ""YES"" )[ max ( xyz )   -  min ( xyz )   <   2 ])          else :             res . append ( ""YES"" )      print ( '\n' . join ( res ))     if  __name__  ==   '__main__' :     main ()"
368,368A - Sereja and Coat Rack,"I = lambda : map ( int , input (). split ()) n , d = I () a = sorted ( I ())+[- d ]* 99 print ( sum ( a [: next ( I ())]))"
369,369A - Valera and Plates,"I = input n , m , k = map ( int , I (). split ()) t = I (). count ( '2' ) print (- min ( 0 , m + min ( 0 , k - t )- n + t ))"
370,"370A - Rook, Bishop and King","a , b , c , d = map ( int , input (). split ()) e = abs ( a - c ) f = abs ( b - d ) t = 0 if   ( e - f )% 2 == 0 : t = 2 if  e == f : t = 1 print (( a != c )+( b != d ), t , max ( e , f ))"
371,371A - K-Periodic Array,"I = lambda : map ( int , input (). split ()) n , k = I () a =[ 0 ]* n i = 0 for  v  in  I (): a [ i ]+= v - 1 ; i =( i + 1 )% k print ( sum ( map ( lambda  x : min ( x , n // k - x ), a )))"
372,372A - Counting Kangaroos is Fun,"n  =  int ( input ()) l  =  sorted ([ int ( input ())   for  i  in  range ( n )]) t = n - 1 cnt = 0 for  i  in  range (( n // 2 )-   1 ,- 1 ,- 1 ):      if  l [ i ]* 2 <= l [ t ]:         cnt = cnt + 1         t = t - 1 print ( cnt +( n - 2 * cnt ))  "
373,373A - Collecting Beats is Fun,I = input k = int ( I ())* 2 s = '' for  _  in '0' * 4 : s += I () print ( 'YNEOS' [ any ( s . count ( str ( i ))> k  for  i  in  range ( 10 )):: 2 ])
374,374A - Inna and Pink Pony,"n ,  m ,  i ,  j ,  a ,  b  =  map ( int ,  input (). split ()) x ,  y ,  t  =   [ i  -   1 ,  n  -  i ],   [ j  -   1 ,  m  -  j ],   [] if  all ( i  <  a  for  i  in  x )   or  all ( j  <  b  for  j  in  y ):      if   0   in  x  and   0   in  y :  t  =   [ 0 ] else :     u  =   [ d  //  a  for  d  in  x  if  d  %  a  ==   0 ]     v  =   [ d  //  b  for  d  in  y  if  d  %  b  ==   0 ]     t  =   [ max ( i ,  j )   for  i  in  u  for  j  in  v  if   ( i  +  j )   %   2   ==   0 ] print ( min ( t )   if  t  else   'Poor Inna and pony!' )"
375,376C - Divisible by Seven,"n ,  m ,  i ,  j ,  a ,  b  =  map ( int ,  input (). split ()) x ,  y ,  t  =   [ i  -   1 ,  n  -  i ],   [ j  -   1 ,  m  -  j ],   [] if  all ( i  <  a  for  i  in  x )   or  all ( j  <  b  for  j  in  y ):      if   0   in  x  and   0   in  y :  t  =   [ 0 ] else :     u  =   [ d  //  a  for  d  in  x  if  d  %  a  ==   0 ]     v  =   [ d  //  b  for  d  in  y  if  d  %  b  ==   0 ]     t  =   [ max ( i ,  j )   for  i  in  u  for  j  in  v  if   ( i  +  j )   %   2   ==   0 ] print ( min ( t )   if  t  else   'Poor Inna and pony!' )"
376,376A - Lever,"a = input () p = a . index ( '^' ) c = sum (( i - p )* int ( y )   for  i , y  in  enumerate ( a )   if  y . isdigit ()) print ([[ 'balance' , 'right' ][ c > 0 ], 'left' ][ c < 0 ])"
378,378A - Playing with Dice,"n , m = map ( int , input (). split ()) a = b = c = 0 for  i  in  range ( 1 , 7 ): t = abs ( n - i )- abs ( m - i ); a += t < 0 ; b += t == 0 ; c += t > 0 print ( a , b , c )"
379,379A - New Year Candles,"c , b = map ( int , input (). split ()); print (( c * b - 1 )//( b - 1 ))"
380,380A - Sereja and Prefixes,"from  bisect  import  bisect_left m  =  int ( input ()) t ,  s  =   [ input (). split ()   for  i  in  range ( m )],   [ 0 ]   *  m l ,  n  =   0 ,  int ( input ()) for  j ,  i  in  enumerate ( t ):     l  +=   1   if  i [ 0 ]   ==   '1'   else  int ( i [ 1 ])   *  int ( i [ 2 ])     t [ j ],  s [ j ]   =  l ,  i [ 1 ]   if  i [ 0 ]   ==   '1'   else  int ( i [ 1 ]) F  =   {} def  f ( i ):      if   not  i  in  F :         k  =  bisect_left ( t ,  i )         F [ i ]   =  s [ k ]   if  type ( s [ k ])   ==  str  else  f (( i  -  t [ k ]   -   1 )   %  s [ k ]   +   1 )      return  F [ i ] print ( ' ' . join ( f ( i )   for  i  in  map ( int ,  input (). split ())))"
381,381A - Sereja and Dima,"i , x = input ,[ 0 , 0 ] n , a = int ( i ()),[* map ( int , i (). split ())] for  i  in  range ( n ):  b = max ( a [ 0 ], a [- 1 ]); x [ i % 2 ]+= b ; a . remove ( b ) print (* x )"
382,382A - Ksenia and Pan Scales,"a , b = input (). split ( '|' ) z = a + input ()+ b m = len ( z )// 2 print ([ z [: m ]+ '|' + z [ m :], 'Impossible' ][ max ( map ( len ,[ a , b , z [ m :]]))> m ])"
383,383A - Milking cows,input () s  =  k  =   0 for  i  in  input ()[::   2 ]:      if  i  ==   '1' :  k  +=   1      else :  s  +=  k print ( s )
384,384A - Coder,n = int ( input ()) print (-(- n * n // 2 )) for  i  in  range ( n ):   print (( n * 'C.' )[ i : n + i ])
385,385A - Bear and Raspberry,"I = lambda : map ( int , input (). split ()) n , c = I () a =[* I ()] print ( max ( 0 ,*[ x - y - c  for  x , y  in  zip ( a , a [ 1 :])]))"
386,386A - Second-Price Auction,"input (); X  =  list ( map ( int ,  input (). split ())); print ( X . index ( max ( X ))   +   1 ,  sorted ( X )[- 2 ])"
387,387A - George and Sleep,"I  =   lambda :  map ( int ,  input (). split ( ':' ))   h ,  m  =  I () dh ,  dm  =  I () h ,  m  =  h - dh ,  m - dm h ,  m  =   ( h + m // 60 )% 24 ,  m % 60   print ( f '{h:02}:{m:02}' )"
388,388A - Fox and Box Accumulation,"input (); print ( 1 + max ( x //-~ f  for  x , f  in  enumerate ( sorted ( map ( int , input (). split ())))))"
389,389A - Fox and Number Game,"import  fractions n = int ( input ()) a = 0 for  x  in  input (). split (): 	a = fractions . gcd ( a , int ( x )) print ( a * n )"
390,390A - Inna and Alarm Clock,"I = input a = set () b = set () for  _  in   '0' * int ( I ()): x , y = I (). split (); a . add ( x ); b . add ( y ) print ( min ( len ( a ), len ( b )))"
391,391A - Genetic Engineering,k = 1 p = r = 0 for  x  in  input ()+ '0' : 	 if  x != p : r += 1 - k % 2 ; k = 0 ; p = x 	k += 1 print ( r )
392,392A - Blocked Points,"print ( max ( 1 ,   4 * int ( int ( input ())* 2 ** 0.5 )))"
393,393A - Nineteen,"a = input (). count print ( min ( max ( 0 ,( a ( 'n' )- 1 )// 2 ), a ( 't' ), a ( 'i' ), a ( 'e' )// 3 ))"
394,394A - Counting Sticks,t  =  input () k  =  t . find ( '=' ) n  =   2   *  k  -  len ( t ) if  n  ==   2 :      if  t [ 1 ]   !=   '+' :  t  =  t [ 1 :   ]   +   '|'      else :  t  =  t [:  k  -   1 ]   +  t [ k :   ]   +   '|' elif  n  ==   - 2 :  t  =   '|'   +  t [:   - 1 ] elif  n  !=   0 :  t  =   'Impossible' print ( t )
396,396A - On Number of Decompositions into Multipliers,"from  math  import  factorial  as  f def  primes ( n ):     sieve  =   [ True ]   *  n      for  i  in  range ( 3 , int ( n ** 0.5 )+ 1 , 2 ):          if  sieve [ i ]:             sieve [ i * i :: 2 * i ]=[ False ]*(( n - i * i - 1 )//( 2 * i )+ 1 )      return   [ 2 ]   +   [ i  for  i  in  range ( 3 , n , 2 )   if  sieve [ i ]] p  =  primes ( 31627 ) s  =   [ 0 ]*( 31623 ) s1 ={} def  factorize ( n ):    for  i  in  p :      if  n <= 1 :        return   56      while  n % i == 0 :       s [ p . index ( i )]+= 1       n //= i    if  n > 1 :      if  n  in  s1 :       s1 [ n ]+= 1      else :       s1 [ n ]= 1 n  =  int ( input ()) for  i  in  map ( int , input (). split ()):   factorize ( i ) s  =  list ( filter ( lambda  a :  a  !=   0 ,  s )) for  i  in  s1 . values ():   s . append ( i ) ans  =   1 for  i  in  s :   ans *= f ( i + n - 1 )//( f ( n - 1 )* f ( i )) print ( int ( ans )% 1000000007 )"
397,397A - On Segment's Own Points,"n = int ( input ()) l =[ 0 ]* 100 for  k  in  range ( n ):     a , b = map ( int , input (). split ())      for  i  in  range ( a , b ):         l [ i ]= int ( k == 0 ) print ( sum ( l ))"
398,398A - Cards,"a ,  b  =  map ( int ,  input (). split ()) if  b  <   2 :      print ( a  *  a  -  b )      print ( 'o'   *  a  +   'x'   *  b ) elif  a  ==   0 :      print (-  b  *  b )      print ( 'x'   *  b ) else :     s  =  a  *  a  -  b  *  b      for  i  in  range ( 2 ,  min ( a  +   1 ,  b )   +   1 ):         u ,  v  =  b  //  i ,  b  %  i         d  =  i  -   2   +   ( a  -  i  +   2 )   **   2   -   ( u  **   2 )   *   ( i  -  v )   -   (( u  +   1 )   **   2 )   *  v          if  d  >  s :  s ,  q ,  p ,  j  =  d ,  u ,  v ,  i     k  =   2   *  j  -   1     t  =   [ 0 ]   *  k     t [ 1 :  k :   2 ]   =   [ 'o' ]   *   ( j  -   2 )   +   [ 'o'   *   ( a  -  j  +   2 )]     t [ 0 :  k :   2 ]   =   [ 'x'   *  q ]   *   ( j  -  p )   +   [ 'x'   *   ( q  +   1 )]   *  p      print ( s )      print ( '' . join ( t ))"
399,399A - Pages,"n , p , k = map ( int , input (). split ()) if  p - k > 1 : print ( ""<<"" , end = "" "" ) for  _  in  range ( max ( 1 , p - k ), min ( n , p + k )+ 1 ): print ( _  if  _ != p  else ""("" + str ( _ )+ "")"" , end = "" "" ) if  p + k < n : print ( "">>"" )"
400,400A - Inna and Choose Options,"for  _  in  range ( int ( input ())):     s  =  input ()     A  =   [ str ( a )+ 'x' + str ( 12 // a )   for  a  in   ( 1 , 2 , 3 , 4 , 6 , 12 )           if  any ( s [ i :: 12 // a ]== 'X' * a  for  i  in  range ( 12 // a ))]      print ( len ( A ),   * A )"
401,401A - Vanya and Cards,"i = lambda : map ( int , input (). split ()); n , x = i (); a = abs ( sum ( i ())); print ( 0 -- a // x )"
402,402A - Nuts,"k , a , b , v = map ( int , input (). split ()); o = 0 while ( a > 0 ):     o += 1 ; a -= v * min ( b + 1 , k ); b -= min ( b , k - 1 ) print ( o )"
403,402C - Searching for Graph,"k , a , b , v = map ( int , input (). split ()); o = 0 while ( a > 0 ):     o += 1 ; a -= v * min ( b + 1 , k ); b -= min ( b , k - 1 ) print ( o )"
404,404A - Valera and X,"n  =  int ( input ()) s  =   '' for  i  in  range ( n ): 	s  +=  input () if  s  ==   '' . join ( list ( reversed ( s )))   and  s . count ( s [ 0 ])   ==   ( n * 2 )   -   1 : 	 print ( ""YES"" ) else : 	 print ( ""NO"" )          "
405,405A - Gravity Flip,"input (); print (* sorted ( map ( int , input (). split ())))"
407,407A - Triangle,"a , b = map ( int , input (). split ()) def  get ( a ):      return  list ([ i , j ]   for  i  in  range ( 1 , a )   for  j  in  range ( 1 , a )   if  i * i + j * j == a * a ) A = get ( a ) B = get ( b ) for   [ a , b ]   in  A :      for   [ c , d ]   in  B :          if  a * c == b * d  and  b != d :              print ( ""YES\n0 0\n%d %d\n%d %d""   %(- a , b , c , d ))             exit ( 0 ) print ( ""NO"" )"
408,408A - Line to Cashier,"i = lambda :[* map ( int , input (). split ())] n = i ()[ 0 ] k = i () print ( min ( k [ l ]* 15 + sum ( i ())* 5   for  l  in  range ( n )))"
409,409A - The Great Game,"t = 0 a , b , c = input (), input (), '8([' for  i  in  range ( 0 , len ( a ), 2 ): 	k = c . index ( a [ i ]) 	t += 1   if  b [ i ]== c [ k - 1 ] else   0   if  b [ i ]== c [ k ] else   - 1 print ( ""TEAM %d WINS"" %( 1   if  t > 0   else   2 ) if  t  else   ""TIE"" )"
411,411A - Password Check,"import  re print ( ""Correct"" if  re . match ( r ""(?=.{5,})(?=.*\d)(?=.*[a-z]).*[A-Z].*"" , input ()) else ""Too weak"" )"
412,412A - Poster,"n ,  k  =  map ( int ,  input (). split ()) a ,  b ,  c ,  t  =   'LEFT\n' ,   'RIGHT\n' ,   'PRINT ' ,  input () if   2   *  k  >  n :  k ,  a ,  b ,  t  =  n  -  k  +   1 ,  b ,  a ,  t [::   - 1 ] print ( a  *   ( k  -   1 )   +  c  +   ( '\n'   +  b  +  c ). join ( t ))"
413,413A - Data Recovery,"I = lambda : list ( map ( int , input (). split ())) n , m , N , X = I () t = I () r = min ( t )!= N r += max ( t )!= X print ([ 'C' , 'Inc' ][ m + r > n  or  min ( t )< N  or  max ( t )> X ]+ 'orrect' )"
414,414A - Mashmokh and Numbers,"n ,  k  =  map ( int ,  input (). split ()) if  k  ==   0   and  n  ==   1 :      print ( 1 ) elif  n  //   2   >  k  or  n  ==   1 :      print (- 1 ) else :     x  =   ( k  -  n  //   2   +   1 )      print ( x ,  x  *   2 ,   * range ( x  *   2   +   1 ,  x  *   2   +   1   +  n  -   2 ))"
415,415A - Mashmokh and Lights,"a , b = map ( int , input (). split ()); c =[ 0 ]* a for  i  in  map ( int , input (). split ()): c [ i - 1 : a ]=[ i ]*( a - i + 1 ); a = min ( i - 1 , a ) print (* c )"
416,416A - Guess a number!,"n  =  int ( input ()) i ,  j  =   - 1000000001 ,   1000000001 for  _  in  range ( n ):   s ,  v ,  a  =  input (). split ()   v  =  int ( v )    if   ( s ,  a )   in   [( "">="" ,   ""Y"" ),   ( ""<"" ,   ""N"" )]:     i  =  max ( i ,  v )    elif   ( s ,  a )   in   [( "">"" ,   ""Y"" ),   ( ""<="" ,   ""N"" )]:     i  =  max ( i ,  v  +   1 )    elif   ( s ,  a )   in   [( ""<="" ,   ""Y"" ),   ( "">"" ,   ""N"" )]:     j  =  min ( j ,  v )    elif   ( s ,  a )   in   [( ""<"" ,   ""Y"" ),   ( "">="" ,   ""N"" )]:     j  =  min ( j ,  v  -   1 ) print ( ""Impossible""   if  i  >  j  else  i )"
417,417A - Elimination,"[ c ,  d ],   [ n ,  m ],  k  =  map ( int ,  input (). split ()),  map ( int ,  input (). split ()),  int ( input ()) left  =  n  *  m  -  k if  left  <=   0 :      print ( 0 ) else :      print ( min ( left  //  n  *  c  +  left  %  n  *  d ,   ( left  +  n  -   1 )   //  n  *  c ,  left  *  d ))"
418,418A - Football,"n , k = map ( int , input (). split ()) if  k * n  >  n *( n - 1 )// 2 : 	 print (- 1 ) 	exit ( 0 ) print ( n * k ) s =[] for  i  in  range ( 1 , k + 1 ): 	 for  j  in  range ( n ): 		s . append ( ""%d %d"" %( 1 + j , 1 +( j + i )% n )) print ( ""\n"" . join ( s ))"
421,421A - Pasha and Hamsters,"R = lambda :[ int ( x )   for  x  in  input (). split ()] n , a , b = R () x =[ 2 ]* n for  c  in  R (): x [ c - 1 ]= 1 print (* x )"
424,424A - Squats,"n = int ( input ()) a = input () x = a . count ( 'x' ) if   2 * x > n : a = a . replace ( 'x' , 'X' , x - n // 2 ) else : a = a . replace ( 'X' , 'x' , n // 2 - x ) print ( abs ( 2 * x - n )// 2 ) print ( a )"
425,425A - Sereja and Swaps,"read_line  =   lambda :   [ int ( i )   for  i  in  input (). split ()] n ,  k  =  read_line () x  =  read_line () print ( max ( sum ( sorted ( x [ l : r ]   +  sorted ( x [: l ]   +  x [ r :])[- k :])[ l - r :])   for  l  in  range ( n )   for  r  in  range ( l  +   1 ,  n  +   1 )))"
426,426A - Sereja and Mugs,"i = lambda : map ( int , input (). split ()) _ , b = i (); a =[* i ()] print ( 'YNEOS' [ b < sum ( a )- max ( a ):: 2 ])"
427,427A - Police Recruits,"input (); k = 0 for  i  in   ( list ( map ( int , input (). split ()))[::- 1 ]):     k = min ( 0 , k + i ) print (- k )"
429,429A - Xor-tree,"n  =  int ( input ()) p  =   [[]   for  i  in  range ( n  +   1 )] for  i  in  range ( n  -   1 ):     a ,  b  =  map ( int ,  input (). split ())     p [ a ]. append ( b )     p [ b ]. append ( a ) u ,  v  =   ' '   +  input ()[::   2 ],   ' '   +  input ()[::   2 ] s ,  q  =   [( 1 ,   0 ,   0 ,   0 )],   [] while  s :     a ,  k ,  i ,  j  =  s . pop ()      if  k :          if  i  !=   ( u [ a ]   !=  v [ a ]):             q . append ( a )             i  =   1   -  i      else :          if  j  !=   ( u [ a ]   !=  v [ a ]):             q . append ( a )             j  =   1   -  j     k  =   1   -  k      for  b  in  p [ a ]:         p [ b ]. remove ( a )         s . append (( b ,  k ,  i ,  j )) print ( len ( q )) print ( '\n' . join ( map ( str ,  q )))"
430,430A - Points and Segments (easy),"input () P = list ( map ( int , input (). split ())) for  a , b  in  sorted ([[ P . index ( p ), i % 2 ] for  i , p  in  enumerate ( sorted ( P ))]): print ( b )"
431,431A - Black Square,"a =[ 0 ,* map ( int , input (). split ())] print ( sum ( a [ int ( x )] for  x  in  input ()))"
432,432A - Choosing Teams,"P = lambda : map ( int , input (). split ()) _ , k = P () print ( sum ( x <= 5 - k  for  x  in  P ())// 3 )"
433,433A - Kitahara Haruki's Gift,"a =[* open ( 0 )][ 1 ]. split () a , b =[ a . count ( '100' ), a . count ( '200' )] print ( 'YNEOS' [( a + 2 * b )% 2   or  b % 2   and  a < 2 :: 2 ])"
435,435A - Queue on Bus Stop,"I = lambda : map ( int , input (). split ()) n , m = I () a = r = 0 for  x  in  I ():   a += x    if  a >= m :     r += 1     a =[ x , 0 ][ a == m ] r += a > 0 print ( r )     "
436,436A - Feed with Candy,"def  solve  (  p ,  n ,  x ,  t ,  h ,  m  ):     used ,  xx ,  ans  =   [ 0 ]   *  n ,  x ,   0      while   (   True   ):         k  =   - 1          for  i  in  range (  n  ):                if   (  used [ i ]   ==   0   )   and   (  t [ i ]   ==  p  )   and   (  h [ i ]   <=  xx  )   and   (   (  k  ==   - 1   )   or   (  m [ i ]   >  m [ k ]   )   ):  k  =  i          if   (  k  ==   - 1   ):   break         ans  +=   1         xx  +=  m [ k ]         used [ k ]   =   1         p  =  p  ^   1      return  ans      n ,  x  =  map (  int ,  input (). split ()   ) t ,  h ,  m  =   [ 0 ]   *  n ,   [ 0 ]   *  n ,   [ 0 ]   *  n for  i  in  range (  n  ):   t [ i ],  h [ i ],  m [ i ]   =  map (  int ,  input (). split ()   ) print   (  max (  solve (   0 ,  n ,  x ,  t ,  h ,  m  ),  solve (   1 ,  n ,  x ,  t ,  h ,  m  )   )   )"
437,437A - The Child and Homework,"q ,  t  =   0 ,  sorted ([( len ( input ())   -   2 ,  i )   for  i  in   'ABCD' ]) if   2   *  t [ 0 ][ 0 ]   <=  t [ 1 ][ 0 ]:  q  +=   1 if  t [ 3 ][ 0 ]   >=   2   *  t [ 2 ][ 0 ]:  q  +=   2 print ([ 'C' ,  t [ 0 ][ 1 ],  t [ 3 ][ 1 ],   'C' ][ q ])"
439,"439A - Devu, the Singer and Churu, the Joker","i = lambda : map ( int , input (). split ()); n , d = i (); d -= sum ( i ()); print ([ d // 5 ,- 1 ][ d < 10 *~- n ])"
440,440A - Forgotten Episode,"i = input ; n = int ( i ()) print (( n * n + n )// 2 - sum ( map ( int , i (). split ())))"
441,441A - Valera and Antique Items,"n , v = map ( int , input (). split ()) a =[ i + 1   for  i  in  range ( n )   if  min ( map ( int , input (). split ()[ 1 :]))< v ] print ( len ( a )) print (* a )"
442,442A - Borya and Hanabi,"input () p  =   {( 1   <<   'RGBYW' . index ( c ))   +   ( 1   <<  int ( k )   +   4 )   for  c ,  k  in  input (). split ()} print ( min ( bin ( t ). count ( '1' )   for  t  in  range ( 1024 )   if  len ({ t  &  q  for  q  in  p })   ==  len ( p )))"
443,443A - Anton and Letters,"print ( len ( set ( input ()+ ', ' ))- 4 )"
444,444A - DZY Loves Physics,"R  =   lambda : map ( int ,  input (). split ()) ans  =   0 n ,  m  =  R () F  =  list ( R ()) for  i  in  range ( m ): 	a ,  b ,  x  =  R () 	ans  =  max ( ans ,   ( F [ a  -   1 ]+  F [ b  -   1 ])   /  x ) print ( ans )"
445,445A - DZY Loves Chessboard,"n , m = map ( int , input (). split ()) a =[ 'W' , 'B' ] for  i  in  range ( n ): 	s = list ( input ()) 	 for  j  in  range ( m ): 		 if  s [ j ]== '.' : 			s [ j ]= a [( i + j )% 2 ] 	 print ( '' . join ( s ))"
446,446A - DZY Loves Sequences,"n  =  int ( input ()) a  =   [ int ( i )   for  i  in  input (). split ()] l , r  =   [ 1 ]* n ,[ 1 ]* n   for  i  in  range ( 1 , n ):      if  a [ i - 1 ]< a [ i ]:  l [ i ]+= l [ i - 1 ]   for  i  in  range ( n - 2 , 0 ,- 1 ):      if  a [ i + 1 ]> a [ i ]:  r [ i ]+= r [ i + 1 ]   ans  =  max ( l ) if  ans < n :  ans += 1 for  i  in  range ( 1 , n - 1 ):      if  a [ i - 1 ]+ 1 < a [ i + 1 ]:  ans = max ( ans , l [ i - 1 ]+ r [ i + 1 ]+ 1 ) print ( ans )"
447,447A - DZY Loves Hash,"p , n = map ( int , input (). split ()) r , s = 0 ,{ p } while  r < n :   x = int ( input ())% p    if  x  in  s : break   r += 1 ; s |={ x } print ([- 1 , r + 1 ][ r < n ])"
448,448A - Rewards,"i = lambda  k :-(- sum ( map ( int , input (). split ()))// k ) print ( 'YNEOS' [ i ( 5 )+ i ( 10 )> i ( 1 ):: 2 ])"
449,449A - Jzzhu and Chocolate,"n , m , k =[ int ( s )   for  s  in  input (). split ()] n , m = max ( n , m ), min ( n , m ) if  n + m - 2 < k : print (- 1 ) elif  n - 1 < k :      print ( m //( k - n + 2 )) elif  m - 1 < k : print ( n //( k + 1 )* m ) else :      print ( max ( n //( k + 1 )* m , m //( k + 1 )* n ))"
450,450A - Jzzhu and Children,"n , m = map ( int , input (). split ()) a = list (( int ( i )- 1 )// m  for  i  in  input (). split ()) print ( n - a [::- 1 ]. index ( max ( a )))"
451,451A - Game With Sticks,"print ( 'MAaklsvhiakta' [ min ( map ( int , input (). split ()))% 2 :: 2 ])"
452,452A - Eevee,"import  re input () print ( next ( filter ( re . compile ( input ()[:- 3 ]   +   '$' ). match ,   [ 'vapor' ,   'jolt' ,   'flar' ,   'esp' ,   'umbr' ,   'leaf' ,   'glac' ,   'sylv' ]))   +   'eon' )"
453,453A - Little Pony and Expected Maximum,"m , n = map ( int , input (). split ()) print ( m - sum (( i / m )** n  for  i  in  range ( m )))"
454,454A - Little Pony and Crystal Mine,n = int ( input ()) for  k  in  range ( n ):   l = abs ( n // 2 - k ); print ( l * '*' +(( n // 2 - l )* 2 + 1 )* 'D' + l * '*' )
455,455A - Boredom,"input () d =[ 0 ]* 100001 for  x  in  map ( int , input (). split ()):     d [ x ]+= x a = b = 0 for  i  in  d :     a , b = max ( a , i + b ), a print ( a )"
456,456A - Laptops,"n = int ( input ()) a = 'Poor Alex' for  i  in  range ( n ):     b , c = map ( int , input (). split ())      if  b < c : a = 'Happy Alex' print ( a )"
457,458A - Golden System,"n = int ( input ()) a = 'Poor Alex' for  i  in  range ( n ):     b , c = map ( int , input (). split ())      if  b < c : a = 'Happy Alex' print ( a )"
458,458A - Golden System,def  norm ( d ):     res  =   [ '0' ]      for  c  in  list ( d ):         res . append ( c )         i  =  len ( res )   -   1          while  i  >   1   and  res [ i  -   2 ]   ==   '0'   and  res [ i  -   1 ]   ==   '1'   and  res [ i ]   ==   '1' :             res [ i  -   2 ]   =   '1'             res [ i  -   1 ]   =   '0'             res [ i ]   =   '0'             i  -=   2      return   '' . join ( res ). lstrip ( '0' )   a  =  norm ( input ()) b  =  norm ( input ())   if  a  ==  b :      print ( '=' ) elif  len ( a )   >  len ( b )   or  len ( a )   ==  len ( b )   and  a  >  b :      print ( '>' ) else :      print ( '<' )
459,459A - Pashmak and Garden,"a , b , c , d = map ( int , input (). split ()) l = abs ( a - c ); m = abs ( b - d ) if  a == c :   print ( a + m , b , c + m , d ) elif  b == d :   print ( a , b + l , c , d + l ) elif  l != m :   print (- 1 ) else :   print ( a , d , c , b )"
460,460A - Vasya and Socks,"a , b = map ( int , input (). split ()); print (( a - 1 )//( b - 1 )+ a )"
461,461A - Appleman and Toastman,"n = input (); l = sorted ( map ( int , input (). split ())) print ( sum ([ x *( i + 2 )   for  i , x  in  enumerate ( l )])- l [- 1 ])"
462,462A - Appleman and Easy Task,"X  =   '' for  i  in  range ( int ( input ())):     X += input () print ( ""YES""   if  X == X [::- 1 ]   else   ""NO"" )"
463,463A - Caisa and Sugar,"r = lambda : map ( int , input (). split ()) n , s = r () ans =- 1 s *= 100 while  n :  n -= 1  x , y = r ()  x = x * 100 + y   if  x <= s :   ans = max ( ans ,( s - x )% 100 ) print ( ans )"
464,464A - No to Palindromes!,"def  trans ( c ):    return  chr ( ord ( c )   +   1 )   n ,  p  =  list ( map ( int ,  input (). split ())) s  =  list ( input ()) s [ n - 1 ]   =  trans ( s [ n - 1 ])   i  =  n  -   1 while  i  >=   0   and  i  <  n :    if  ord ( s [ i ])   >=  ord ( 'a' )   +  p :     s [ i ]   =   'a'     i  -=   1     s [ i ]   =  trans ( s [ i ])    elif  i  >   0   and  s [ i ]   ==  s [ i - 1 ]   or  i  >   1   and  s [ i ]   ==  s [ i - 2 ]:     s [ i ]   =  trans ( s [ i ])    else :     i  +=   1 else :    print ( ""NO""   if  i  <   0   else   """" . join ( s ))   "
465,465A - inc ARG,input () print (( input ()[:- 1 ]   +   '0' ). index ( '0' )   +   1 )
466,466A - Cheap Travel,"n , m , a , b = map ( int , input (). split ()) print ( min ( n * a ,- n // m *- b , n // m * b + n % m * a ))"
467,467A - George and Accommodation,"print ( sum ( eval ( input (). replace ( ' ' , '-' ))<- 1for  _  in   ' ' * int ( input ())))"
468,468A - 24 Game,"n = int ( input ()) if  n <= 3 : exit ( print ( ""NO"" )) if  n % 2 :    print ( ""YES\n5 + 1 = 6\n6 - 3 = 3\n2 * 4 = 8\n8 * 3 = 24"" )    for  i  in  range ( 6 , n , 2 ):      print ( i + 1 , ""-"" , i , ""="" , 1 )      print ( ""24 * 1 = 24"" ) else :    print ( ""YES\n2 * 3 = 6\n6 * 4 = 24\n24 * 1 = 24"" )    for  i  in  range ( 5 , n , 2 ):      print ( i + 1 , ""-"" , i , ""="" , 1 )      print ( ""24 * 1 = 24"" )"
469,469A - I Wanna Be the Guy,"a = input ; print ( ""IO hb,e cmoym ek etyhbeo agrudy!."" [ int ( a ())> len ( set ( a (). split ()[ 1 :]+ a (). split ()[ 1 :])):: 2 ])"
471,471A - MUH and Sticks,"a  =  input (). split () k  =   [ a . count ( c )   for  c  in  a ] print ((( 'Elephant' , 'Bear' )[ 1   in  k ], 'Alien' )[ max ( k )   <   4 ])"
472,472A - Design Tutorial: Learn from Math,"i = int ( input ()); d = i % 2 + 8 ; print ( d , i - d )"
474,474A - Keyboard,"s = input (); a = ""qwertyuiopasdfghjkl;zxcvbnm,./"" for  l  in  input (): print ( a [ a . index ( l )+[ 1 ,- 1 ][ s == 'R' ]], end = '' )"
475,475A - Bayan Bus,"n = int ( input ()) s =[ '+------------------------+' ] d = '|' + '#O' [ n > 2 ]+ '.' * 23 + '|' if  n > 2 : n -= 1 for  i  in  range ( 3 ): x = n // 3 +( n % 3 > i ); s +=[ '|' +( '.' . join ( 'O' * x + '#' *( 11 - x )))] s . insert ( 3 , d ) s +=[ s [ 0 ]] s [ 1 ]+= '.|D|)' s [ 2 ]+= '.|.|' s [ 4 ]+= '.|.|)' print ( '\n' . join ( s ))"
476,476A - Dreamoon and Stairs,"n , m = map ( int , input (). split ()) a = n - n // 2 print ([ a +(- a )% m ,- 1 ][ n < m ])"
478,478A - Initial Bet,"s = sum ( map ( int , input (). split ())) print ([ s // 5 ,- 1 ][ s % 5 > 0   or  s < 1 ])"
479,479A - Expression,"exec ( 'a,b,c=' + 'int(input()),' * 3 ); print ( max ( a + b + c , a * b * c ,( a + b )* c , a *( b + c )))"
483,483A - Counterexample,"l , r = map ( int , input (). split ()) if  l % 2 :  l += 1 if  l + 2 > r :   print (- 1 ) else :   print ( l , l + 1 , l + 2 )"
484,484A - Bits,"for  i  in  range ( int ( input ())):  l , r = map ( int , input (). split ())   while ( l |( l + 1 )<= r ):  l |= l + 1   print ( l )"
485,485A - Factory,"a , m = map ( int , input (). split ()) print ([ ""Yes"" , ""No"" ][( a << 17 )% m > 0 ])"
486,486A - Calculating Function,n = int ( input ()); print ( n // 2 - n % 2 * n )
487,487A - Fight the Monster,"R = lambda : map ( int , input (). split ()) yH , yA , yD = R () mH , mA , mD = R () h , a , d = R () Q = 10 ** 20 for  A  in  range ( max ( 0 , mD - yA + 1 ), max ( 0 , mH + mD - yA )+ 1 ):   for  D  in  range ( max ( 0 , mA - yD )+ 1 ):   H = yH -(( mH + yA + A - mD - 1 )//( yA + A - mD ))* max ( 0 , mA - yD - D )   Q = min ( A * a + D * d + max ( 0 , h *( 1 - H )), Q ) print ( Q )"
488,488A - Giga Tower,n = int ( input ()) r = 1 while   '8'   not   in  str ( n + r ): r += 1 print ( r )
489,489A - SwapSort,"n = int ( input ()) a = list ( map ( int , input (). split ()))   print ( n - 1 ) for  i  in  range ( n - 1 ): 	m = i + a [ i :]. index ( min ( a [ i :])) 	 print ( i , m ) 	a [ i ], a [ m ]= a [ m ], a [ i ]"
490,490A - Team Olympiad,"input (); a =[[],[],[]] for  i , x  in  enumerate ( input (). split (), 1 ): a [ int ( x )- 1 ]+=[ i ] print ( min ( map ( len , a ))) for  x  in  zip (* a ): print (* x )"
491,491A - Up the hill,"a , b = int ( input ()), int ( input ()) print (*[* range ( b + 1 , a + b + 2 ),* range ( b , 0 ,- 1 )])"
492,492A - Vanya and Cubes,a = int ( input ()); i = 0 while ( a >= 0 ): i += 1 ; a -= i *( i + 1 )/ 2 print ( i - 1 )
493,493A - Vasya and Football,"I = input s =[ I (), I ()] d ={} for  _  in   '0' * int ( I ()): 	m , h , t , k = I (). split (); t = int ( t )*( 2 *( h == 'h' )- 1 ); a = d . get ( t , 0 ); d [ t ]=[ a + 1 , max ( a , 2 )][ k == 'r' ] 	 if  d [ t ]== 2 : print ( s [ t < 0 ], abs ( t ), m ); d [ t ]= 3"
495,495A - Digital Counter,"t , n =[ 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 1 , 2 ], int ( input ()) print ( t [ n // 10 ]* t [ n % 10 ])"
496,496A - Minimum Difficulty,"input () a =* map ( int , input (). split ()), print ( max (   max ( y - x  for  x , y  in  zip ( a , a [ 1 :])),   min ( z - x  for  x , _ , z  in  zip ( a , a [ 1 :], a [ 2 :]) )))"
499,499A - Watching a movie,"I = lambda : map ( int , input (). split ()) n , x = I () p , w = 0 , 0 for  _  in  range ( n ): 	l , r = I () 	 while  p < l - x : p += x 	w +=( r - p ); p = r print ( w )"
500,500A - New Year Transportation,"I = lambda : map ( int , input (). split ()) n , t = I () a = list ( I ()) c = 0 while  c < t - 1 : c += a [ c ] print ( 'YNEOS' [ c >= t :: 2 ])"
501,501A - Contest,"a , b , c , d = map ( int , input (). split ()) a = max ( 3 * a // 10 , a - a // 250 * c ) b = max ( 3 * b // 10 , b - b // 250 * d ) print ([[ 'Tie' , 'Misha' ][ a > b ], 'Vasya' ][ a < b ])"
505,505A - Mr. Kitayuta's Gift,a = input () for  i  in  range ( 26 ):      for  j  in  range ( len ( a )+ 1 ):         b = a [: j ]+ chr ( 97 + i )+ a [ j :]          if  b == b [::- 1 ]: print ( b ); exit () print ( 'NA' )
507,507A - Amr and Music,"R = lambda : map ( int , input (). split ()) n , k = R ();  l = sorted ( zip ( R (), range ( 1 , n + 1 )));  h  =   [] for  _ , i  in  l : 	k -= _ 	 if  k >= 0 :  h . append ( i ) print ( len ( h )); print (* h )"
508,508A - Pasha and Pixels,"R = lambda : map ( int , input (). split ()) n , m , k = R () N = 1024 g =[[ 0 ]* N  for  _  in  range ( N )] def  T ( r , c ):    return  g [ r ][ c ]   and  g [ r + 1 ][ c ]   and  g [ r ][ c + 1 ]   and  g [ r + 1 ][ c + 1 ] for  i  in  range ( k ):   r , c = R ()   g [ r ][ c ]= 1    if  T ( r - 1 , c - 1 )   or  T ( r - 1 , c )   or  T ( r , c - 1 )   or  T ( r , c ):      print ( i + 1 )      break else :    print ( 0 )"
509,509A - Maximum in Table,"print ([ 0 , 1 , 2 , 6 , 20 , 70 , 252 , 924 , 3432 , 12870 , 48620 ][ int ( input ())])"
510,510A - Fox And Snake,"n , m = map ( int , input (). split ()) for  i  in  range ( n ):      print ([ '#' * m , '.' *( m - 1 )+ '#' , '#' * m , '#' + '.' *( m - 1 )][ i % 4 ])"
513,513A - Game,"a , b ,* _ = map ( int , input (). split ()); print ( 'SFeicrosntd' [ a > b :: 2 ])"
514,514A - Chewbaсca and Number,"s =[ min ( int ( i ), 9 - int ( i ))   for  i  in  input ()] if  s [ 0 ]< 1 : s [ 0 ]= 9 print (* s , sep = '' )"
515,515A - Drazil and Date,"a , b , s = map ( int , input (). split ()); print ( 'YNEOS' [( a + b + s )% 2   or  abs ( a )+ abs ( b )> s :: 2 ])"
518,518A - Vitaly and Strings,"f = lambda  s :  f ( s [:- 1 ])+ 'a'   if  s [- 1 ]== 'z' else  s [:- 1 ]+ chr ( ord ( s [- 1 ])+ 1 ) s = f ( input ()) print (( 'No such string' , s )[ s < input ()])"
519,519A - A and B and Chess,"p  =  dict ( q = 9 ,  Q =- 9 ,  r = 5 ,  R =- 5 ,  b = 3 ,  B =- 3 ,  n = 3 ,  N =- 3 ,  p = 1 ,  P =- 1 ) s  =   0 for  i  in  range ( 8 ):      for  j  in  input ():          if  j  in  p :  s  +=  p [ j ] print ([ 'Draw' ,   'Black' ,   'White' ][( s  >   0 )   -   ( s  <   0 )])"
520,520A - Pangram,input (); print ( 'YNEOS' [ len ( set ( input (). upper ()))< 26 :: 2 ])
522,522A - Reposts,"d ={ 'polycarp' : 1 } for  _  in  range ( int ( input ())): a , b , c = input (). lower (). split (); d [ a ]= d [ c ]+ 1 print ( max ( d . values ()))"
523,"523A - Rotate, Flip and Zoom","I = input R = range w , h = map ( int , I (). split ()) t =[ I () for  _  in  R ( h )] for  r  in [[ t [ i ][ j ]* 2for  i  in  R ( h )] for  j  in  R ( w )]: s = '' . join ( r ); print ( s + '\n' + s )"
524,"524A - Возможно, всEзнаете этисEлюдей?","d ={} m , k = map ( int , input (). split ()) for  i  in  range ( m ):   a , b = map ( int , input (). split ())   d . setdefault ( a , set ()). add ( b )   d . setdefault ( b , set ()). add ( a ) for  x  in  sorted ( d ):   s =[]    for  y  in  sorted ( d ):      if  x == y  or  y  in  d [ x ]:   continue      if  len ( d [ x ]& d [ y ])* 100 >= k * len ( d [ x ]):  s +=[ str ( y )]    print ( str ( x )+ ':' , len ( s ), ' ' . join ( s ))"
525,525A - Vitaliy and Pie,"a =[* open ( 0 )][ 1 ] s ={} r = 0 for  x , y  in   [* zip ( a , a [ 1 :])][:: 2 ]:   s [ x . upper ()]= s . get ( x . upper (), 0 )+ 1    if  s . get ( y , 0 )> 0 : s [ y ]-= 1    else : r += 1 print ( r )"
526,526A - King of Thieves,"I = input R = range n = int ( I ()) s = I () print ([ 'no' , 'yes' ][ any ( max ( map ( len , s [ j :: i + 1 ]. split ( '.' )))> 4for  i  in  R ( n // 4 ) for  j  in  R ( i + 1 ))])"
527,527A - Playing with Paper,"a , b = map ( int , input (). split ()); k = 0 while  b : k += a // b ; a , b = b , a % b print ( k )"
534,534A - Exam,"n  =  int ( input ()) print (( n ,  n  -   1 )[( n  <   4 )   -   ( n  ==   1 )]) print (*( range ( n  -   1 ,   0 ,   - 2 ), '' )[ n  -   2   <   2 ],   *( range ( n ,   0 ,   - 2 )))"
535,535A - Tavas and Nafas,"a  =   [ 'zero' , 'one' , 'two' , 'three' , 'four' , 'five' , 'six' , 'seven' , 'eight' , 'nine' , 'ten' , 'eleven' , 'twelve' , 'thirteen' ,       'fourteen' , 'fifteen' , 'sixteen' , 'seventeen' , 'eighteen' , 'nineteen' ] b  =   [ 'twenty' , 'thirty' , 'forty' , 'fifty' , 'sixty' , 'seventy' , 'eighty' , 'ninety' ] n  =  int ( input ()) print ( a [ n ]   if  n  <   20   else  b [ n // 10 - 2 ]   +   ( ''   if  n  %   10 == 0   else   '-' + a [ n % 10 ]))"
538,538A - Cutting Banner,s = input () c = 'CODEFORCES' print ( 'NYOE S' [( any ( s . startswith ( c [: i ])   and  s . endswith ( c [ i :])   for  i  in  range ( 11 ))):: 2 ])
540,540A - Combination Lock,"i = lambda : map ( ord , input ()); i (); print ( sum ( min ( abs ( a - b ), 10 - abs ( b - a )) for  a , b  in  zip ( i (), i ())))"
544,544A - Set of Strings,"k ,  q ,  v ,  s  =  int ( input ()),  input (),   'YES' ,  set () for  ch  in  q :      if  k  ==   0   or  ch  in  s :         v  +=  ch      else :         v  +=   '\n'   +  ch         s . add ( ch )         k  -=   1 print ( 'NO'   if  k  else  v )"
545,545A - Toy Cars,"n = int ( input ()) a =[ i + 1   for  i  in  range ( n )   if   {* map ( int , input (). split ())}&{ 1 , 3 }<{ 1 }] print ( len ( a )) print (* a )"
546,546A - Soldier and Bananas,"k , n , w = map ( int , input (). split ()); print ( max ( 0 , w *( w + 1 )* k // 2 - n ))"
548,548A - Mike and Fax,"s , k = input (), int ( input ()) l = len ( s )// k u =[ s [ i :: l ]   for  i  in  range ( l )] print ([ ""NO"" , ""YES"" ][ u == u [::- 1 ]   and  l * k == len ( s )])"
549,549A - Face Detection,"n , m = map ( int , input (). split ()) a = list ( input ()   for  i  in  range ( n )) print ( sum ( sorted ( a [ i ][ j : j + 2 ]+ a [ i + 1 ][ j : j + 2 ])== sorted ( ""face"" )   for  i  in  range ( n - 1 )   for  j  in  range ( m - 1 )))"
550,550A - Two Substrings,"s = input () u = s . find ( 'AB' ); v = s . find ( 'BA' ) print ( 'YES' if   ( u + 1   and  s . find ( 'BA' , u + 2 )+ 1 )   or   ( v + 1   and  s . find ( 'AB' , v + 2 )+ 1 ) else 'NO' )"
551,551A - GukiZ and Contest,"n = input () l = list ( map ( int , input (). split ())) for  x  in  l :   print ( sorted ( l )[::- 1 ]. index ( x )+ 1 )"
552,552A - Vanya and Table,"r = 0 for  s  in [* open ( 0 )][ 1 :]:   a , b , c , d = map ( int , s . split ())   r +=( c - a + 1 )*( d - b + 1 ) print ( r )"
554,554A - Kyoya and Photobooks,print ( 25 * len ( input ())+ 26 )
555,555A - Case of Matryoshkas,"n , k = map ( int , input (). split ()) a = 0 for  _  in   ' ' * k :      * l ,= map ( int , input (). split ())      for  i  in  range ( 1 , l [ 0 ]):          if  l [ i ]== i  and  l [ i + 1 ]== i + 1 : a += 2 print ( 2 * n - k - 1 - a )"
556,556A - Case of the Zeros and Ones,print ( abs ( int ( input ())- 2 * input (). count ( '1' )))
557,557A - Ilya and Diplomas,"I = lambda : map ( int , input (). split ()) n = next ( I ()) a , b = I () c , d = I () f , e = I () x = min ( b , n - c - f ) y = min ( d , n - x - f ) print ( x , y , n - x - y )"
558,558A - Lala Land and Apple Trees,"n  =  int ( input ()) a  =   [[( 1000000 ,   0 )],   [( 100000 ,   0 )]] for  i  in  range ( n ):     x ,  y  =  map ( int ,  input (). split ())     a [ x  >   0 ]. append (( abs ( x ),  y )) print ( sum ( x [ 1 ]   +  y [ 1 ]   for  x ,  y  in  zip (* map ( sorted ,  a ))))"
560,560A - Currency System in Geraldion,input () print (( '1'   in  input (). split ())*- 2 + 1 )
567,567A - Lineland Mail,"n  =  int ( input ()) x  =  list ( map ( int  ,  input (). split ())) for  i  in  range ( n ):      print ( min ( abs ( x [ i ]- x [ i - 1 ]),  abs ( x [( i + 1 )% n ]- x [ i ])),  max ( x [- 1 ]- x [ i ],  x [ i ]- x [ 0 ]))"
568,568A - Primes or Palindromes?,"p ,  q  =  map ( int ,  input (). split ()) n  =   1200000 t  =   [ 0 ,  q ]   *   600000 for  i  in  range ( 3 ,   1096 ,   2 ):      if  t [ i ]:          for  j  in  range ( i  *  i ,  n ,  i ):  t [ j ]   =   0 t [ 1 ],  t [ 2 ]   =   - p ,  q  -  p for  i  in  range ( 3 ,   10 ):  t [ i ]   -=  p for  i  in  range ( 1 ,   1000 ):     u  =  str ( i )     v  =  u [::- 1 ]      for  j  in   '0123456789' :         k  =  int ( u  +  j  +  v )          if  k  <  n :  t [ k ]   -=  p     t [ int ( u  +  v )]   -=  p j  =  s  =   0 for  i ,  q  in  enumerate ( t ):     s  +=  q      if  s  <=   0 :  j  =  i print ( j )"
569,569A - Music,"t , s , q = map ( int , input (). split ()) res = 0 while  s < t : s *= q ; res += 1 print ( res )"
570,570A - Elections,"a , b = map ( int , input (). split ()); c =[ 0 ]* a for  i  in  range ( b ):  d = list ( map ( int , input (). split ())); c [ d . index ( max ( d ))]+= 1 print ( c . index ( max ( c ))+ 1 )"
571,571A - Lengthening Sticks,"#in the name of god #Mr_Rubick a , b , c , l = map ( int ,  input (). split ()) cnt =( l + 3 )*( l + 2 )*( l + 1 )// 3 for  i  in   ( a , b , c ):     s = 2 * i - a - b - c      for  x  in  range ( max ( 0 ,- s ), l + 1 ):         m  =  min ( s + x , l - x )         cnt -=( m + 1 )*( m + 2 ) print ( cnt // 2 )"
572,572A - Arrays,"z = lambda   : tuple ( map ( int , input (). split ())); s , s1 = z (); a , b = z (); print ( ""YES""   if  z ()[ a - 1 ]< z ()[- b ]   else   ""NO"" )"
573,573A - Bear and Poker,"input () a = 0 for  t  in  map ( int , input (). split ()):      while  t % 2 == 0 : t //= 2      while  t % 3 == 0 : t //= 3      if   not  a : a = t      elif  a != t : print ( 'No' ); exit () print ( 'Yes' )"
574,574A - Bear and Elections,"input () s = list ( map ( int , input (). split ())) k = 0 while  s [ 0 ]<= max ( s [ 1 :]):  s [ 1 + s [ 1 :]. index ( max ( s ))]-= 1  s [ 0 ]+= 1  k += 1 print ( k )"
576,576A - Vasya and Petya's Game,"n = int ( input ()) a = ' ' . join (( ' ' . join (( str ( i ** k ) for  k  in  range ( 1 , 11 ) if  i ** k <= n ))) for  i  in  range ( 2 , n + 1 ) if  all ( i % j > 0   for  j  in  range ( 2 , i ))) print ( len ( a . split ()), '\n' , a )"
577,577A - Multiplication Table,"n , x = map ( int , input (). split ()) print ( sum (( x % i == 0and  x / i <= n ) for  i  in  range ( 1 , n + 1 )))"
578,578A - A Problem about Polyline,"a , b = map ( int ,  input (). split ()) print   (- 1   if  b > a  else (( a + b )/ 2 )/(( a + b )//( 2 * b )))"
579,579A - Raising Bacteria,print ( bin ( int ( input ())). count ( '1' ))
580,580A - Kefa and First Steps,"input (); c = m = s = 0 for  i  in  map ( int , input (). split ()): c =[ c + 1 , 1 ][ i < s ]; m = max ( m , c ); s = i print ( m )"
581,581A - Vasya the Hipster,"a , b = sorted ( map ( int , input (). split ())); print ( a ,( b - a )// 2 )"
582,582A - GCD Table,"from  collections  import   Counter from  fractions  import  gcd input () g ,  v  =   Counter ( map ( int ,  input (). split ())),   [] while  g :     x  =  max ( g )     g [ x ]   -=   1      for  y  in  v :         g [ gcd ( x ,  y )]   -=   2     v . append ( x )     g  +=   Counter () print ( ' ' . join ( map ( str ,  v )))"
583,583A - Asphalting Roads,"n = int ( input ()) a , b =[ 0 , 0 ]* n ,[ 0 , 0 ]* n for  i  in  range ( n * n ):   x , y = map ( int , input (). split ())    if  a [ x ]< 1 > b [ y ]: a [ x ]= b [ y ]= 1 ; print ( i + 1 , end = ' ' )"
584,584A - Olesya and Rodion,"n , t = map ( int , input (). split ()) a = 10 **( n - 1 -( t > 9 )) print ([ t * a ,- 1 ][ a < 1 ])"
586,586A - Alena's Schedule,"import  re input () print ( len ( """" . join ( re . split ( '00+' , input (). replace ( ' ' , '' ). strip ( '0' )))))"
587,587A - Duff and Weight Lifting,n  =  int ( input ()) a  =   [ int ( x )   for  x  in  input (). split ()] l  =   [ 0 ]   *   ( 10 ** 6   +   100 ) for  x  in  a : 	l [ x ]   +=   1 cur  =   0 ans  =   0 for  x  in  l : 	cur  +=  x 	 if  cur  %   2 : 		ans  +=   1 	cur  //=   2 print ( ans )
588,588A - Duff and Meat,"n = int ( input ()) m = 100 r = 0 while  n : a , b = map ( int , input (). split ()); m = min ( b , m ); r += a * m ; n -= 1 print ( r )"
591,591A - Wizards' Duel,"l , p , q =[ int ( input ()) for  _  in [ 1 , 2 , 3 ]] print ( l * p /( p + q ))"
592,592A - PawnChess,"R = range m =[ ''   for  i  in  R ( 8 )] for  _  in  R ( 8 ):     v = input ()      for  j  in  R ( 8 ): m [ j ]+= v [ j ] a = b = 9 for  s  in  m :     x =[ s [::- 1 ]. find ( 'B' ), s [::- 1 ]. find ( 'W' ), s . find ( 'W' ), s . find ( 'B' )]      for  i  in   0 , 1 , 2 , 3 : x [ i ]=[ x [ i ], 9 ][ x [ i ]< 0 ]      if  x [ 0 ]< x [ 1 ]: b = min ( b , x [ 0 ])      if  x [ 2 ]< x [ 3 ]: a = min ( a , x [ 2 ]) print ( 'AB' [ b < a ])"
593,593A - 2Char,"z = input r = range d =[ s  for  s  in   ( z ()   for  _  in  r ( int ( z ())))   if  len ( set ( s ))<= 2 ] print ( max (( sum ( len ( s )   for  s  in  d  if  set ( s )<={ chr ( i ), chr ( j )})   for  i  in  r ( 97 , 123 )   for  j  in  r ( i , 123 ))))"
595,595A - Vitaly and Night,"c  =   0 for  i  in  range ( int ( input (). split ()[ 0 ])): 	a  =  input (). split () 	 while  len ( a ): 		 if   '1'   in   [ a . pop (),  a . pop ()]: 			c += 1 print ( c )"
596,596A - Wilbur and Swimming Pool,"x =[] y =[] I = lambda : list ( map ( int , input (). split ())) for  _  in   '0' * I ()[ 0 ]: s = I (); x +=[ s [ 0 ]]; y +=[ s [ 1 ]] t =( max ( x )- min ( x ))*( max ( y )- min ( y )) print ([ t ,- 1 ][ not  t ])"
597,597A - Divisibility,"k , a , b = map ( int , input (). split ()) print ( b // k -( a - 1 )// k )"
598,598A - Tricky Sum,for  t  in  range ( int ( input ())):     n = int ( input ())      print ( n *( n + 1 )// 2 - 2 *(( 1 << n . bit_length ())- 1 ))
599,599A - Patrick and Shopping,"a , b , c = map ( int , input (). split ()) print ( min ( a + b + c , a + b << 1 , a + c << 1 , b + c << 1 ))"
600,600A - Extract Numbers,"t  =  input (). replace ( ';' ,   ',' ). split ( ',' ) d  =   [[],   []] for  q  in  t :  d [ not  q . isdigit ()   or  str ( int ( q ))   !=  q ]. append ( q ) for  s  in  d :   print ( '""'   +   ',' . join ( s )   +   '""'   if  s  else   '-' )"
601,601A - The Two Routes,"n , m = map ( int , input (). split ()) a =[[ 0 ]* n  for  i  in  range ( n )] for  i  in  range ( m ):     x , y = map ( int , input (). split ())     a [ x - 1 ][ y - 1 ]= a [ y - 1 ][ x - 1 ]= 1 ; b =[- 1 ]* n b [ 0 ]= 0 q =[ 0 ] while  q :     u = q . pop ( 0 )      for  v  in  range ( n ):          if  a [ u ][ v ]!= a [ 0 ][ n - 1 ]   and  b [ v ]   ==- 1 :             b [ v ]= b [ u ]+ 1             q . append ( v ) print ( b [ n - 1 ])  "
602,602A - Two Bases,"I = lambda :[* map ( int , input (). split ())] n , a = I () x = 0 for  c  in  I (): x = x * a + c m , b = I () y = 0 for  c  in  I (): y = y * b + c print ( '<=>' [( x >= y )+( x > y )])"
604,604A - Uncowed Forces,"I = lambda : map ( int , input (). split ()) m =* I (), w =* I (), s , u = I () p =[ 500 , 1000 , 1500 , 2000 , 2500 ] print ( sum ( max ( 3 * p [ i ]// 10 ,( 250 - m [ i ])* p [ i ]// 250 - 50 * w [ i ]) for  i  in  range ( 5 ))+ s * 100 - u * 50 )"
605,605A - Sorting Railway Cars,"n = int ( input ()) l =[ n ]*( n + 1 ) for  c  in  map ( int , input (). split ()): l [ c ]= l [ c - 1 ]- 1 print ( min ( l ))"
606,606A - Magic Spheres,"s = sum ([ min (( int ( x )- int ( y ))// 2 , int ( x )- int ( y ))   for  x , y  in  zip ( input (). split ( ' ' ), input (). split ( ' ' ))]) print ( 'YNEOS' [ int ( s < 0 ):: 2 ])"
607,607A - Chain Reaction,"n  =  int ( input ()) bb  =   [ 0 ]   *   1000001 for  _  in  range ( n ):     a ,  b  =  map ( int ,  input (). split ())     bb [ a ]   =  b a  =   0 for  i ,  b  in  enumerate ( bb ):      if  b :          if  i > b  :             a  =   ( bb [ i  -  b  -   1 ]   +   1 )          else   :             a = 1                            bb [ i ]   =  a print ( n  -  max ( bb ))"
608,608A - Saitama Destroys Hotel,"I = lambda : map ( int , input (). split ()) n , s = I () print ( max ( max ( sum ( I ()), s ) for  _  in   '0' * n ))"
609,609A - ФлесEкартсEPython 3,pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln str pun pln pun kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pun kwd pun pln pun pln pun
610,610A - Pasha and Stick,n = int ( input ()) print ((( n + 3 )// 4 - 1 )*( n % 2 == 0 ))
611,611A - New Year and Days,"a , _ , w = input (). split () print ([[[ 12 , 52 +( a  in '56' )][ len ( w )< 5 ], 11 ][ a == '30' ], 7 ][ a == '31' ])"
612,612A - The Text Splitting,"n , p , q = map ( int , input (). split ()) s = input () for  i  in  range ( 111 ):   for  j  in  range ( 111 ):    if  p * i + q * j == n :    n =- 1     print ( i + j )     for  l  in  range ( i ):      print ( s [: p ])     s = s [ p :]     for  l  in  range ( j ):      print ( s [: q ])     s = s [ q :] if  n !=- 1 :   print (- 1 )"
613,613A - Peter and Snow Blower,"import  math n ,  px ,  py  =  map ( int ,  input (). split ()) xs ,  ys ,  l  =  list (),  list (),  list () for  _  in  range ( n ): 	x ,  y  =  map ( int ,  input (). split ()) 	xs . append ( x  -  px ) 	ys . append ( y  -  py ) x0 ,  y0  =  xs [- 1 ],  ys [- 1 ] for  x ,  y  in  zip ( xs ,  ys ): 	l . append ( x  *  x  +  y  *  y ) 	dx ,  dy  =  x  -  x0 ,  y  -  y0 	 if   ( x0  *  dx  +  y0  *  dy )   *   ( x  *  dx  +  y  *  dy )   <   0 : 		x0  =  x0  *  y  -  x  *  y0 		l . append ( x0  *  x0  /   ( dx  *  dx  +  dy  *  dy )) 	x0 ,  y0  =  x ,  y print ( math . pi  *   ( max ( l )   -  min ( l )))"
614,614A - Link/Cut Tree,"l , r , k = map ( int ,  input (). split ()) print (*[ k ** p  for  p  in  range ( 65 ) if  l <= k ** p <= r ] or [- 1 ])"
615,615A - Bulbs,"r = lambda  i : map ( int , input (). split ()[ i :]) n , m = r ( 0 ) a =[] for  _  in [ 0 ]* n : a += r ( 1 ) print ( 'YNEOS' [ len ( set ( a ))!= m :: 2 ])"
616,616A - Comparing Two Long Integers,"exec ( 'a,b=' + 2 * 'input().rjust(10**6,""0""),' ) print ( '<>=' [( a == b )+( a >= b )])"
617,617A - Elephant,print (( int ( input ())+ 4 )// 5 )
618,618A - Slime Combining,"print (*[ i + 1   for  i , x  in  enumerate ( bin ( int ( input ()))[ 2 :][::- 1 ]) if  x > '0' ][::- 1 ])"
620,620A - Professor GukiZ's Robot,"print ( max ( abs ( a - b ) for  a , b  in  zip (*[ map ( int , input (). split ()) for  _  in ( 1 , 2 )])))"
621,621A - Wet Shark and Odd and Even,"input () a = list ( map ( int , input (). split ())) s = sum ( a ) print ( s - min ( i  for  i  in  a  if  i % 2 )   if  s % 2   else  s )"
622,622A - Infinite Sequence,n = int ( input ())- 1 r = int ((- 1 +( 1 + 4 * n * 2 )** 0.5 )/ 2 ) print ( n + 1 -( r *( r + 1 ))// 2 )
623,623A - Graph and String,"f  =   lambda :  map ( int ,  input (). split ()) n ,  m  =  f () p  =   [ 1   <<  i  for  i  in  range ( n )] for  i  in  range ( m ):     x ,  y  =  f ()     x  -=   1     y  -=   1     p [ x ]   |=   1   <<  y     p [ y ]   |=   1   <<  x s  =  set ( p ) b  =   ( 1   <<  n )   -   1 t  =   {} if  b  in  s :     t [ b ]   =   'b'     s . remove ( b ) if  len ( s )   ==   2 :     a ,  c  =  s      if  a  |  c  ==  b  and  bool ( a  &  c )   ==   ( b  in  t ):         t [ a ],  t [ c ]   =   'ac'         s . clear () print ( 'No'   if  s  else   'Yes\n'   +   '' . join ( map ( t . get ,  p )))"
624,624A - Save Luke,"a , b , c , d = map ( int , input (). split ()); print (( b - a )/( c + d ))"
625,625A - Guest From the Past,"n , a , b , c  =   [ int ( input ())   for  _  in ( 1 , 2 , 3 , 4 )] k  =  max ( 0 ,( n - c )//( b - c )) print ( max ( n // a ,  k +( n - k *( b - c ))// a ))"
626,626A - Robot Sequence,"n , s  =  int ( input ()),  input () print ( sum ( i . count ( 'L' )   ==  i . count ( 'R' )   and  i . count ( 'D' )   ==  i . count ( 'U' )   for  i  in   [ s [ x : y + 1 ]   for  x  in  range ( n )   for  y  in  range ( x ,  n )]))"
627,627A - XOR Equation,"s ,  x  =  map ( int ,  input (). split ()) print ( 0   if  s  <  x  or   ( s  -  x )   &   ( 2   *  x  +   1 )   else   2   **  bin ( x ). count ( '1' )   -   2   *   ( s  ==  x ))"
628,628A - Tennis Tournament,"n , b , p = map ( int , input (). split ()) print (( n - 1 )*( b * 2 + 1 ), n * p )"
629,629A - Far Relative’s Birthday Cake,"p = lambda  x : x *( x - 1 )// 2 n , r = int ( input ()), 0 a =[ input ()   for  _  in [ 0 ]* n ] for  _  in [ 0 , 0 ]: r += sum ( p ( x . count ( 'C' ))   for  x  in  a ); a = zip (* a ) print ( r )"
630,630A - Again Twenty Five!,print ( 25 )
631,631A - Interview,"input () print ( eval ( input (). replace ( "" "" ,   ""|"" ))   +  eval ( input (). replace ( "" "" ,   ""|"" )))"
632,632A - Grandma Laura and Apples,"I = input n , p = map ( int , I (). split ()) a = k = 0 for  i  in   [ 4 < len ( I ()) for  _  in   ' ' * n ][::- 1 ]: k += a * p + i * p // 2 ; a = a * 2 + i print ( k )"
633,633A - Ebony and Ivory,"a , b , c = map ( int , input (). split ()) i = 0 s = 'NO' while  i <= c : s = s  if ( c - i )% b  else   'YES' ; i += a print ( s )"
634,634A - Island Puzzle,n = int ( input ()) a = input (). split () b = input (). split () a . remove ( '0' ) b . remove ( '0' ) k = a . index ( b [ 0 ]) a = a [ k :]+ a [: k ] if  a == b :      print ( 'YES' ) else :      print ( 'NO' )
635,635A - Orchestra,"f  =   lambda :  map ( int ,  input (). split ()) r ,  c ,  n ,  k  =  f () t  =   [ list ( f ())   for  i  in  range ( n )] s  =   0 for  i  in  range ( 1 ,  r  +   1 ):      for  j  in  range ( i ,  r  +   1 ):          for  u  in  range ( 1 ,  c  +   1 ):              for  v  in  range ( u ,  c  +   1 ):                 s  +=  sum ([ i  <=  x  <=  j  and  u  <=  y  <=  v  for  x ,  y  in  t ])   >=  k print ( s )"
637,637A - Voting for Photos,"n = input () a , b =[ 0 ]* 11 ** 6 , 0 for  x  in  map ( int , input (). split ()):  a [ x ]+= 1 ;  b = x  if  a [ b ]< a [ x ]   else  b print ( b )"
638,638A - Home Numbers,"n , h = map ( int , input (). split ()) print ( h // 2 + 1   if  h % 2   else   ( n - h )// 2 + 1 )"
639,639A - Bear and Displayed Friends,"I = lambda : map ( int , input (). split ()) n , k , q = I () t =[ 0 ]+ list ( I ()) a =[] s = '' for  _  in  range ( q ):     p , i = I ()      if  p == 1 : a . append ( i )      else : a = sorted ( a , key = lambda  x : t [ x ], reverse = 1 )[: k ]; s +=[ 'NO\n' , 'YES\n' ][ i  in  a ] print ( s )"
641,641A - Little Artem and Grasshopper,"n = int ( input ()) a = input () d =* map ( int , input (). split ()), x = 0 v =[ 1 ,- 1 ] for  i  in  range ( n + 1 ):   x += v [ a [ x ]== '<' ]* d [ x ]    if  x < 0   or  x >= n : break print ( 'IN' *( i >= n )+ 'FINITE' )"
644,644A - Parliament of Berland,"n , a , b = map ( int , input (). split ()) if  a * b < n : print (- 1 ) else :   x = 1    for  i  in  range ( a ):     a =* map ( lambda  x :[ x , 0 ][ x > n ], range ( x , x + b )),      if  b % 2 < 1   and  i % 2 : a = a [::- 1 ]      print (* a )     x += b"
645,645A - Amity Assessment,"f  =   lambda :   'ABC'   in   2 *( input ()+ input ()[::- 1 ]). replace ( 'X' ,   '' )   print ( 'NO'   if  f ()^ f ()   else   'YES' )"
646,646A - Три брата,"print (* set ( ""123"" )- set ( input ()))"
647,647A - ОсE�нки ВасE�,input () x = y = 0 for  i  in  input ()[:: 2 ]:  y += 1   if  i < '4' : y = 0   elif  y % 3 == 0 : x += 1 print ( x )
648,648A - Наибольший подъем,"n , k =( int ( z )   for  z  in  input (). split ()) h =[ 0 ]* k for  i  in  range ( n ): 	s = input () 	 for  j  in  range ( k ): 		 if  s [ j ]== '*' : 			h [ j ]+= 1 mi = 0 ma = 0 for  i  in  range ( 1 , k ): 	 if  h [ i - 1 ]- h [ i ]> mi : 		mi = h [ i - 1 ]- h [ i ] 	 if  h [ i ]- h [ i - 1 ]> ma : 		ma = h [ i ]- h [ i - 1 ] print ( ma , mi )"
649,649A - Любимые сE�сE�а Поликарпа,"a  =  input () a  =  list ( map ( int , input (). split ())) i  =   0   while  len ( a )   >   0 :     n  =  len ( a )     i  +=   1     a  =   [ x // 2   for  x  in  a  if   not  x  %   2 ]   print ( 2   **   ( i - 1 ),  n )"
650,650A - Watchmen,"import  collections r = 0 ; a , b , c =[ collections . Counter ()   for  _  in   [ 0 , 0 , 0 ]] for  _  in  range ( int ( input ())): 	x , y = map ( int ,  input (). split ()) 	r += a [ x ]+ b [ y ]- c [( x , y )] 	a [ x ]+= 1 ; b [ y ]+= 1 ; c [( x , y )]+= 1 print ( r )"
651,651A - Joysticks,"x , y = map ( int , input (). split ()) print ( max ( x + y - 3 +(( y - x )% 3 > 0 ), 0 ))"
652,652A - Gabriel and Caterpillar,"f  =   lambda :  map ( int ,  input (). split ()) x ,  y  =  f () a ,  b  =  f () h  =  y  -  x  -   8   *  a  -   1 d  =   12   *   ( a  -  b ) print ( 0   if  h  <   0   else  h  //  d  +   1   if  a  >  b  else   - 1 )"
653,653A - Bear and Three Balls,"input () T  =  set ( map ( int ,  input (). split ()))   print ( 'YES'   if  any ( t - 1   in  T  and  t + 1   in  T  for  t  in  T )   else   'NO' )"
655,645A - Amity Assessment,"input () T  =  set ( map ( int ,  input (). split ()))   print ( 'YES'   if  any ( t - 1   in  T  and  t + 1   in  T  for  t  in  T )   else   'NO' )"
656,656A - Da Vinci Powers,x = int ( input ()) y = 1 if  x >= 13 : 	y = 8092 	x -= 13 print ( y << x )  
657,639B - Bear and Forgotten Tree 3,x = int ( input ()) y = 1 if  x >= 13 : 	y = 8092 	x -= 13 print ( y << x )  
658,658A - Bear and Reverse Radewoosh,"i = lambda : map ( int , input (). split ()) n , c = i (); p =[* i ()]; t =[* i ()]; s , a , b = 0 , 0 , 0 for  k  in  range ( n ):   a += t [ k ];  b += t [ n - 1 - k ]   s += max ( 0 , p [ k ]- a * c )- max ( 0 , p [ n - k - 1 ]- b * c ) print ([[ 'Tie' , 'Radewoosh' ][ s < 0 ], 'Limak' ][ s > 0 ])"
659,659A - Round House,"a , b , c = map ( int , input (). split ()) print (( b + c - 1 )% a + 1 )"
660,660A - Co-prime Array,"import  math n = int ( input ()) ar = list ( map ( int , input (). split ())) a =[] c = 0 for  i  in  range ( len ( ar )- 1 ):     a +=[ ar [ i ]]      if  math . gcd ( ar [ i ], ar [ i + 1 ])   >   1 :         a +=[ 1 ]         c += 1 a +=[ ar [- 1 ]] print   ( c ) print (* a )"
663,663A - Rebus,"s , n = input (). split ( ' = ' ) n = int ( n ) a = s . count ( '+' )+ 1 b = s . count ( '-' ) if  a - b * n <= n <= a * n - b : 	s = s . replace ( '- ?' ,   '- !' ) 	 if  a - b < n : 		k = 1 		 while  k * a - b < n : k += 1 		s = s . replace ( '?' , str ( k )). replace ( str ( k ), str ( k - 1 ), k * a - b - n ). replace ( '!' , '1' ) 	 else : 		k = 1 		 while  a - k * b > n : k += 1 		s = s . replace ( '!' , str ( k )). replace ( str ( k ), str ( k - 1 ), k * b + n - a ). replace ( '?' , '1' ) 	 print ( 'Possible\n' + s + ' = ' + str ( n )) else : 	 print ( 'Impossible' )"
664,664A - Complicated GCD,"a , b = input (). split (); print ([ a , 1 ][ b != a ])"
665,665A - Buses Between Cities,"f  =   lambda  k :  map ( int ,  input (). split ( k )) a ,  u  =  f ( ' ' ) b ,  v  =  f ( ' ' ) h ,  t  =  f ( ':' ) t  +=   ( h  -   5 )   *   60 print ( min ( t  +  u  -   1 ,   1139 )   //  b  -  max ( t  -  v ,   - 1 )   //  b )"
666,666A - Reberland Linguistics,"t  =  input () s ,  d  =  set (),  set () p  =   {( len ( t ),   2 )}   while  p :     m ,  x  =  p . pop ()     r  =  m  +  x        for  y  in   [ x ,   5   -  x ]:         l  =  m  -  y         q  =   ( l ,  y )            if  q  in  d  or  l  <   5   or  t [ l : m ]   ==  t [ m : r ]:   continue         s . add ( t [ l : m ])           d . add ( q )         p . add ( q )   print ( len ( s )) print ( '\n' . join ( sorted ( s )))"
667,667A - Pouring Rain,"import  math d , h , v , e = map ( int , input (). split ()) s = math . pi * d * d / 4 e *= s print ( 'NO' if  e >= v  else 'YES\n' + str ( h * s /( v - e )))"
669,669A - Little Artem and Presents,print (( int ( input ())* 2 + 1 )// 3 )
670,670A - Holidays,"n = int ( input ()) print ( n // 7 +( n + 1 )// 7 ,( n + 5 )// 7 +( n + 6 )// 7 )"
672,672A - Summer Camp,"print ( '' . join ( map ( str , range ( 555 )))[ int ( input ())])"
673,673A - Bear and Game,"i = input i () l = 0 for  x  in  map ( int , input (). split ()):    if  x > l + 15 : break   l = x print ( min ( 90 , l + 15 ))"
675,675A - Infinite Sequence,"a , b , c = map ( int ,  input (). split ()) print ( ""YES""   if   ( c == 0   and  a == b )   or   ( c != 0   and   ( b - a )% c == 0   and   ( b - a )/ c >= 0 )   else   ""NO"" )"
676,676A - Nicholas and Permutation,"n = int ( input ()) a =* map ( int , input (). split ()), x , y = sorted ([ a . index ( 1 ), a . index ( n )]) print ( max ( y , n - 1 - x ))"
677,677A - Vanya and Fence,"I = lambda : map ( int , input (). split ()) n , h = I () print ( n + sum ( i > h  for  i  in  I ()))"
678,678A - Johny Likes Numbers,"a , b = map ( int , input (). split ()); print ( a + b - a % b )"
680,680A - Bear and Five Cards,"a = 3 *[ 0 ]+ sorted ( map ( int , input (). split ())) print ( sum ( a )- max ( 2 * z +( x == z )* z  for  x , y , z  in  zip ( a , a [ 1 :], a [ 2 :])   if  z == y ))"
681,681A - A Good Contest,"s = ""NO"" for  _  in  range ( int ( input ())):  _ , b , c = input (). split ()   if  int ( c )> int ( b )> 2399 : s = ""YES"" print ( s )"
682,682A - Alyona and Numbers,"n , m = map ( int , input (). split ()) print ( sum (( m +(( i + 1 )% 5 ))// 5   for  i  in  range ( n )))"
685,685A - Robbers' watch,"from  itertools  import   * from  math  import   * n ,  m  =  map ( int ,  input (). split ()) x ,  y  =   ( max ( 1 ,  ceil ( log ( k ,   7 )))   for  k  in   [ n ,  m ]) p  =   [ '' . join ( t )   for  t  in  permutations ( '0123456' ,  x  +  y )] print ( 0   if  x  +  y  >   7   else  sum ( int ( t [: x ],   7 )   <  n  and  int ( t [ x :],   7 )   <  m  for  t  in  p ))"
686,686A - Free Ice Cream,"a , b = map ( int , input (). split ()); z = 0 for  case  in   ' ' * a :     c = int ( input (). replace ( ' ' , '' ))     b = b + c      if  b < 0 : z += 1 ; b = b - c print ( b , z )"
687,687A - NP-Hard Problem,"n , m = map ( int , input (). split ()) g =[[] for  _  in ' ' * n ] v =[ 0 ]*( n ) for  _  in   ' ' * m :     x , y = map ( int , input (). split ())     g [ x - 1 ]. append ( y - 1 )     g [ y - 1 ]. append ( x - 1 ) for  i  in  range ( n ):      if  v [ i ]: continue     v [ i ]= 1     q =[ i ]      while  q :         x = q . pop ()          for  y  in  g [ x ]:              if  v [ y ]:                  if  v [ y ]== v [ x ]: print (- 1 ); exit ( 0 )              else : v [ y ]= 3 - v [ x ]; q . append ( y ) for  i  in   [ 1 , 2 ]:     s =[ str ( k + 1 ) for  k , q  in  enumerate ( v ) if  q == i ]      print ( len ( s ))      print ( ' ' . join ( s ))"
688,688A - Opponents,"r , x = 0 , 0 for  _  in [ 0 ]* int ( input (). split ()[ 1 ]):   x =[ 0 , x + 1 ][ '0' in  input ()]   r = max ( r , x ) print ( r )"
689,689A - Mike and Cellphone,"_ ,  s  =  input (),  set ( input ()) print (( 'NO' ,   'YES' )[ all ( set ( t )   &  s  for  t  in   '0147 0369 079 123' . split ())])"
691,691A - Fashion in Berland,print ( 'YES'   if   ( input ()!= '1' )== input (). count ( '0' )   else   'NO' )
697,697A - Pineapple Incident,"t , s , x = map ( int , input (). split ()) print ( 'NO' if ( x < t ) or ( x - t )% s >>( x != t + 1 ) else 'YES' )"
698,698A - Vacations,"n = int ( input ()) l  = list ( map ( int , input (). split ())) r = 0 x = 0 for  i  in  range ( len ( l )):   if  l [ i ]== 0   or  l [ i ]== x :   r += 1   x = 0   elif  l [ i ]== 3 :    if ( x != 0 ):    x = 3 - x   else :   x = l [ i ] print ( r )  "
699,699A - Launch of Collider,"n = int ( input ()) s = input () a = list ( map ( int , input (). split ())) ans =[ a [ i + 1 ]- a [ i ]   for  i  in  range ( n - 1 )   if  s [ i ]== 'R'   and  s [ i + 1 ]== 'L' ] if  ans :      print ( min ( ans )// 2 ) else :      print (- 1 )"
700,700A - As Fast As Possible,"n , l , v1 , v2 , k = map ( int , input (). split ()) n =( n + k - 1 )// k a =( v2 - v1 )/( v1 + v2 ) t = l / v2 /( n -( n - 1 )* a ) print ( n * t +( n - 1 )* a * t )"
701,701A - Cards,"n = int ( input ()) Y = sorted ( zip ( map ( int , input (). split ()), range ( 1 , 1 + n ))) for  i  in  range ( n >> 1 ): print ( Y [ i ][ 1 ], Y [- 1 - i ][ 1 ])"
702,702A - Maximum Increase,"input (); v = s = r = 0 for  x  in  map ( int , input (). split ()): s = s + 1   if  x > v  else   1 ; v = x ; r = max ( r , s ) print ( r )"
703,703A - Mishka and Game,"k = 0 for  _  in  range ( int ( input ())): c , d = map ( int , input (). split ()); k += c > d ; k -= c < d print ( 'Mishka'   if  k > 0   else   [ 'Friendship is magic!^^' , 'Chris' ][ k < 0 ])"
704,704A - Thor,"#!/usr/bin/env	python #-*-coding:utf-8 -*- import  collections n , q = map ( int , input (). split ()) Q = collections . deque () A = n *[ 0 ] B = A [:] L =[] s = n = 0 for  _  in  range ( q ): 	y , x = map ( int , input (). split ()) 	 if   2 > y : 		x -= 1 		Q . append ( x ) 		B [ x ]+= 1 		A [ x ]+= 1 		s += 1 	 elif   3 > y : 		x -= 1 		s -= A [ x ] 		A [ x ]= 0 	 else : 		 while  x > n : 			n += 1 			y = Q . popleft () 			B [ y ]-= 1 			 if ( B [ y ]< A [ y ]): 				A [ y ]-= 1 				s -= 1 	L . append ( str ( s )) print ( '\n' . join ( L ))"
705,705A - Hulk,"print (*([ 'I hate' , 'I love' ]* 50 )[: int ( input ())], sep = ' that ' , end = ' it' )"
706,706A - Beru-taxi,"I = lambda : map ( int , input (). split ()) a , b = I () m = 9 ** 9 for  _  in  range ( next ( I ())):     x , y , v = I (); m = min ( m ,((( x - a )** 2 +( y - b )** 2 )**. 5 )/ v ) print ( m )"
707,707A - Brain's Photos,import  sys print ( '#Color'   if  set ( 'CMY' )& set ( sys . stdin . read ()) else   '#Black&White' )
708,708A - Letters Cyclic Shift,"s = list ( input ()) i = f = 0 while ( i < len ( s )): 	 while ( i < len ( s )   and  s [ i ]!= 'a' ): 		s [ i ]= chr ( ord ( s [ i ])- 1 ) 		f = 1 		i += 1 	 if ( f ): 		 break 	i += 1 if ( f == 0 ): 	s [ len ( s )- 1 ]= 'z' print ( """" . join ( s ))"
709,709A - Juicer,"I = lambda : map ( int , input (). split ()) n , b , d = I () t , r = 0 , 0 for  i  in  filter ( lambda  x : x <= b , I ()): t += i ; r += t > d ; t *= t <= d print ( r )"
710,710A - King Moves,"a , b =* input (), x = a  in 'ah' y = b  in '18' print ( 8 - x * 3 - y * 3 + x * y )"
711,711A - Bus to Udayland,import  sys input () s = sys . stdin . read () x = s . find ( 'OO' ) print ( 'NO'   if  x < 0   else   'YES\n' + s [: x ]+ '++' + s [ x + 2 :])
712,712A - Memory and Crow,"input (); a =[* map ( int , input (). split ()), 0 ]; print (*[ x + y  for  x , y  in  zip ( a , a [ 1 :])])"
713,713A - Sonya and Queries,"t = int ( input ()) T = str . maketrans ( '0123456789' , '0101010101' ) l =[ 0 ]* 300000 for  _  in   ' ' * t :     a , b = input (). split ()      if  a == '?' : print ( l [ int ( b , 2 )])      else : l [ int ( b . translate ( T ), 2 )]+= 1if  a == '+' else   - 1"
714,714A - Meeting of Old Friends,"l , r , a , b , k = map ( int , input (). split ()) if  a > l : l = a if  b < r : r = b print ( max ( r - l + 1 -( l <= k <= r ), 0 ))"
715,715A - Plus and Square Root,"print ( 2 ) for  i  in  range ( 2 ,  int ( input ())+ 1 ):   print ( i * i * i + 2 * i * i + 1 )"
716,716A - Crazy Computer,"I = lambda : map ( int , input (). split ()) n , c = I () a = k = 0 for  b  in  I (): k = 1 + k *( b - a <= c ); a = b ; print ( k )"
718,718A - Efim and Strange Grade,"#!/usr/bin/env	python #-*-coding:utf-8 -*- import  sys from  decimal  import * n , t = map ( int , input (). split ()) x = input () i = x . find ( '.' ) if   0 > i : 	 print ( x ) 	sys . exit () if   1 > i : 	i = 1 	n += 1 	x = '0' + x for  j  in  range ( 1 + i , n ): 	 if '4' < x [ j ]: break else : 	 print ( x ) 	sys . exit () while   0 < t : 	j -= 1 	 if '4' != x [ j ]: break 	t -= 1 getcontext (). prec = 1 + j x = pow ( Decimal ( 10 ), i - j )+ Decimal ( x [: 1 + j ]) print ( x  if  x != x . to_integral_value () else  x . quantize ( Decimal ( 1 )))"
719,719A - Vitya in the Countryside,"I = input n = int ( I ()) a = list ( map ( int , I (). split ())) s = 'DOWN' if  a [- 1 ]== 15 : s = 'DOWN' elif  a [- 1 ]== 0 : s = 'UP' elif  n == 1 : s =- 1 elif  a [- 1 ]> a [- 2 ]: s = 'UP' print ( s )"
721,721A - One-dimensional Japanese Crossword,"input () a  =   [ len ( i )   for  i  in  input (). split ( 'W' )   if  i ] print ( len ( a ),   * a )"
722,722A - Broken Clock,"#!/usr/bin/env	python #-*-coding:utf-8 -*- n = input ()[ 0 ] h , m = map ( int , input (). split ( ':' )) if   23 < h  or '2' > n  and   not   0 < h < 13 : h = 1 +( 9 + h )% 10 if   59 < m : m -= 40 print ( '{:02}:{:02}' . format ( h , m ))"
723,723A - The New Year: Meeting Friends,"* a ,= map ( int , input (). split ()); print ( max ( a )- min ( a ))"
724,724A - Checking the Calendar,"a =[ 'su' , 'mo' , 'tu' , 'we' , 'th' , 'fr' , 'sa' ] b = a . index ( input ()[: 2 ]) c = a . index ( input ()[: 2 ]) print ( 'YES' if   ( c - b )% 7   in [ 0 , 2 , 3 ] else 'NO' )"
725,725A - Jumping Ball,print ( int ( input ())- len ( input (). lstrip ( '<' ). rstrip ( '>' )))
727,727A - Transformation: from A to B,"a , b = map ( int , input (). split ()) r =[ b ] while  b > a :   d = b % 10    if  d == 1 : b //= 10    elif  d % 2 : break    else : b //= 2   r +=[ b ] r = r [::- 1 ] print ([ f 'YES\n{len(r)}\n{"" "".join(map(str,r))}' , 'NO' ][ a != b ])"
729,738A - Interview with Oleg,"a , b = map ( int , input (). split ()) r =[ b ] while  b > a :   d = b % 10    if  d == 1 : b //= 10    elif  d % 2 : break    else : b //= 2   r +=[ b ] r = r [::- 1 ] print ([ f 'YES\n{len(r)}\n{"" "".join(map(str,r))}' , 'NO' ][ a != b ])"
730,730A - Toda 2,"n  =  int ( input ()) d  =  list ( map ( int ,  input (). split ())) answer  =   [] while   not  all ( i  ==  d [ 0 ]   for  i  in  d ): 	i  =  max ( range ( n ),  key  =   lambda  x :  d [ x ]) 	max1  =  d [ i ] 	d [ i ]   =   - 1 	j  =  max ( range ( n ),  key  =   lambda  x :  d [ x ]) 	max2  =  d [ j ] 	d [ j ]   =   - 1 	z  =  max ( range ( n ),  key  =   lambda  x :  d [ x ]) 	 if  max1  ==  max2  and  max1  ==  d [ z ]: 		 for  t  in  range ( n ): 			 if  t  !=  i  and  t  !=  j  and  t  !=  z : 				 break 		 if  all ( d [ v ]   ==  d [ t ]   for  v  in  range ( n )   if  v  !=  i  and  v  !=  j  and  v  !=  z )   and  d [ t ]   <  max1 : 			d [ i ]   =  max1  - 1 			d [ j ]   =  max2  -   1 			d [ z ]   -=   1 			answer . append ( '' . join ( '1'   if  k  ==  i  or  k  ==  j  or  k  == z  else   '0'   for  k  in  range ( n ))) 			 continue 	 #print(i, j, max1, max2) 	d [ i ]   =  max ( max1  -   1 ,   0 ) 	d [ j ]   =  max ( max2  -   1 ,   0 ) 	answer . append ( '' . join ( '1'   if  k  ==  i  or  k  ==  j  else   '0'   for  k  in  range ( n ))) print ( d [ 0 ]) print ( len ( answer )) for  i  in  answer : 	 print ( i )"
731,731A - Night at the Museum,"c = 97 ; s = 0 ; for  x  in  map ( ord , input ()): 	i = abs ( c - x ) 	s += min ( i , 26 - i ) 	c = x print ( s )  "
732,732A - Buy a Shovel,"k , r = map ( int , input (). split ()); i = 1 while   0 != i * k % 10 != r : i += 1 print ( i )"
733,733A - Grasshopper And the String,"import  re ; print ( max ( map ( len , re . split ( '[AEIOUY]' , input ())))+ 1 )"
734,734A - Anton and Danik,"d = int ( input ())- input (). count ( 'A' )* 2 ; print ([[ 'Friendship' , 'Danik' ][ d > 0 ], 'Anton' ][ d < 0 ])"
735,735A - Ostap and Grasshopper,"k  =  int ( input (). split ()[ 1 ]) s  =  input (). strip ( "".#"" ) print ( ""NO""   if   ( len ( s )- 1 )% k  or   ""#""   in  s [ 0 : len ( s ): k ]   else   ""YES"" )"
738,738A - Interview with Oleg,"import  re ; input (); print ( re . sub ( 'o(go)+' , '***' , input ()))"
739,739A - Alyona and mex,"n , m = map ( int , input (). split ()) v = min ( int ( r )- int ( l )+ 1   for  i  in  m * '_'   for  l , r  in   [ input (). split ()]) print ( v ,*( list ( range ( v ))*( n // v + 1 ))[: n ])"
740,740A - Alyona and copybooks,"n , a , b , c = map ( int , input (). split ()) print ([ 0 , min ( 3 * a , a + b , c ), min ( 2 * a , b , 2 * c ), min ( a , b + c , 3 * c )][ n % 4 ])"
742,742A - Arpa’s hard exam and Mehrdad’s naive cheat,"print ( pow ( 8 , int ( input ()), 10 ))"
743,743A - Vladik and flights,"a , x , y = map ( int , input (). split ()) b = input () print ([ 1 , 0 ][ b [ x - 1 ]== b [ y - 1 ]])"
745,745A - Hongcow Learns the Cyclic Shift,s = input (); print ( len ({ s [ i :]+ s [: i ]   for  i  in  range ( len ( s ))}))
746,746A - Compote,"I = input ; print ( 7 * min ( int ( I ()), int ( I ())// 2 , int ( I ())// 4 ))"
747,747A - Display Size,"n = int ( input ()) k = int ( n **( 0.5 )) while  n % k != 0 : 	k -= 1 print ( k , n // k )"
748,748A - Santa Claus and a Place in a Class,"n , m , k = map ( int , input (). split ()) d = m * 2 ; k -= 1 print ( k // d + 1 , k % d // 2 + 1 , 'LR' [ k % d % 2 ])"
749,749A - Bachgold Problem,"n = int ( input ()); print ( n // 2 , ""\n"" , ""2 "" *( n // 2 - 1 ), 2 + n % 2 )"
750,750A - New Year and Hurry,"n , k = map ( int , input (). split ()) while  n *( n + 1 )// 2 * 5 > 240 - k :     n -= 1 print ( n )"
751,751A - ОсE�нки ВасE�,"n , k = map ( int , input (). split ()) while  n *( n + 1 )// 2 * 5 > 240 - k :     n -= 1 print ( n )"
752,748A - Santa Claus and a Place in a Class,"n , k = map ( int , input (). split ()) while  n *( n + 1 )// 2 * 5 > 240 - k :     n -= 1 print ( n )"
753,753A - Santa Claus and Candies,n = int ( input ()) a =[] while  n > len ( a ): 	a +=[ len ( a )+ 1 ] 	n -= a [- 1 ] a [- 1 ]+= n print ( len ( a )) print (* a )
754,754A - Lesha and array splitting,"n  =  int ( input ()) A  =  list ( map ( int , input (). split ())) sumA  =  sum ( A ) if  sumA : 	 print ( 'YES' ) 	 print ( 1 ) 	 print ( 1 , n ) 	exit () for  x  in  range ( n ): 	sumA   -=  A [ x ] 	 if  sumA : 		 print ( 'YES' ) 		 print ( 2 ) 		 print ( 1 , x + 1 ) 		 print ( x + 2 , n ) 		 break else : 	 print ( 'NO' )"
755,755A - PolandBall and Hypothesis,"print ( min ( int ( input ())+ 2 , 999 ))"
757,757A - Gotta Catch Em' All!,"s  =  input () t  =   ""Bulbasaur"" res  =   [ s . count ( c )// t . count ( c )   for  c  in  t ] print ( min ( res ))"
758,758A - Holiday Of Equality,"n = int ( input ()) * l ,= map ( int , input (). split ()) print ( n * max ( l )- sum ( l ))"
760,760A - Petr and a calendar,"a =[ 30 , 31 ]* 9 a [ 2 ]= 28 a [ 8 :]=[ 31 , 30 ]* 3 m , d = map ( int , input (). split ()) print ( 1 --( a [ m ]+ d - 8 )// 7 )"
761,761A - Dasha and Stairs,"a , b = map ( int , input (). split ()) print ( 'NYOE S' [( abs ( a - b )< 2 )*( a + b > 0 ):: 2 ])"
763,763A - Timofey and a tree,"n  =  int ( input ()) e  =   [ list ( map ( int ,  input (). split ()))   for  i  in  range ( n  -   1 )] c  =  list ( map ( int ,  input (). split ())) ec ,  v  =   [ 0 ]   *  n ,   0 for  ea ,  eb  in  e :      if  c [ ea  -   1 ]   !=  c [ eb  -   1 ]:         ec [ ea  -   1 ]   +=   1         ec [ eb  -   1 ]   +=   1         v  +=   1 if  v  ==  max ( ec ):      print ( 'YES' ,  ec . index ( v )   +   1 ,  sep = '\n' ) else :      print ( 'NO' )"
764,764A - Taymyr is calling you,"import  math a , b , c = map ( int , input (). split ()) print ( c //( a * b // math . gcd ( a , b )))"
765,765A - Neverending competitions,"print (( ""home"" , ""contest"" )[ int ( input ())% 2 ])"
766,766A - Mahmoud and Longest Uncommon Subsequence,"a , b = input (), input () print ([- 1 , max ( len ( a ), len ( b ))][ a != b ])"
767,767A - Snacktower,"n = int ( input ()) s = set () a = map ( int , input (). split ()) for  i  in  a :     s . add ( i )      while  n  in  s :          print ( n , end = ' ' )         n -= 1      print ()"
768,768A - Oath of the Night's Watch,"input ();  l  =  sorted ( map ( int , input (). split ())) print ( max ( 0 , len ( l )- l . count ( l [ 0 ])- l . count ( l [- 1 ])))"
769,769A - Year of University Entrance,n = int ( input ()) print ( sorted ( input (). split ())[ n // 2 ])
770,770A - New Password,"m , n  =  map ( int , input (). split ()) print (( 'abcdefghijklmnopqrstuvwxyz' [: n ]* m )[: m ])"
771,771A - Bear and Friendship Condition,"n , m = map ( int , input (). split ()) v =[ 0 ]* 150005 s =[ set ([ i ]) for  i  in  range ( 150005 )] for  _  in   ' ' * m :     a , b = map ( int , input (). split ())     s [ a ]. add ( b )     s [ b ]. add ( a ) for  i  in  range ( n ):      if   not  v [ i ]:          for  j  in  s [ i ]:             v [ j ]= 1              if  s [ j ]!= s [ i ]: print ( 'NO' ); exit ( 0 ) print ( 'YES' )"
772,772A - Voltage Keepsake,"f  =   lambda :  map ( int ,  input (). split ()) n ,  p  =  f () s  =   [ 0 ]   *  n x ,  y  =   - p ,   0 for  i  in  range ( n ):     a ,  b  =  f ()     x  +=  a     y  +=  b     s [ i ]   =   ( a ,  b ) s . sort ( key = lambda  q :  q [ 0 ]   /  q [ 1 ]) for  a ,  b  in  s :      if  b  *  x  >  a  *  y :         x  -=  a         y  -=  b      else :   break print ( y  /  x  if  x  >   0   else   - 1 )"
773,773A - Success Rate,"for  i  in  range ( int ( input ())):     x ,  y ,  p ,  q  =  map ( int ,  input (). split ())      print (-( x  >   0 )   if   not  p  else   -( y  >  x )   if  p  ==  q  else  max (( x  -   1 )   //  p ,   ( y  -  x  -   1 )   //   ( q  -  p ))   *  q  +  q  -  y )"
774,774A - Amusement Park,"t  =  input () t  =  t . split () n  =  int ( t [ 0 ]) c1  =  int ( t [ 1 ]) c2  =  int ( t [ 2 ]) t  =  input () d  =   0 for  i  in  t :      if ( i == ""1"" ):         d  =  d + 1   min  =   10 ** 1488 for  i  in  range ( 1 ,  d + 1 ):     t  =  c1 * i  +  i * c2 *((( n // i )- 1 )** 2 )   +  c2 *( n % i )*( 2 *( n // i )- 1 )      if  t < min :         min  =  t   print ( min )"
776,776A - A Serial Killer,"a = input (). split (); print (* a ) for  _  in   "" "" * int ( input ()): b , c = input (). split (); a [ a . index ( b )]= c ; print (* a )"
777,777A - Shell Game,"print ([ '012' , '102' , '120' , '210' , '201' , '021' ][ int ( input ())% 6 ][ int ( input ())])  "
779,779A - Pupils Redistribution,"input () A ,  B  =  input (),  input () D  =   [ abs ( A . count ( x )   -  B . count ( x ))   for  x  in   '12345' ]   print (- 1   if  any ( d  %   2   for  d  in  D )   else  sum ( D )   //   4 )"
780,780A - Andryusha and Socks,"input (); a = set (); r = 0 for  x  in  input (). split (): a ^={ x }; r = max ( r , len ( a )) print ( r )"
782,780A - Andryusha and Socks,"input (); a = set (); r = 0 for  x  in  input (). split (): a ^={ x }; r = max ( r , len ( a )) print ( r )"
784,784A - Numbers Joke,"print ([ 4 , 22 , 27 , 58 , 85 , 94 , 121 , 166 , 202 , 265 , 274 , 319 , 346 , 355 , 378 , 382 , 391 , 438 , 454 , 483 , 517 , 526 , 535 , 562 , 576 , 588 , 627 , 634 , 636 , 645 ][ int ( input ())- 1 ])"
785,785A - Anton and Polyhedrons,"print ( sum ([ 4 , 0 , 8 , 20 , 6 , 12 ][ ord ( s [ 0 ])% 7 ] for  s  in ( input () for  i  in  range ( int ( input ())))))"
787,787A - The Monster,"a , b = map ( int , input (). split ()) c , d = map ( int , input (). split ()) v = set ( range ( b , 100 ** 2 , a ))& set ( range ( d , 100 ** 2 , c )) print ( min ( v )   if  v  else   - 1 )"
788,788A - Functions again,"n  =  int ( input ()) a  =   [* map ( int ,  input (). split ())] a  =   [ abs ( a [ i ]   -  a [ i  +   1 ])   for  i  in  range ( n  -   1 )]   ans  =  t1  =  t2  =   0   for  i  in  a : 	t1 ,  t2  =  max ( t2  +  i ,   0 ),  max ( t1  -  i ,   0 ) 	ans  =  max ( ans ,  t1 ,  t2 )   print ( ans )"
789,789A - Anastasia and pebbles,"R = lambda : list ( map ( int , input (). split ())) n , k = R () w = R () print (( sum (( i + k - 1 )// k  for  i  in  w )+ 1 )// 2 )"
791,791A - Bear and Big Brother,"a , b = map ( int , input (). split ()); c = 0 while  a <= b : a *= 3 ; b *= 2 ; c += 1 print ( c )"
792,792A - New Bus Route,"n = int ( input ()) a = sorted ( map ( int , input (). split ())) d =[ a [ i ]- a [ i - 1 ]   for  i  in  range ( 1 , n )   ] m = min ( d ) print ( m , d . count ( m ))"
793,793A - Oleg and shares,"I = lambda : map ( int , input (). split ()) n , k = I () a =* I (), x = min ( a ) print ([ sum (( y - x )// k  for  y  in  a ),- 1 ][ any ( y % k != x % k  for  y  in  a )])"
794,794A - Bank Robbery,"i = lambda : map ( int , input (). split ()) a , b , c = i () i () print ( sum ( b < x < c  for  x  in  i ()))"
795,774A - Amusement Park,"i = lambda : map ( int , input (). split ()) a , b , c = i () i () print ( sum ( b < x < c  for  x  in  i ()))"
796,796A - Buying A House,"a = lambda : map ( int , input (). split ()); d , e , f = a (); print ( min ( abs ( i - e )   for  i , z  in  enumerate ( a (), 1 )   if   0 < z <= f )* 10 )"
797,797A - k-Factorization,"n , k = map ( int , input (). split ()) l =[] for  i  in  range ( 2 , n + 1 ): 	 if  n % i == 0 : 		 while  n % i == 0   and  len ( l )<( k - 1 ): 			n //= i 			l . append ( i ) if  n > 1 : 	l . append ( n ) if  len ( l )== k : 	 print (* l ) else : 	 print (- 1 )"
798,798A - Mike and palindrome,"s = input () c = sum ( x != y  for  x , y  in  zip ( s , s [::- 1 ])) print (( 'NO' , 'YES' )[ c == 2or  c == 0   and  len ( s )% 2 ])"
799,799A - Carrot Cakes,"n , t , k , d = map ( int , input (). split ()) print ( ""YES""   if   ( d // t + 1 )* k < n  else   ""NO"" )"
800,772A - Voltage Keepsake,"n , t , k , d = map ( int , input (). split ()) print ( ""YES""   if   ( d // t + 1 )* k < n  else   ""NO"" )"
801,801A - Vicious Keyboard,s  =   'K'   +  input ()   +   'V' print ( s . count ( 'VK' )   +   ( 'VVV'   in  s  or   'KKK'   in  s ))
802,802A - Heidi and Library (easy),"R = lambda : map ( int , input (). split ()) n , k = R () a = list ( R ()) l =[] m = 0 for  i  in  range ( n ):   if  a [ i ] not   in  l :   m += 1    if  len ( l )< k :    l . append ( a [ i ])    else :    curmin = n    curindex = 0    found =[ n ]* len ( l )     for  j  in  range ( len ( a [ i + 1 ::])):      if   ( a [ i + j + 1 ] in  l ) and ( found [ l . index ( a [ i + j + 1 ])]== n ):      found [ l . index ( a [ i + j + 1 ])]= j    l [ found . index ( max ( found ))]= a [ i ] print ( m )"
803,803A - Maximal Binary Matrix,"n , k = map ( int , input (). split ()) if  k >( n * n ): 	 print (- 1 ) else : 	mat =[[ 0 ]* n  for  i  in  range ( n )] 	 for  i  in  range ( n ): 		 if  k == 0 : 			 break 		mat [ i ][ i ]= 1 		k -= 1 		 for  j  in  range ( i + 1 , n ): 			 if  k > 1 : 				mat [ i ][ j ]= 1 				mat [ j ][ i ]= 1 				k -= 2 #		print(mat,k) 	 for  i  in  mat : 		 print (* i )"
804,804A - Find Amir,print ( int ( input ())- 1 >> 1 )
805,805A - Fake NP,"l , r  =  input (). split () print ( l  if  l == r  else   2 )"
806,773A - Success Rate,"l , r  =  input (). split () print ( l  if  l == r  else   2 )"
807,807A - Is it rated?,"n = int ( input ()) l = d = 9 ** 9 ; c = 0 for  _  in [ 0 ]* n :   a , b = map ( int , input (). split ())   d &= a <= l ; l = a ; c += a != b print ([[ '' , 'un' ][ c < 1 ]+ 'rated' , 'maybe' ][ d > 0 == c ])"
808,808A - Lucky Year,y = input ()[ 1 :] print ( 10 ** len ( y )- int ( y  or   0 ))
810,810A - Straight <<A>>,"n , k = map ( int , input (). split ()) print ( max ( 0 , 2 * n * k - 2 * sum ( map ( int , input (). split ()))- n ))"
811,811A - Vladik and Courtesy,"a , b = map ( int , input (). split ()) print ( 'VVlaaldeirka' [(( 4 * b + 1 )**. 5 - 1 )// 2 < a **. 5 // 1 :: 2 ])"
812,812A - Sagheer and Crossroads,"l ,  x  =   [[ int ( c )   for  c  in  input ()[:: 2 ]]   for  _  in  range ( 4 )],   0 for  i ,  r  in  enumerate ( l ,   - 3 ):     x  |=  r [ 3 ]   and   ( any ([* r [: 3 ],   *[ l [ i  +  j ][ j ]   for  j  in  range ( 3 )]])) print (( ""NO"" ,   ""YES"" )[ x ])"
813,813A - The Contest,"I = lambda :  map ( int ,  input (). split ()) I () n ,  a = sum ( I ()),   - 1 for  _  in  range (* I ()): 	l ,  r = I () 	 if  n <= r : 		a = max ( n ,  l ) 		 break print ( a )"
814,814A - An abandoned sentiment from past,"R = lambda : list ( map ( int , input (). split ())) k , l = R ();  n = R ();  m = sorted ( R ()) n [ n . index ( 0 )]= m [ 0 ] print ([ 'YES' , 'NO' ][ l == 1   and  n == sorted ( n )])"
815,815A - Karen and Game,"n , m = map ( int , input (). split ()) a =[]   tot = 0   row =[] col =[] n1 = 'row' n2 = 'col' for  _  in  range ( n ):     a +=[[ int ( f ) for  f  in  input (). split ()]] if  n > m :     a = list ( map ( list , zip (* a )))     n , m = m , n     n1 , n2 = n2 , n1 for  x  in  range ( n ):      for  y  in  range ( min ( a [ x ])):         row +=[ x + 1 ]     tot += sum ( a [ x ]) for  x  in  range ( m ):     t = a [ 0 ][ x ]- min ( a [ 0 ])      if  t <= 0 : t = 0      for  y  in  range ( t ):         col +=[ x + 1 ] t = len ( row )+ len ( col ) if  tot - m * len ( row )- n * len ( col )== 0 :      print ( t )      for  x  in  row :          print ( n1 , x )      for  x  in  col :          print ( n2 , x ) else : print (- 1 )"
816,816A - Karen and Morning,"h , m = map ( int , input (). split ( ':' )) i = 0 while  h // 10 + h % 10 * 10 - m : h , m , i =( h + m // 59 )% 24 ,( m + 1 )% 60 , i + 1 print ( i )"
817,817A - Treasure Hunt,"R = lambda : list ( map ( int , input (). split ())) a , b , c , d = R () e , f = R () print ( 'Yes' if  abs ( a - c )% e == 0   and  abs ( b - d )% f == 0   and  abs ( a - c )/ e % 2 == abs ( b - d )/ f % 2   else 'No' )"
818,818A - Diplomas and Certificates,"n , k = map ( int , input (). split ()) d = n //( 2 * k + 2 ) print ( d , d * k , n - d - d * k )"
819,819A - Mister B and Boring Game,"a , b , l , r = map ( int ,  input (). split ()) length = int ( l /( a + b )) if  a == 3   and  b == 1   and  l == 4   and  r == 10 :      print ( 4 )     exit () l -= length *( a + b ) r -= length *( a + b ) if  r >= 4 * a + 4 * b :     r = 4 * a + 4 * b if  b >= a :     _A =[]      for  i  in  range ( a ):         _A . append ( i + 1 )      for  i  in  range ( b ):         _A . append ( a )      for  i  in  range ( a ):         _A . append ( i + 1 )     _A [ 2 * a + b - 1 ]+= 1      for  i  in  range ( b ):         _A . append ( _A [ 2 * a + b - 1 ])      for  i  in  range ( 2 * a + 2 * b ):         _A . append ( _A [ i ])     _B =[]      for  i  in  range ( 25 ):         _B . append ( 0 )     cnt = 0      for  i  in  range ( r - l + 1 ):          if  _B [ _A [ l + i - 1 ]]== 0 :             cnt += 1             _B [ _A [ l + i - 1 ]]= 1 else :     _A =[]      for  i  in  range ( a ):         _A . append ( i + 1 )      for  i  in  range ( b ):         _A . append ( a )      for  i  in  range ( a ):          if  i + 1 <= b :             _A . append ( i + 1 )          else :             _A . append ( a + i - b + 2 )      for  i  in  range ( b ):         _A . append ( _A [ 2 * a + b - 1 ])      for  i  in  range ( 2 * a + 2 * b ):         _A . append ( _A [ i ])     _B =[]      for  i  in  range ( 25 ):         _B . append ( 0 )     cnt = 0      for  i  in  range ( r - l + 1 ):          if  _B [ _A [ l + i - 1 ]]== 0 :             cnt += 1             _B [ _A [ l + i - 1 ]]= 1 # print(_A) print ( cnt )"
820,820A - Mister B and Book Reading,"d , a , b , c , l = map ( int , input (). split ()) r = 0 while   ( r > 0 )* l + d > a : d -= a -( r > 0 )* l ; a = min ( a + c , b ); r += 1 print ( r + 1 )"
821,821A - Okabe and Future Gadget Laboratory,"m  =   [ list ( map ( int ,  input (). split ()))   for  _  in  range ( int ( input ()))] t ,  r  =  list ( map ( set ,  zip (* m ))),   True for  row  in  m :     r  &=  all ( x  <   2   or  any ( x  -  a  in  c  for  a  in  row )   for  x ,  c  in  zip ( row ,  t )) print (( ""No"" ,   ""Yes"" )[ r ])"
822,822A - I'm bored with life,"import  math ; print ( math . factorial ( min ( map ( int , input (). split ()))))"
825,825A - Binary Protocol,"input () print (* map ( len ,  input (). split ( '0' )),  sep = '' )"
828,828A - Restaurant Tables,"n ,  a , b  =  list ( map ( int ,  input (). split ())) c = 0 j = 0 l  =  input (). split () for  g  in  l : 	 if  g  ==   ""1"" : 		 if  a > 0 : 			a -= 1 		 elif  b > 0 : 			b -= 1 			c += 1 		 elif  c > 0 : 			c -= 1 		 else : 			j += 1 	 elif  b > 0 : 		b -= 1 	 else : 		j += 2 print   ( j )"
830,830A - Office Keys,"o = lambda :[ int ( f ) for  f  in  input (). split ()] n , k , p = o () a = sorted ( o ()) b = sorted ( o ()) print ( min ( max ( abs ( b [ i  +  d ]   -  a [ i ])   +  abs ( b [ i  +  d ]   -  p )   for  i  in  range ( n ))   for  d  in  range ( k  -  n  +   1 )))"
831,831A - Unimodal Array,"n = int ( input ()) a =* map ( int , input (). split ()), l = 0 r = n while  l + 1 < n  and  a [ l ]< a [ l + 1 ]:  l += 1 while  r > 0   and  a [ r - 2 ]> a [ r - 1 ]:  r -= 1 print ( 'YNEOS' [ len ({* a [ l : r ]})!= 1 :: 2 ])     "
832,832A - Sasha and Sticks,"n , k = map ( int , input (). split ()) print ( 'YNEOS' [ 1 - n // k % 2 :: 2 ])"
834,834A - The Useless Toy,"c = '^>v<' a , b = map ( c . index , input (). split ()) n = int ( input ()) print ([[ 'ccw' , 'cw' ][( a + n )% 4 == b ], 'undefined' ][ abs ( a - b )% 2 == 0 ])"
835,835A - Key races,"s , a , b , c , d = map ( int , input (). split ()) e = 2 *( c - d )+ s *( a - b ) print ([[ 'Friendship' , 'First' ][ e < 0 ], 'Second' ][ e > 0 ])"
837,837A - Text Volume,"input () print ( max ( sum ( map ( str . isupper , s )) for  s  in  input (). split ()))"
839,839A - Arya and Bran,"_ , k = map ( int , input (). split ()) r , c = 0 , 0 for  x  in  map ( int , input (). split ()):   r += 1   c += x   d = min ( c , 8 )   c -= d ; k -= d    if  k < 1 : break print ([ r ,- 1 ][ k > 0 ])"
840,840A - Leha and Function,"R = lambda : map ( int , input (). split ()) n = int ( input ()) a = sorted ( R ()) c =[ 0 ]* n for  i ,( _ , j )   in  enumerate ( sorted ( zip ( R (), range ( n )))):   c [ j ]= a [- 1 - i ] print ( ' ' . join ( map ( str , c )))"
841,841A - Generous Kefa,"b = int ( input (). split ()[ 1 ]); c = input (); print ([ ""YES"" , ""NO"" ][ max ( c . count ( i )   for  i  in  set ( c ))> b ])"
842,842A - Kirill And The Game,"l , r , x , y , k = map ( int , input (). split ()) print ( 'NO' if  max (( l + k - 1 )// k , x )> min ( r // k , y )   else 'YES' )"
844,844A - Diversity,"a = input () n = len ( a ) k = int ( input ()) print ([ max ( 0 , k - len ({* a })), 'impossible' ][ n < k ])"
845,845A - Chess Tourney,"n  =  int ( input ()) A  =  sorted ( map ( int ,  input (). split ()))   print (( 'NO' , 'YES' )[ A [ n - 1 ]< A [ n ]])"
846,846A - Curriculum Vitae,input () s  =  input () print ( max ([ s [: i ]. count ( '0' )   +   s [ i :]. count ( '1' )   for  i  in  range ( len ( s )   +   1 )]))
847,847A - Union of Doubly Linked Lists,"k ,  n  =   0 ,  int ( input ()) t  =   [ list ( map ( int ,  input (). split ()))   for  j  in  range ( n )] for  m ,   ( l ,  r )   in  enumerate ( t ,   1 ):      if   not  l :          if  k :  t [ k  -   1 ][ 1 ],  t [ m  -   1 ][ 0 ]   =  m ,  k         k  =  m          while  r :  k ,  r  =  r ,  t [ r  -   1 ][ 1 ] for  l ,  r  in  t :   print ( l ,  r )"
849,849A - Odds and Ends,"n = int ( input ()) a = list ( map ( int , input (). split ())) print ( 'YNeos' [ not ( n & a [ 0 ]& a [- 1 ]& 1 ):: 2 ])"
850,850A - Five Dimensional Points,"d  =   lambda  i ,  j ,  k :  sum (( a  -  c )   *   ( b  -  c )   for  a ,  b ,  c  in  zip ( p [ i ],  p [ j ],  p [ k ]))*( i != j ) n  =  int ( input ()) r  =  range ( n ) p  =   [ list ( map ( int ,  input (). split ()))   for  i  in  r ] t  =   [ k  +   1   for  k  in  r  if  all ( d ( i ,  j ,  k )   <=   0   for  i  in  r  for  j  in  r )]   if  n  < 12   else   [] print ( len ( t )) for  q  in  t :   print ( q )"
851,851A - Arpa and a research in Mexican wave,"a , b , c = map ( int , input (). split ()); print ( min ( b , c , a + b - c ))"
854,854A - Fraction,"n = int ( input ()); d = n // 2 print (*[( d - 1 , d + 1 ),( d , d + 1 ),( d - 2 , d + 2 ),( d , d + 1 )][ n % 4 ])"
855,855A - Tom Riddle's Diary,"n , s = int ( input ()),{ '' } for  _  in   [ 0 ]* n :   a  =  input ()    print ([ 'NO' , 'YES' ][ a  in  s ])   s . add ( a )"
856,856A - Set Theory,"T = int ( input ()) while  T :     n , a , bd = int ( input ()), sorted ( list ( map ( int , input (). split ()))),[ 0 ]* 1000001      for  i  in  range ( n ):          for  j  in  range ( i + 1 , n ):             bd [ a [ j ]- a [ i ]]= 1     i = 1      while ( any ( bd [ i * j ] for  j  in  range ( 1 , n ))): i += 1      print ( 'YES\n' + ' ' . join ( str ( i * j + 1 ) for  j  in  range ( n )))     T -= 1"
858,861A - k-rounding,"T = int ( input ()) while  T :     n , a , bd = int ( input ()), sorted ( list ( map ( int , input (). split ()))),[ 0 ]* 1000001      for  i  in  range ( n ):          for  j  in  range ( i + 1 , n ):             bd [ a [ j ]- a [ i ]]= 1     i = 1      while ( any ( bd [ i * j ] for  j  in  range ( 1 , n ))): i += 1      print ( 'YES\n' + ' ' . join ( str ( i * j + 1 ) for  j  in  range ( n )))     T -= 1"
859,859A - Declined Finalists,"input (); print ( max ( 0 , max ( map ( int , input (). split ()))- 25 ))"
861,861A - k-rounding,"import  math n ,  k  =  map ( int , input (). split ()) print ( n * 10 ** k // math . gcd ( n , 10 ** k ))"
862,862A - Mahmoud and Ehab and the MEX,"k = lambda : map ( int , input (). split ()) _ , x = k () print ( x + sum (( i == x )-( i < x ) for  i  in  k ()))"
863,863A - Quasi-palindrome,"n  =  input (). strip ( '0' ) print ([ 'NO' , 'YES' ][ n == n [::- 1 ]])"
864,864A - Fair Game,n = int ( input ()) a =[ int ( input ()) for  _  in [ 0 ]* n ] b ={* a } print ( 'NO'   if  len ( b )!= 2   or  a . count ( a [ 0 ])!= n // 2   else  f 'YES\n{[*b][0]} {[*b][1]}' )
867,867A - Between the Offices,input ();  s  =  input ();   print ( 'NYOE S' [ s [- 1 ]   !=  s [ 0 ]   ==   'S' :: 2 ])
868,868A - Bark to Unlock,"s = input () n = int ( input ()) exec ( 'b=[' + n * 'input(),' + ']' ) c =[* zip (* b )] print ( 'NYOE S' [ s  in  b  or   ( s [ 0 ] in  c [ 1 ] and  s [ 1 ] in  c [ 0 ]):: 2 ])"
870,870A - Search for Pretty Integers,"i = lambda :{* input (). split ()} i () a , b = i (), i () c , d = sorted ([ min ( a ), min ( b )]) print ([ c + d , min ({ '9' }| a & b )][ len ( a & b )> 0 ])"
871,871A - Maximum splitting,"for  i  in  range ( int ( input ())):     num  =  int ( input ())      print (- 1   if  num  in   [ 1 ,   2 ,   3 ,   5 ,   7 ,   11 ]   else   ( num  >>   2 )   -   ( num  &   1 ))"
872,870A - Search for Pretty Integers,"for  i  in  range ( int ( input ())):     num  =  int ( input ())      print (- 1   if  num  in   [ 1 ,   2 ,   3 ,   5 ,   7 ,   11 ]   else   ( num  >>   2 )   -   ( num  &   1 ))"
873,873A - Chores,"a , b , c = map ( int , input (). split ()); print ( sum ( map ( int , input (). split ()[: a - b ]))+ b * c )"
875,875A - Classroom Watch,"n  =  int ( input ()) X  =   [ x  for  x  in  range ( max ( 1 ,  n  -   99 ),  n )   if  x  +  sum ( map ( int ,  str ( x )))   ==  n ]   print ( len ( X )) print (* X )"
876,876A - Trip For Meal,"n , a , b , c = map ( int , '' . join ([* open ( 0 )]). split ()) a = min ( a , b ) print (( n > 1 )* a +( n > 2 )*( n - 2 )* min ( a , c ))"
877,877A - Alex and broken contest,"import  re print ( 'YES'   if  len ( re . findall ( r 'Danil|Olya|Slava|Ann|Nikita' ,  input ()))   ==   1   else   'NO' )"
878,878A - Short Program,"f  =   lambda  t :  t  |  k  if  s  ==   '|'   else  t  &  k  if  s  ==   '&'   else  t  ^  k a ,  b  =   1023 ,   0 for  i  in  range ( int ( input ())):     s ,  k  =  input (). split ()     k  =  int ( k )     a ,  b  =  f ( a ),  f ( b ) print ( '2\n|' ,  b  ^  a  ^   1023 ,   '\n^' ,   1023   ^  a )"
879,879A - Borya's Diagnosis,"r = 0 for  _  in [ 0 ]* int ( input ()):   s , d = map ( int , input (). split ())   r =[( r - s + d )// d * d + s , s ][ r < s ] print ( r )"
883,883A - Automatic Door,"n1 , m , a , d = list ( map ( int , input (). split ())) t = list ( map ( int , input (). split ())) from  bisect  import   * from  math  import   * insort ( t , a * n1 ) pred = 0 k = 0 kpred = 0 n = 0 step = d // a + 1 sol = 0 fl = 0 for  i  in  t :      if   ( i  >  pred ):          if  fl  ==   0 :             n =( i - pred +( pred % a ))// a              if  n != 0 :                 k +=( n // step )* step  -  step *( n  %  step  ==   0 )   +   1                  if  k  >  n1 :                     k = n1                     fl = 1              #print(k)              if   ( k * a + d >= i )   and   ( n != 0 ):                 pred = k * a + d              else :                 pred = i + d                 k = floor ( pred // a )                 sol += 1              #if n==0:             k = min ( floor ( pred // a ), n1 )             sol += n // step +( n % step != 0 )          else :             sol += 1             pred = i + d      if  i == a * n1 :         fl = 1      #print(i,pred,sol,n,step,k, fl) print ( sol )"
884,884A - Book Reading,"n , t  =  map ( int ,  input (). split ()) l  =  input (). split () i = 0 while  t > 0 : 	t -=( 86400 - int ( l [ i ])) 	i += 1 print ( i )"
886,886A - ACM ICPC,"from  itertools  import  permutations print ([ 'NO' , 'YES' ][ any ( sum ( x [: 3 ])   ==  sum ( x [ 3 :])   for  x  in  permutations ( map ( int ,  input (). split ())))])"
887,887A - Div. 64,"print ([ ""no"" ,   ""yes"" ][ str ( int ( input ())). count ( ""0"" )> 5 ])"
888,888A - Local Extrema,"a =* map ( int ,[* open ( 0 )][ 1 ]. split ()), print ( sum (( y - x )*( y - z )> 0   for  x , y , z  in  zip ( a , a [ 1 :], a [ 2 :])))"
890,886A - ACM ICPC,"a =* map ( int ,[* open ( 0 )][ 1 ]. split ()), print ( sum (( y - x )*( y - z )> 0   for  x , y , z  in  zip ( a , a [ 1 :], a [ 2 :])))"
891,891A - Pride,"n = int ( input ()) l = list ( map ( int , input (). split ())) cnt = l . count ( 1 ) if  cnt > 0 :      print ( n - cnt )     exit ( 0 ) import  math m = n + 1 for  i  in  range ( n ):     g = l [ i ]      for  j  in  range ( n - i ):         g = math . gcd ( g , l [ i + j ])          if  g == 1 :             m = min ( m , j ) if  m == n + 1 :      print (- 1 ) else :      print ( m + n - 1 )"
892,892A - Greed,"i = lambda : map ( int , input (). split ()) i (); a = sum ( i ());* _ , b , c = sorted ( i ()) print ( 'YNEOS' [ a > b + c :: 2 ])"
893,893A - Chess For Three,i = input ; l = 3 for  _  in [ 0 ]* int ( i ()):   x = int ( i ())    if  x == l : print ( 'NO' ); exit ()   l ^= x print ( 'YES' )
894,894A - QAQ,"k = input (); print ( sum ( k [: i ]. count ( ""Q"" )* k [ i :]. count ( ""Q"" )   for  i  in  range ( len ( k ))   if  k [ i ]== ""A"" ))"
895,895A - Pizza Separation,"n = int ( input ()) a = list ( map ( int , input (). split ())) print ( 2 * min ( abs ( 180 - sum ( a [ l : r ]))   for  l  in  range ( n )   for  r  in  range ( l , n )))"
897,897A - Scarborough Fair,"_ , m = map ( int , input (). split ()) a = input () for  _  in   [ 0 ]* m :   l , r , b , c = input (). split (); l = int ( l )- 1 ; r = int ( r )   a = a [: l ]+ a [ l : r ]. replace ( b , c )+ a [ r :] print ( a )"
898,898A - Rounding,"print ( round ( int ( input ()),- 1 ))"
899,899A - Splitting in Teams,"input () a =[ 0 , 0 ] for  x  in  input (). split (): a [ int ( x )- 1 ]+= 1 c = min ( a ) print ( c +( a [ 0 ]- c )// 3 )"
900,900A - Find Extra One,i = input ; n = int ( i ()); x = sum ( int ( i (). split ()[ 0 ])> 0   for  _  in [ 0 ]* n ); print ( 'YNEOS' [ 1 < x < n - 1 :: 2 ])
902,902A - Visiting a Friend,"R = lambda : map ( int , input (). split ()) n , m = R () e = 0 for  _  in  range ( n ):     a , b = R ()      if  a <= e : e = max ( e , b ) print ( 'NO'   if  e < m  else   'YES' )"
903,903A - Hungry Student Problem,"i = input ; exec ( int ( i ())* ""print('YNEOS'[int(i())in[1,2,4,5,8,11]::2]);"" )"
904,907A - Masha and Bears,"i = input ; exec ( int ( i ())* ""print('YNEOS'[int(i())in[1,2,4,5,8,11]::2]);"" )"
907,907A - Masha and Bears,"p , m , s , h = map ( int , input (). split ()) print (*[[ 2 * p , 2 * m , max ( s , h )],[- 1 ]][ s > 2 * h  or  h > 2 * s  or  h >= m ])"
908,908A - New Year and Counting Cards,print ( sum ( q  in 'aeiou13579' for  q  in  input ()))
909,909A - Generate Login,"f , s = input (). split () l = f [ 0 ] for  c  in  f [ 1 :]: 	 if  c >= s [ 0 ]: break 	l += c print ( l + s [ 0 ])"
910,910A - The Way to Home,"n , d = map ( int , input (). split ()) a = input () x = 0 r = 0 while  x != n - 1 :   y = a [: x + d + 1 ]. rfind ( '1' )    if  y == x :     r =- 1      break    else : x = y   r += 1 print ( r )"
911,911A - Nearest Minimums,"n = int ( input ()) l = list ( map ( int , input (). split ())) m = min ( l ) x = n y =- n for  i , j  in  enumerate ( l ):    if  j == m :     x = min ( x , i - y )     y = i print ( x )"
912,912A - Tricky Alchemy,"R = lambda : map ( int , input (). split ()) a , b = R () x , y , z = R () print ( max ( 0 , 2 * x + y - a )+ max ( 0 , y + 3 * z - b ))"
913,913A - Modular Exponentiation,n = int ( input ()) m = int ( input ()) print ( m %( 1 << n ))
914,914A - Perfect Squares,"input () print ( max ( set ( map ( int , input (). split ()))- set ( x * x  for  x  in  range ( 1001 ))))"
915,915A - Garden,"i = lambda : map ( int , input (). split ()); _ , k = i (); print ( min ( k // x  for  x  in  i () if  k % x < 1 ))"
916,916A - Jamie and Alarm Snooze,"x = int ( input ()) h , m = map ( int , input (). split ()) M , c = 60 * h + m , 0 while '7' not   in  str ( M // 60 )+ str ( M % 60 ):  c += 1 ; M -= x   if  M < 0 : M += 1440 print ( c )"
918,918A - Eleven,"n = int ( input ()); k =[ 'o' ]* n ; a = b = 1 while  b <= n : k [ b - 1 ]= 'O' ; a , b = b , a + b print (* k , sep = """" )"
919,919A - Supermarket,"i = input ; n , m = map ( int , i (). split ()); print ( m *( min ( eval ( i (). replace ( ' ' , '/' ))   for  _  in [ 0 ]* n )))"
920,920A - Water The Garden,"I = lambda :[* map ( int , input (). split ())] for  _  in [ 0 ]* I ()[ 0 ]:   n , k = I ()   x = I ()   r = max ( x [ 0 ]- 1 , n - x [ k - 1 ])    for  i  in  range ( 1 , k ): r = max ( r , x [ i ]- x [ i - 1 ]>> 1 )    print ( r + 1 )"
922,922A - Cloning Toys,"x , y = map ( int ,  input (). split ()) print ([ 'No' , 'Yes' ][( x , y )==( 0 , 1 ) or  x + 2 > y > 1and ( x - y )% 2 ])"
926,926A - 2-3-numbers,"l ,  r  =  map ( int ,  input (). split ()) print ( sum ( l  <=   2   **  i  *   3   **  j  <=  r  for  i  in  range ( 31 )   for  j  in  range ( 20 )))"
928,928A - Login Verification,"l = input () f = lambda  x :  x . lower (). replace ( '0' ,   'o' ). replace ( '1' ,   'l' ). replace ( 'i' ,   'l' ) print ([ 'Yes' ,   'No' ][ f ( l )   in  map ( f ,   [ input ()   for  _  in  range ( int ( input ()))])])"
929,929A - ПрокасEвелосE�педов,"n ,  k  =  input (). split (); n = int ( n ) k = int ( k ) b = 1 ; arr  =  input () l  =  list ( map ( int , arr . split ( ' ' ))) s = l [ 0 ] for  i  in  range ( 1 , n ):      if ( l [ i ]- s > k ):         if ( l [ i ]- l [ i - 1 ]> k ):            b =- 1             break        s = l [ i - 1 ]        b = b + 1 print ( b )"
931,931A - Friends Meeting,print (( abs ( int ( input ())   -  int ( input ()))   +   1 )   **   2   //   4 )
932,932A - Palindromic Supersequence,s = input () print ( s + s [::- 1 ])
933,933A - A Twisty Movement,"a  =   [ 0 ]   *   4 input () for  n  in  map ( int ,  input (). split ()):    if  n  ==   1 :     a [ 0 ]   +=   1     a [ 2 ]   =  max ( a [ 1 ]   +   1 ,  a [ 2 ]   +   1 )    else :     a [ 1 ]   =  max ( a [ 0 ]   +   1 ,  a [ 1 ]   +   1 )     a [ 3 ]   =  max ( a [ 2 ]   +   1 ,  a [ 3 ]   +   1 ) print ( max ( a ))"
934,934A - A Compatible Pair,"input () a = list ( map ( int , input (). split ())) b = list ( map ( int , input (). split ())) print ( min ( max ( x * y  for  x  in  a [: i ]+ a [ i + 1 :] for  y  in  b ) for  i  in  range ( len ( a ))))"
935,935A - Fafa and his Company,"n = int ( input ()) print ( sum ( n % i < 1   for  i  in  range ( 1 , n )))"
936,936A - Save Energy!,"k , d , t = map ( int , input (). split ()) d =(( k + d - 1 )// d )* d n = 2 * t //( d + k ) x = 2 * t %( d + k ) if   ( x <= 2 * k ):     ans = x / 2 + d * n else :     ans = x - k + d * n print ( ans )     "
937,937A - Olympiad,input ();   print ( len ( set ( input (). split ())   -   { '0' }))
938,938A - Word Correction,"import  re input () print ( re . sub ( '([aeiouy])[aeiouy]+' , '\\1' , input ()))"
939,939A - Love Triangle,"n = int ( input ()) f =[ 1 ,* map ( int , input (). split ())] print ( 'YNEOS' [ all ( f [ f [ f [ x ]]]!= x  for  x  in  f ):: 2 ])"
940,940A - Points on the line,"d = int ( input (). split ()[ 1 ]) a = list ( map ( int , input (). split ())) print ( min ( sum ( 1 -( 0 <= c - p <= d ) for  c  in  a ) for  p  in  a ))"
946,946A - Partition,"input () print ( sum ( map ( abs , map ( int , input (). split ()))))"
948,948A - Protect Sheep,"import  re r , c = input (). split () s = '\n' . join ( input (). replace ( '.' , 'D' ) for  _  in [ 0 ]* int ( r )) print ( 'No' if  re . search ( '(?s)(S|W)(.{' + c + '})?(?!\\1)[SW]' , s ) else 'Yes\n' + s )"
949,949A - Zebras,"s = input () l =[] even =[] odd =[] f = 1 for  i  in  range ( len ( s )): 	 if  s [ i ]== '0' : 		 if  len ( even )!= 0 : 			ind = even . pop () 			l [ ind ]. append ( i + 1 ) 			odd . append ( ind ) 		 else : 			l . append ([ i + 1 ]) 			odd . append ( len ( l )- 1 ) 	 else : 		 if  len ( odd ): 			ind = odd . pop () 			l [ ind ]. append ( i + 1 ) 			even . append ( ind ) 		 else : 			f = 0 			 break if  f  and  len ( even )== 0 : 	 print ( len ( l )) 	 for  x  in  l : 		 print ( len ( x ),* x ) else : 	 print (- 1 )"
950,"950A - Left-handers, Right-handers and Ambidexters","a , b , c = map ( int , input (). split ()); print ( 2 * min ( a + c , b + c ,( a + b + c )// 2 ))"
952,952A - Quirky Quantifiers,print ( int ( input ())% 2 )
953,926A - 2-3-numbers,print ( int ( input ())% 2 )
954,954A - Diagonal Walking,"import  re i = input i () print ( len ( re . sub ( 'UR|RU' , 'D' , i ())))"
955,955A - Feed the cat,"R = lambda : map ( int , input (). split ()) h , m = R () H , D , C , N = R () H += N - 1 print ( min ( H // N * C ,( H + max ( 0 , 1200 - h * 60 - m )* D )// N * C *. 8 ))"
957,957A - Tritonic Iridescence,"import  re f = re . search input () s = input () print ( 'No' if  f ( 'CC|MM|YY' , s ) or   not f ( r '^\?|\?\?|\?$|(C|M|Y)\?\1' , s ) else 'Yes' )"
959,959A - Mahmoud and Ehab and the even-odd game,"print ([ 'Mahmoud' , 'Ehab' ][ int ( input ())& 1 ])"
960,960A - Check the string,"s = input () a = s . count ( 'a' ) b = s . count ( 'b' ) print (( 'NO' , 'YES' )[ a * b  and  s  in ( 'a' * a + 'b' * b + 'c' * i  for  i  in   ( a , b ))])"
961,961A - Tetris,"R = lambda : map ( int , input (). split ()) n , m = R () a =[ 0 ]* n for  c  in  R (): a [ c - 1 ]+= 1 print ( min ( a ))"
962,962A - Equator,"n = int ( input ()) a = list ( map ( int , input (). split ())) s = sum ( a )/ 2 k = 0 i = 0 while ( k < s ): 	k += a [ i ] 	i += 1 print ( i )"
963,963A - Alternating Sum,"M  =   0x3b9aca09 inv  =   lambda  x :  pow ( x ,  M  -   2 ,  M ) n ,  a ,  b ,  k  =  map ( int ,  input (). split ()) s  =  input () c  =  inv ( a )   *  b  %  M q  =  pow ( c ,  k ,  M ) m  =   ( n  +   1 )   //  k p  =   ( pow ( q ,  m ,  M )   -   1 )   *  inv ( q  -   1 )   %  M  if  q  -   1   else  m x  =  pow ( a ,  n ,  M ) r  =   0 for  i  in  range ( k ):     r  =   ( r  +   [- 1 ,   1 ][ s [ i ]   ==   '+' ]   *  x  *  p )   %  M     x  =   ( x  *  c )   %  M print ( r )"
964,964A - Splits,print ( int ( input ())// 2 + 1 )
965,965A - Paper Airplanes,"k , n , s , p = map ( int , input (). split ()) print ( 0 --( 0 -- n // s * k )// p )"
967,967A - Mind the Gap,"R = lambda : map ( int , input (). split ()) n , s = R () r = 0 for  _  in [ 0 ]* n :  h , m = R (); t = 60 * h + m   if  t > r + s : break  r = t + s + 1 print ( r // 60 , r % 60 )"
975,975A - Aramic script,"input () print ( len ( set ( map ( frozenset , input (). split ()))))"
976,976A - Minimum Binary Number,input () s = input () print ( s [ 0 ]+ '0' * s [ 1 :]. count ( '0' ))
977,977A - Wrong Subtraction,"n , k = map ( int , input (). split ()) for  _  in  range ( k ):  n = n - 1   if  n % 10   else  n // 10 print ( n )"
978,978A - Remove Duplicates,"n = input () l = input (). split ()[::- 1 ] print ( len ( set ( l ))) print (* sorted ( set ( l ), key = l . index , reverse = True ))"
979,"979A - Pizza, Pizza, Pizza!!!",n = int ( input ()) n +=( n > 1 ) print ( n //( 2 -( n % 2 )))
980,980A - Links and Pearls,s = input () print ( 'NO' if  len ( s )%( s . count ( 'o' ) or   1 ) else 'YES' )
981,981A - Antipalindrome,s  =  input () print (( len ( s )   -   ( s  ==  s [::- 1 ]))   *   ( len ( set ( s ))   >   1 ))
982,982A - Row,"import  re input () print ( 'No' if  re . search ( '11|000' , '0' + input ()+ '0' ) else 'Yes' )"
984,984A - Game,"n = int ( input ()) print ( sorted ( map ( int , input (). split ()))[( n - 1 )// 2 ])"
985,985A - Chess Placing,"n = int ( input ()) p = sorted ( map ( int , input (). split ())) print ( min ( sum ( abs ( x - i ) for  x , i  in  zip ( p , range ( s , n + 1 , 2 ))) for  s  in ( 1 , 2 )))"
987,987A - Infinity Gauntlet,"d ={ 'purple' : 'Power' , 'green' : 'Time' , 'blue' : 'Space' , 'orange' : 'Soul' , 'red' : 'Reality' , 'yellow' : 'Mind' } for  _  in [ 0 ]* int ( input ()): d . pop ( input ()) print ( len ( d ),* d . values (), sep = '\n' )"
988,988A - Diverse Team,"r = lambda : map ( int , input (). split ()) n , k = r () a = dict ( zip ( r (), range ( 1 , n + 1 ))) if  len ( a )< k :   print ( 'NO' ) else :   print ( 'YES\n' ,*[* a . values ()][: k ])"
989,989A - A Blend of Springtime,"a  =  input ();   print (( ""NO"" , ""YES"" )[[* ""ABC"" ]   in  map ( sorted ,  zip ( a ,  a [ 1 :],  a [ 2 :]))])"
990,990A - Commentary Boxes,"n , m , a , b = map ( int , input (). split ()) print ( min ( n % m * b ,( m - n % m )* a ))"
991,991A - If at first you don't succeed...,"a , b , c , n = map ( int , input (). split ()) n -= a + b - c print ((- 1 , n )[ n > 0and  a >= c <= b ])"
992,992A - Nastya and an Array,i = input ; i (); print ( len ( set ( i (). split ())-{ '0' }))
993,993A - Two Squares,"a = list ( map ( int , input (). split ())) b = list ( map ( int , input (). split ())) c = min ( a [ 0 :: 2 ]) d = max ( a [ 0 :: 2 ]) e = min ( a [ 1 :: 2 ]) f = max ( a [ 1 :: 2 ]) g = sum ( b [ 0 :: 2 ])// 4 h = sum ( b [ 1 :: 2 ])// 4 r = abs ( b [ 0 ]- g )+ abs ( b [ 1 ]- h ) s = 'NO' for  i  in  range ( c , d + 1 ): 	 for  j  in  range ( e , f + 1 ): 		 if  abs ( i - g )+ abs ( j - h )<= r : 			s = 'YES' print ( s )"
994,994A - Fingerprints,"_ ,  l ,  s  =   ( input (). split ()   for  _  in   '_ls' ) print (*[ d  for  d  in  l  if  d  in  s ])"
996,996A - Hit the Lottery,n = int ( input ()) print ( n // 100 + n % 100 // 20 + n % 20 // 10 + n % 10 // 5 + n % 5 )
998,998A - Balloons,"n = int ( input ()) a =* map ( int , input (). split ()), x = a . index ( min ( a )) print ([- 1 , f '1\n{x+1}' ][ n > 1   and  a [ x ]< 0 -- sum ( a )// 2 ])"
999,999A - Mishka and Contest,"n , k = map ( int , input (). split ()) print ( n - len ( '' . join ( ' o' [ int ( x )> k ] for  x  in  input (). split ()). strip ()))"


