71205803,2020-02-16 10:43:00,Rain_Ray,1C - Ancient Berland Circus,Python 3,Accepted,8,202,"from  math  import   * p  =[ list ( map ( float , input (). split ()))   for  i  in  range ( 3 )] a , b , c =[ hypot ( x1 - x2 , y1 - y2 )   for   ( x1 , y1 ),( x2 , y2 )   in   [( p [ 0 ], p [ 1 ]),( p [ 0 ], p [ 2 ]),( p [ 1 ], p [ 2 ])]] A , B , C =[ acos (( y * y + z * z - x * x )/ 2 / z / y )   for  x , y , z  in   [( a , b , c ),( b , c , a ),( c , a , b )]] R = a / 2 / sin ( A ) def  g ( x , y ): return  x  if  y < 1e-3   else  g ( y , fmod ( x , y )) u = 2 * g ( A , g ( B , C )) print ( round ( R  *  R  *  pi  /  u  *  sin ( u ), 7 ))",kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun kwd pln pun pln pun pln pun kwd pln kwd pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun,248 ms,300 KB,1
46991579,2018-12-14 07:56:00,yuhta,2C - Commentator problem,Python 3,Accepted,33,277,"def  hill_climbing ( circles ):        def  diff ( x ):         d  =   []          for  y ,  ry  in  circles :             d . append ( abs ( x  -  y )   /  ry )         ans  =   0          for  i  in  range ( 3 ):             ans  +=   ( d [ i ]   -  d [( i + 1 )% 3 ])   **   2          return  ans       x  =   0     s  =   1      for  y ,  _  in  circles :         x  +=  y  /   3      while  s  >   1e-6 :         d0  =  diff ( x )          if  d0  >  diff ( x  +  s ):  x  +=  s          elif  d0  >  diff ( x  -  s ):  x  -=  s          elif  d0  >  diff ( x  +  s * 1j ):  x  +=  s * 1j          elif  d0  >  diff ( x  -  s * 1j ):  x  -=  s * 1j          else :  s  *=   0.7      return  x  if  diff ( x )   <   1e-5   else   None     if  __name__  ==   '__main__'   and   '__file__'   in  globals ():     circles  =   []      for  _  in  range ( 3 ):         x ,  y ,  r  =  map ( int ,  input (). split ())         circles . append (( x  +  y * 1j ,  r ))     ans  =  hill_climbing ( circles )      if  ans  is   not   None :          print ( ""{:.5f} {:.5f}"" . format ( ans . real ,  ans . imag ))",kwd pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln lit pln kwd pln pln pln pun pln lit pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln lit pln kwd pln kwd pln pln kwd pln pun pln str pln kwd pln str pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln kwd pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun,124 ms,0 KB,2
25541277,2017-03-16 10:43:00,Hamilton10,3C - Tic-tac-toe,Python 3,Accepted,21,198,"players  =   [ ""first"" ,   ""second"" ]   a  =  input () b  =  input () c  =  input ()   nx  =   ( a + b + c ). count ( 'X' ) no  =   ( a + b + c ). count ( '0' ) d  =  nx - no   s  =   [ a , b , c , a [ 0 ]+ b [ 1 ]+ c [ 2 ], a [ 2 ]+ b [ 1 ]+ c [ 0 ]]   +  list ( map ( '' . join , zip ( a , b , c ))) w  =   ( 'XXX'   in  s )   +   2 *( '000'   in  s )   - 1   if   ( d  not   in   ( 0 , 1 ))   or  w > 1    or  d == w :      print ( 'illegal' ) elif  w >= 0 :      print ( 'the ' + players [ w ]+ ' player won' ) elif  nx + no == 9 :      print ( 'draw' ) else :      print ( players [ d ])",pln pun pln pun str pun pln str pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pln pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pln kwd pln pun pln pun pln lit pun str pln kwd pln pun pln pun lit pln kwd pln pun pln kwd pln kwd pln pun lit pun lit pun pln kwd pln pun lit pln kwd pln pun pln pun pln kwd pun str pun kwd pln pun lit pun pln kwd pun str pun pln pun pln pun str pun kwd pln pun pln pun lit pun pln kwd pun str pun kwd pun pln kwd pun pln pun pln pun,124 ms,4500 KB,3
51166840,2019-03-11 17:37:00,c1729,4C - Registration System,Python 3,Accepted,2,42,"s ={} for  _  in  range ( int ( input ())): r = input (); print ( r + str ( s [ r ]) if  s . setdefault ( r , 0 ) else 'OK' ); s [ r ]+= 1",pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun lit pun kwd str pun pln pun pln pun lit,2028 ms,900 KB,4
42191044,2018-08-28 05:45:00,zhxjfl,5C - Longest Regular Bracket Sequence,Python 3,Accepted,11,98,"s = input () w , c , b , l = 0 , 1 ,- 1 ,[] for  i  in  range ( len ( s )):     if  s [ i ]== '(' : l . append ( i )     elif  l :       l . pop ()       t = i - l [- 1 ]   if  l  else  i - b        if  t > w :  w , c = t , 1        elif  t == w :  c += 1     else : b = i print ( w , c )",pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun str pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun lit pln kwd pun pln pun pln kwd pun pln pun pln pun,1496 ms,25900 KB,5
47804988,2019-01-01 09:12:00,Silky_Littleraisin,"6C - Alice, Bob and Chocolate",Python 3,Accepted,8,69,"n = int ( input ()) * l ,= map ( int , input (). split ()) a = b = i = 0 j = n - 1 while  i <= j :      if  a <= b : a += l [ i ]; i += 1      else : b += l [ j ]; j -= 1 print ( i , n - i )",pln pun pln pun pln pun pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun lit kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pun pln pun pln pun pln pun pln pun lit kwd pun pln pun pln pun pln pun,342 ms,6700 KB,6
49734133,2019-02-10 20:25:00,UTMoonlight,7C - Line,Python 3,Accepted,9,105,"def  e ( a , b ):    if   not  a :      return   0 ,   1 ,  b   x ,  y ,  g  =  e ( b % a ,  a )    return  y  -   ( b // a )* x ,  x ,  g a , b , c  =  map ( int ,  input (). split ()) x , y , g  =  e ( a , b ) C  =   - c // g print (- 1 )   if  c % g  else   print ( C * x ,  C * y )",kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pln lit pun pln lit pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun lit pun pln kwd pln pun pln kwd pln kwd pun pln pun pln pun pln pun pln pun,248 ms,0 KB,7
55971234,2019-06-23 17:55:00,1ST_AlOosh,9C - Hexadecimal's Numbers,Python 3,Accepted,4,30,x = 1 n = int ( input ()) while ( int ( bin ( x )[ 2 :])<= n ): x += 1 print ( x - 1 ),pln pun lit pln pun pln pun pln pun kwd pun pln pun pln pun pln pun lit pun pln pun pln pun lit kwd pun pln pun lit pun,218 ms,0 KB,9
55736631,2019-06-19 07:36:00,07rahi,10C - Digital Root,Python 3,Accepted,8,101,"n  ,  ans  ,  a  =  int ( input ())   ,   0   ,   [ 0 ]   *   10 for  i  in  range ( 1 , n + 1 ):     ans  -=   ( int )( n / i )     a [ i  %   9 ]   +=   1 for  i  in  range ( 9 ):      for  j  in  range ( 9 ):         ans  +=  a [ i ]   *  a [ j ]   *  a [( i  *  j )   %   9 ] print   ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun kwd pln pun pln pun,1370 ms,0 KB,10
21732284,2016-10-24 06:02:00,Amores,12C - Fruits,Python 3,Accepted,9,100,"S = sorted R = input I = lambda : map ( int , R (). split ()) n , m = I () C = S ( I ()) d ={} for  _  in '0' * m : t = R (); d [ t ]= d . get ( t , 0 )+ 1 d = S ( d . values ())[::- 1 ] for  c  in  C , C [::- 1 ]: print ( sum ( d [ i ]* c [ i ] for  i  in  range ( len ( d ))), end = ' ' )",pln pun pln pln pun pln pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun str pun,77 ms,0 KB,12
74035726,2020-03-23 15:10:00,Vasiliy_48,13C - Sequence,Python 3,Accepted,12,63,"import  heapq input () ans = 0 a =[] inf = 10 ** 9 for  x  in  map ( int , input (). split ()):     x = inf - x     heapq . heappush ( a , x )     ans += a [ 0 ]- x     heapq . heappop ( a )     heapq . heappush ( a , x ) print (- ans )",kwd pln pln pun pln pun lit pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,248 ms,500 KB,13
32037060,2017-11-03 23:58:00,yugle7,14C - Four Segments,Python 3,Accepted,7,129,"s  =   { 0 :   0 ,   1 :   0 } for  i  in  range ( 4 ):     a ,  b ,  c ,  d  =  input (). split ()      if  a  ==  c  and  b  !=  d :  s [ 0 ]   +=   1      if  b  ==  d  and  a  !=  c :  s [ 1 ]   +=   1      for  q  in   [( a ,  b ),   ( c ,  d )]:  s [ q ]   =  s . get ( q ,   0 )   +   1 print ( 'YES'   if  all ( i  ==   2   for  i  in  s . values ())   else   'NO' )",pln pun pln pun lit pun pln lit pun pln lit pun pln lit pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit kwd pun str pln kwd pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln kwd pln str pun,124 ms,0 KB,14
55736743,2019-06-19 07:42:00,Darshan1999,15C - Industrial Nim,Python 3,Accepted,13,100,"def  f ( x ):      if  x % 4 == 1 : return  x - 1      if  x % 4 == 2 : return   1      if  x % 4 == 3 : return  x      return   0   n = int ( input ()) k = 0 for  i  in  range ( n ):     a , b = input (). split ()     k ^= f ( int ( a ))^ f ( int ( a )+ int ( b )) if  k == 0 : print ( 'bolik' ) else : print ( 'tolik' )",kwd pln pun pln pun pln kwd pln pun lit pun lit pun kwd pln pun lit pln kwd pln pun lit pun lit pun kwd pln lit pln kwd pln pun lit pun lit pun kwd pln pln kwd pln lit pln pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun lit pun kwd pun str pun kwd pun kwd pun str pun,902 ms,0 KB,15
55736894,2019-06-19 07:49:00,tushusavaliya,16C - Monitor,Python 3,Accepted,7,60,"import  math a , b , c , d =[ int ( i )   for  i  in  input (). split ()] g = math . gcd ( c , d ) c //= g d //= g e = min ( a // c , b // d ) print ( e * c , e * d )",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun,109 ms,0 KB,16
14544147,2015-11-28 19:38:00,merolish,18C - Stripe,Python 3,Accepted,4,71,"n ,  a  =  int ( input ()),  list ( map ( int ,  input (). split ())) for  i  in  range ( 1 ,  n ):     a [ i ]   +=  a [ i  -   1 ] print ( sum ( 2   *  a [ i ]   ==  a [ n  -   1 ]   for  i  in  range ( n  -   1 )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun kwd pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln lit pun,404 ms,7000 KB,18
42003038,2018-08-23 19:30:00,fezjo,19C - Deletion of Repeats,Python 3,Accepted,58,369,"def  pow ( x ,  exp ,  mod ):     res  =   1      while  exp :          if  exp  &   1 :             res  =   ( res  *  x )   %  mod         x  =   ( x  *  x )   %  mod         exp  >>=   1      return  res     MOD  =   2   **   121   -   1 M  =  int ( 1e9 )   +   1     n  =  int ( input ()) vals  =  list ( map ( int ,  input (). split ()))   groups  =  dict () for  i  in  range ( n ):     groups . setdefault ( vals [ i ],   []). append ( i )   powsA  =   [ 1 ] for  i  in  range ( n ):     powsA . append (( powsA [- 1 ]   *  M )   %  MOD )   hashes  =   [ 0 ]   *   ( n  +   1 ) for  i  in  range ( n ):     hashes [ i  +   1 ]   =   ( hashes [ i ]   *  M  +  vals [ i ])   %  MOD     def  get_hash ( p ,  l ):     res  =  hashes [ p  +  l ]   -   ( hashes [ p ]   *  powsA [ l ])   %  MOD      if  res  <   0 :         res  +=  MOD      elif  res  >  MOD :         res  -=  MOD      return  res     best  =   0 i  =   0 while  i  <  n :     val  =  vals [ i ]      for  j  in  groups [ val ]:          if  j  <=  i :              continue           l  =  j  -  i          if  j  +  l  <=  n  and  get_hash ( i ,  l )   ==  get_hash ( j ,  l ):             best  =  max ( best ,  j )             i  =  j  -   1              break     i  +=   1     res  =  vals [ best :] print ( len ( res )) print ( "" "" . join ( map ( str ,  res )))",kwd pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln kwd pln pln pln pln pun pln lit pln pun pln lit pln pun pln lit pln pun pln pun lit pun pln pun pln lit pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln lit pun pln pun pln pln kwd pln pun pln pun pln pun pln pln kwd pln pln pln pln pun pln lit pln pun pln lit kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln pln pun pln pun pln pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln lit pln pln pln pun pln pun pln pun kwd pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun,1716 ms,21500 KB,19
37490574,2018-04-20 17:38:00,vjudge1,20C - Dijkstra?,Python 3,Accepted,28,263,"from  heapq  import   * I  =   1   <<   60   n ,  m  =  map ( int ,  input (). split ()) g  =   [[]   for  _  in  range ( n )] d  =   [ 0 ]   +   [ I ]   *  n p  =   [- 1 ]   *  n q  =   [( 0 ,   0 )] for  i  in  range ( m ): 	a ,  b ,  w  =  map ( int ,  input (). split ()) 	g [ a - 1 ]   +=   [( w ,  b - 1 )] 	g [ b - 1 ]   +=   [( w ,  a - 1 )] while  q : 	a  =  heappop ( q )[ 1 ] 	 for  e  in  g [ a ]: 		w ,  b  =  d [ a ]   +  e [ 0 ],  e [ 1 ] 		 if  w  <  d [ b ]: 			d [ b ],  p [ b ]   =  w ,  a 			heappush ( q ,   ( d [ b ],  b )) if  d [ n - 1 ]   ==  I : 	 print (- 1 ); else : 	x ,  y  =  n  -   1 ,   [] 	 while  x  !=   - 1 : 		y  +=   [ x  +   1 ] 		x  =  p [ x ] 	y . reverse () 	 print ( ' ' . join ( map ( str ,  y )))",kwd pln kwd pln pun pln pun pln lit pln pun pln lit pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln pln pun pln pun lit pun pln lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun kwd pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln pun pln kwd pun lit pun kwd pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun,888 ms,35500 KB,20
16908575,2016-03-24 18:15:00,MarcoXerox,21C - Stripe 2,Python 3,Accepted,8,105,"from  itertools  import  accumulate n  =  int ( input ()) a  =  list ( map ( int ,  input (). split ())) s  =  sum ( a ) p  =  s  //   3 k  =  list ( accumulate ( a )) r  =  list ( accumulate ( x  ==   2 * p  for  x  in  reversed ( k ))) print ( 0   if  s % 3   else  sum ( r [- 1 - i ]   -   2 *( not  p )   for  i , x  in  enumerate ( k [:- 1 ])   if  x  ==  p ))",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun kwd pun lit pln kwd pln pun lit pln kwd pln pun pln pun lit pun pln pun pln pun pln lit pun kwd pln pun pln kwd pln pun pln kwd pln pun pln pun lit pun pln kwd pln pun pln pun,124 ms,12000 KB,21
59082070,2019-08-19 12:35:00,luogu_bot2,22C - System Administrator,Python 3,Accepted,12,123,"n ,  m ,  v  =  map ( int ,  input (). split ()) if  m  <  n  -   1   or   2   *  m  >  n  *   ( n  -   3 )   +   4 :  exit ( print (- 1 )) r  =  list ( range ( 1 ,  n  +   1 )) r . pop ( v  -   1 ) for  i  in  r :   print ( v ,  i ) r . pop () for  i  in  r : 	 for  j  in  r : 		 if  j  >  i : 			 if  n  >  m :  exit () 			 print ( i ,  j ) 			n  +=   1",pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln lit pln kwd pln lit pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pun kwd pun lit pun pln pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun kwd pln kwd pln pun pln kwd pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln lit,467 ms,2600 KB,22
52743512,2019-04-14 13:26:00,teitoku,23C - Oranges and Apples,Python 3,Accepted,33,192,"t  =  int ( input ())     while  t : 	t  =  t - 1 	boxes  =   [] 	n  =  int ( input ()) 	num_box  =   ( 2 * n )- 1 	 for  i  in  range ( num_box ): 		pair  =  input (). split () 		apples  =  int ( pair [ 0 ]) 		oranges  =  int ( pair [ 1 ]) 		boxes . append (( apples ,  oranges ,  i + 1 ))   	 print ( ""YES"" ) 	boxes . sort ( reverse = True )   	orange_boxes  =  list ( zip (* boxes ))[ 1 ] 	total_oranges  =  sum ( orange_boxes )   	half_sum1  =  sum ( orange_boxes [:: 2 ]) 	half_sum2  =  sum ( orange_boxes [ 1 :: 2 ])   	index_list  =  list ( list ( zip (* boxes ))[ 2 ]) 	index_list1  =  index_list [:: 2 ] 	index_list2  =  index_list [ 1 :: 2 ] 	index_list2 . append ( index_list1 [ 0 ])   	 if  half_sum1  >=  half_sum2 : 		 print (* index_list1 ,  sep = ' ' )   	 else :   		 print (* index_list2 ,  sep = ' ' )",pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln kwd pun str pun pln pun pln pun pln pun kwd pun pln pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun lit pun pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun pln pln kwd pln pun pln pun pln kwd pun pln pun pln pun str pun pln pln kwd pun pln pln kwd pun pln pun pln pun str pun,1824 ms,31500 KB,23
5629142,2014-01-06 23:26:00,serglag,24C - Sequence of points,Python 3,Accepted,19,119,"n ,  k  =  map ( int ,  input (). split ())   ax  =   [] ay  =   []   mx ,  my  =  map ( int ,  input (). split ())   for  i  in  range ( n ):     x ,  y  =  map ( int ,  input (). split ())     ax . append ( x )     ay . append ( y )   k  %=   2 * n   for  i  in  range ( k ):     mx  =   2 * ax [ i  %  n ]   -  mx     my  =   2 * ay [ i  %  n ]   -  my   print ( mx ,   "" "" ,  my )",pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pun pln pln kwd pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln str pun pln pun,810 ms,5200 KB,24
34208703,2018-01-16 01:10:00,.I.,26C - Parquet,Python 3,Accepted,47,497,"n , m , a , b , c  =  map ( int , input (). split ()) swapped  =   False if ( n % 2   ==   1   and  m % 2   ==   1 ): 	 print ( 'IMPOSSIBLE' ) 	exit () if ( m % 2   ==   1 ): 	n , m , a , b , swapped  =  m , n , b , a , True ans  =   [[ '.'   for  i  in  range ( m )]   for  i  in  range ( n )] for  i  in  range ( 0 , n - 1 , 2 ): 	 for  j  in  range ( 0 , m - 1 , 2 ): 		l1 , l2  =  chr ( i % 4 + 4 *( j % 4 )+ ord ( 'a' )), chr ( i % 4 + 4 *(( j + 1 )% 4 )+ ord ( 'a' )) 		 if ( c  >=   1 ): 			ans [ i ][ j ]   =  l1 			ans [ i + 1 ][ j ]   =  l1 			ans [ i ][ j + 1 ]   =  l1 			ans [ i + 1 ][ j + 1 ]   =  l1 			c  -=   1 		 elif ( b  >=   2 ): 			ans [ i ][ j ]   =  l1 			ans [ i + 1 ][ j ]   =  l1 			ans [ i ][ j + 1 ]   =  l2 			ans [ i + 1 ][ j + 1 ]   =  l2 			b  -=   2 		 elif ( a  >=   2 ): 			ans [ i ][ j ]   =  l1 			ans [ i + 1 ][ j ]   =  l2 			ans [ i ][ j + 1 ]   =  l1 			ans [ i + 1 ][ j + 1 ]   =  l2 			a  -=   2 		 else : 			 print ( 'IMPOSSIBLE' ) 			exit () #print(a,b,ans) if ( n % 2   ==   1 ): 	 for  j  in  range ( 0 , m , 2 ): 		i  =  n - 1 		l1 , l2  =  chr ( i % 4 + 4 *( j % 4 )+ ord ( 'a' )), chr ( i % 4 + 4 *(( j + 1 )% 4 )+ ord ( 'a' )) 		 if ( a  >=   1 ): 			ans [ i ][ j ]   =  l1 			ans [ i ][ j + 1 ]   =  l1 			a  -=   1 		 else : 			 print ( 'IMPOSSIBLE' ) 			exit () if ( swapped ): 	ans  =   [[ ans [ i ][ j ]   for  i  in  range ( n )]   for  j  in  range ( m )] print ( '\n' . join ([ '' . join ( x )   for  x  in  ans ]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd kwd pun pln pun lit pln pun pln lit pln kwd pln pun lit pln pun pln lit pun pln kwd pun str pun pln pun kwd pun pln pun lit pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun str pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun lit pun pln pun str pun pln pun pln pun lit pun lit pun pln pun lit pun lit pun pln pun str pun pln kwd pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun lit pun pln pun lit pun pln pun pln pln pun pln lit pln kwd pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun lit pun pln pun lit pun pln pun pln pln pun pln lit pln kwd pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun lit pun pln pun lit pun pln pun pln pln pun pln lit pln kwd pun pln kwd pun str pun pln pun com kwd pun pln pun lit pln pun pln lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun lit pln pun pln pun pln pun pln pun lit pun lit pun pln pun lit pun pln pun str pun pln pun pln pun lit pun lit pun pln pun lit pun lit pun pln pun str pun pln kwd pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln pun pln pln pun pln lit pln kwd pun pln kwd pun str pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pun str pun pln pun str pun pln pun pln pun pln kwd pln kwd pln pun,154 ms,5500 KB,26
75055060,2020-04-01 11:09:00,Vasiliy_48,27C - Unordered Subsequence,Python 3,Accepted,7,72,"n = int ( input ()) a = list ( map ( int , input (). split ())) for  i  in  range ( 2 , n ):      if   ( a [ i ]- a [ i - 1 ])*( a [ i - 1 ]- a [ 0 ])< 0 :          print ( 3 , 1 , i , i + 1 )         exit () print ( 0 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun lit pun pln kwd pun lit pun lit pun pln pun pln pun lit pun pln pun kwd pun lit pun,342 ms,7500 KB,27
53613410,2019-05-01 17:20:00,Codeprig,29C - Mail Stamps,Python 3,Accepted,13,115,"from  collections  import   * d ,  c  = defaultdict ( int ),   [] for  i  in  range ( int ( input ())):     x ,  y  =  map ( int ,  input (). split ())     c  +=   [ x ,  y ]     d [ x ]   +=  y     d [ y ]   +=  x a ,  b  =   [ q  for  q ,  k  in   Counter ( c ). items ()   if  k  ==   1 ] q  =   0 while  a  !=  b :      print ( a )     q ,  a  =  a ,  d [ a ]   -  q print ( a )",kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pln pun pln pun pln pun pln kwd pln pun pln kwd pln typ pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln lit kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun,1620 ms,15000 KB,29
45961794,2018-11-19 15:01:00,riahi,30C - Shooting Gallery,Python 3,Accepted,11,167,"n  =  int ( input ()) ts  =  sorted (( list ( map ( float , input (). strip (). split ()))   for  _  in  range ( n )),  key = lambda  x : x [ 2 ]) d  =   [ 0 ]* n ans  =   0 for  i  in  range ( n ):     d [ i ]   =  ts [ i ][ 3 ]      for  j  in  range ( i ):          if   ( ts [ i ][ 0 ]- ts [ j ][ 0 ])** 2   +   ( ts [ i ][ 1 ]- ts [ j ][ 1 ])** 2   <=   ( ts [ i ][ 2 ]- ts [ j ][ 2 ])** 2 :             d [ i ]   =  max ( d [ i ],  d [ j ]+ ts [ i ][ 3 ])     ans  =  max ( ans ,  d [ i ]) print ( '%.9f' % ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun lit pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun lit pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun pln pun,1934 ms,0 KB,30
75395295,2020-04-03 18:53:00,Vasiliy_48,32C - Flea,Python 3,Accepted,4,56,"n , m , s = map ( int , input (). split ()) w =(( n - 1 )// s + 1 )*(( n - 1 )% s + 1 ) h =(( m - 1 )// s + 1 )*(( m - 1 )% s + 1 ) print ( w * h )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun kwd pun pln pun pln pun,218 ms,0 KB,32
14919821,2015-12-22 04:20:00,Eeyore,33C - Wonderful Randomized Sum,Python 3,Accepted,9,60,"n  =  int ( input ()) values  =  list ( map ( int ,  input (). split ()))   best_infix  =  infix  =   0 for  x  in  values :     infix  =  max ( 0 ,  infix  +  x )     best_infix  =  max ( best_infix ,  infix )   print ( 2   *  best_infix  -  sum ( values ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun lit pln pun pln pun pln pun pln pun,280 ms,7200 KB,33
34173593,2018-01-14 14:40:00,topmind,34C - Page Numbers,Python 3,Accepted,7,78,"s , a = set ( map ( int , input (). split ( ',' ))), '' l =[ x  for  x  in  s ] l . sort () for  i  in  l : 	 if  i - 1   not   in  l : a += ',' + str ( i ) 	 elif  i + 1   not   in  l : a += '-' + str ( i ) print ( a [ 1 :])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun str pln pun pln kwd pln kwd pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln pun lit pln kwd pln kwd pln pun pln pun str pun pln pun pln pun pln kwd pln pun lit pln kwd pln kwd pln pun pln pun str pun pln pun pln pun kwd pun pln pun lit pun,124 ms,5500 KB,34
27923350,2017-06-20 14:07:00,cr0n,37C - Old Berland Language,Python 3,Accepted,23,179,"#!/usr/bin/python3   counts  =   [ 0 ]* 1024 for  x  in  range ( len ( counts )):  counts [ x ]   =   [] N  =  int ( input ()) x  =   [ int ( t )   for  t  in  input (). strip (). split ()] for  i , t  in  enumerate ( x ):  counts [ t ]. append ( i )     curr  =   0 ans  =   [ 0 ]* N for  i  in  range ( 1 , 1024 ): 	 while  len ( counts [ i ])   >   0 : 		x  =  bin ( curr )[ 2 :] 		 if  len ( x )   >  i : 			 print ( ""NO"" ) 			exit ( 0 ) 		 else :  x  =   ""0"" *( i - len ( x ))   +  x 		ans [ counts [ i ]. pop ()]   =  x 		curr  +=   1 	curr  =   2 * curr print ( ""YES"" ) print ( ""\n"" . join ( ans ))",com pln pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln pun pln lit pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun lit pun pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun lit pun pln kwd pun pln pun pln str pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln pun pln lit pun pln kwd pun str pun kwd pun str pun pln pun pln pun,124 ms,2300 KB,37
20483567,2016-09-09 20:32:00,Amores,38C - Blinds,Python 3,Accepted,4,49,"I = lambda : list ( map ( int , input (). split ())) n , l = I () a = I () print ( max ( i * sum ( x // i  for  x  in  a ) for  i  in  range ( l , 101 )))",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun pln pun lit pun,156 ms,0 KB,38
24699233,2017-02-15 18:16:00,sbandjohn,40C - Berland Square,Python 3,Accepted,83,694,"def  readGen ( trans ): 	 while   1 : 		 for  x  in  input (). split (): 			 yield ( trans ( x )) 	 readint = readGen ( int )   [ N , x , M , y ]=( next ( readint )   for  i  in  range ( 4 ))   d = abs ( y - x )   def  interval ( a , b ):   return  range ( a , b + 1 )   def  case1 ( N , M , d ):   # d>=N 	ans = 0 	 for  r  in  interval ( 1 ,  min ( M , d - N )): 		ans += 1 	 if   ( M <= d - N ): 		 return  ans 	 for  r  in  interval ( d - N + 1 ,  min ( M , d )): 		ans += 2 *( N + r - d ) 	 if   ( M <= d ): 		 return  ans 	 for  r  in  interval ( d + 1 , min ( M , d + N )): 		ans += 2 *( d + N - r + 1 ) 	 if   ( M <= d + N ): 		 return  ans 	 for  r  in  interval ( d + N + 1 , M ): 		ans += 1 	 return  ans   def  partA ( N , M , d ): 	ans = 0 	 for  r  in  interval ( 1 , min ( M , d )): 		ans += 2 * r - 1 	 if   ( M < d + 1 ): 		 return  ans 	 for  r  in  interval ( d + 1 , min ( M , 2 * d )): 		ans += 2 *( 2 * d - r )+ 1 	 return  ans   def  partB ( N , M , d ): 	ans = 0 	bound1 = min ( 2 * d , N - d ) 	 for  r  in  interval ( 1 , min ( M , bound1 )): 		ans += 2 *( r - 1 )+ 1 	 if   ( M <= bound1 ): 		 return  ans 	 if   ( 2 * d <= N - d ): 		 for  r  in  interval ( bound1 + 1 , min ( M , N - d )): 			ans += 4 * d 		 if   ( M <= N - d ): 			 return  ans 	 if   ( 2 * d > N - d ): 		 for  r  in  interval ( bound1 + 1 , min ( M , 2 * d )): 			ans += 2 *( N - d )+ 1 		 if   ( M <= 2 * d ): 			 return  ans 	bound2 = max ( 2 * d , N - d ) 	 for  r  in  interval ( bound2 + 1 , min ( M , d + N )): 		ans += 2 *( d + N - r )+ 2 	 if   ( M <= d + N ): 		 return  ans 	 for  r  in  interval ( d + N + 1 , M ): 		ans += 1 	 return  ans 	 def  case2 ( N , M , d ):   # d<N 	 return  partA ( N , M , d )+ partB ( N , M , d )   def  remain ( N , M , d ): 	 if   ( M >= d + N ): 		 return   1 	 if   ( M > d ): 		 return  d + N - M + 1 	 if   ( M <= d ): 		 return  N + 1 	 def  calc ( N , M , d ): 	 if   ( N <= d ):   return  remain ( N , M , d )+ case1 ( N , M , d ) 	 else :   return  remain ( N , M , d )+ case2 ( N , M , d )   print ( calc ( N , M , d ))",kwd pln pun pln pun pln kwd pln lit pun pln kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln com pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln kwd pln pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pln kwd pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun lit pln kwd pln pun pln pun pln pun lit pun pln kwd pln pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun pln pun pln pun lit pln kwd pln pln kwd pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit pln kwd pln pun pln pun pln pun pln kwd pln pln kwd pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln pln kwd pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pun pln pun lit pun pln pun pln kwd pln pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln kwd pln pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pln kwd pln pun pln pun pln pun pln pun pln com pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln kwd pln pun lit pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun,218 ms,4800 KB,40
40703840,2018-07-24 15:21:00,gleb.shnshn,41C - Email address,Python 3,Accepted,2,43,"a = input () print ( a [ 0 ]+ a [ 1 : len ( a )- 1 ]. replace ( ""at"" ,   ""@"" , 1 ). replace ( ""dot"" , ""."" )+ a [ len ( a )- 1 ])",pln pun pln pun kwd pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pun str pun pln str pun lit pun pln pun str pun str pun pln pun pln pun pln pun lit pun,218 ms,0 KB,41
12342557,2015-08-04 22:22:00,Eeyore,42C - Safe cracking,Python 3,Accepted,43,326,"ring  =  list ( map ( int ,  input (). split ())) n  =  len ( ring )   record  =   []   def  halve ( pos ):   a ,  b  =  pos  %  n ,   ( pos  +   1 )   %  n   ring [ a ]   //=   2   ring [ b ]   //=   2   record . append ( '/%d'   %   ( a  +   1 ))   def  increment ( pos ):   a ,  b  =  pos  %  n ,   ( pos  +   1 )   %  n   ring [ a ]   +=   1   ring [ b ]   +=   1   record . append ( '+%d'   %   ( a  +   1 ))   while   True :   modified  =   False    for  a  in  range ( n ):     b  =   ( a  +   1 )   %  n      while  ring [ a ]   +  ring [ b ]   >   3 :        if  ring [ a ]   %   2   ==   1   and  ring [ b ]   %   2   ==   1 :         increment ( a )        elif  ring [ a ]   %   2   ==   1 :         increment ( a  -   1 )        elif  ring [ b ]   %   2   ==   1 :         increment ( b )       halve ( a )       modified  =   True    if   not  modified :      break   while   2   in  ring :   pos  =  ring . index ( 2 )   increment ( pos  -   1 )   increment ( pos )   halve ( pos  -   1 )   halve ( pos )   if  len ( record )   >   0 :    print ( '\n' . join ( record )) #print(len(record), ring)",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln lit pln pun pln pun str pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln lit pln pun pln pun str pln pun pln pun pln pun pln lit pun pln kwd pln kwd pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun pln pun pln lit pln pun pln lit pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pln pun pln lit pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln lit pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln kwd pln kwd pln lit pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln kwd pun str pun pln pun pln pun com,124 ms,0 KB,42
15500981,2016-01-22 18:54:00,merolish,43C - Lucky Tickets,Python 3,Accepted,4,60,"n ,  v  =  int ( input ()),   [ 0 ]   *   3 for  ai  in  map ( int ,  input (). split ()):     v [ ai  %   3 ]   +=   1 print ( v [ 0 ]   //   2   +  min ( v [ 1 ],  v [ 2 ]))",pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit kwd pun pln pun lit pun pln pun pln lit pln pun pln pun pln pun lit pun pln pun lit pun,124 ms,700 KB,43
61559800,2019-09-30 18:11:00,nosy,44C - Holidays,Python 3,Accepted,11,94,"n , m = map ( int , input (). split ()) jel =[ 0 ]*( n + 1 ) for  _  in  range ( m ):   a , b = map ( int , input (). split ())    for  t  in  range ( a , b + 1 ):  jel [ t ]+= 1 i = 1 while  i <= n  and  jel [ i ]== 1 :  i += 1 if  i > n :    print ( 'OK' ) else :    print ( i , jel [ i ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pln pun lit kwd pln pun pln kwd pln pun pln pun lit pun pln pun lit kwd pln pun pln pun pln kwd pun str pun kwd pun pln kwd pun pln pun pln pun pln pun,248 ms,0 KB,44
17839519,2016-05-11 09:28:00,darkria,45C - Dancing Lessons,Python 3,Accepted,27,265,"import  heapq , sys q =[] c = 0 n = int ( input ()) s = input () a = list ( map ( int , input (). split ())) l =[ i - 1   for  i  in  range ( n )] r =[ i + 1   for  i  in  range ( n )] for  i  in  range ( n - 1 ): 	 if  s [ i ]!= s [ i + 1 ]: 		heapq . heappush ( q ,( abs ( a [ i ]- a [ i + 1 ]), i , i + 1 )) 		c += 1 ans =[] while  c > 0 : 	t , i , j = heapq . heappop ( q ) 	c -= 1 	 if  r [ i ]==- 1   or  r [ j ]==- 1 : 		 continue 	ans . append ( '%d %d' %( i + 1 , j + 1 )) 	u , v = l [ i ], r [ j ] 	r [ i ]= r [ j ]=- 1 	 if  u >= 0 :  r [ u ]= v 	 if  v < n :  l [ v ]= u 	 if  u >= 0   and  v < n  and  s [ u ]!= s [ v ]: 		heapq . heappush ( q ,( abs ( a [ u ]- a [ v ]), u , v )) 		c += 1 sys . stdout . write ( str ( len ( ans ))+ '\n' + '\n' . join ( ans )+ '\n' )",kwd pln pun pln pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pln pun kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun lit pln kwd pln pun pln pun lit pun pln kwd pln pun pln pun str pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun lit pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln pun lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun str pun str pun pln pun pln pun str pun,1637 ms,41200 KB,45
39267307,2018-06-15 16:22:00,ashok123,46C - Hamsters and Tigers,Python 3,Accepted,6,48,n = int ( input ()) s = input ()   h = s . count ( 'H' ) s = s + s print ( min ( s [ i : i + h ]. count ( 'T' )   for  i  in  range ( n ))),pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun str pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln kwd pln pun pln pun,186 ms,100 KB,46
15617800,2016-01-27 21:49:00,merolish,47C - Crossword,Python 3,Accepted,22,453,"from  itertools  import  permutations v  =   [] for  p  in  permutations ( input ()   for  i  in  range ( 6 )):      if  len ( p [ 1 ])   !=  len ( p [ 0 ])   +  len ( p [ 2 ])   -   1   or  len ( p [ 4 ])   !=  len ( p [ 3 ])   +  len ( p [ 5 ])   -   1 :          continue      elif  p [ 0 ][ 0 ]   !=  p [ 3 ][ 0 ]   or  p [ 0 ][- 1 ]   !=  p [ 4 ][ 0 ]:          continue      elif  p [ 1 ][ 0 ]   !=  p [ 3 ][- 1 ]   or  p [ 1 ][ len ( p [ 0 ])   -   1 ]   !=  p [ 4 ][ len ( p [ 3 ])   -   1 ]   or  p [ 1 ][- 1 ]   !=  p [ 5 ][ 0 ]:          continue      elif  p [ 2 ][ 0 ]   !=  p [ 4 ][- 1 ]   or  p [ 2 ][- 1 ]   !=  p [ 5 ][- 1 ]:          continue      else :         x ,  y ,  c  =   '.'   *   ( len ( p [ 1 ])   -  len ( p [ 0 ])),   '.'   *   ( len ( p [ 1 ])   -  len ( p [ 2 ])),   []         c . append ( p [ 0 ]   +  x )          for  i  in  range ( 1 ,  len ( p [ 3 ])   -   1 ):             c . append ( p [ 3 ][ i ]   +   '.'   *   ( len ( p [ 0 ])   -   2 )   +  p [ 4 ][ i ]   +  x )         c . append ( p [ 1 ])          for  i  in  range ( 1 ,  len ( p [ 5 ])   -   1 ):             c . append ( y  +  p [ 4 ][ len ( p [ 3 ])   +  i  -   1 ]   +   '.'   *   ( len ( p [ 2 ])   -   2 )   +  p [ 5 ][ i ])         c . append ( y  +  p [ 2 ])         v . append ( c ) print ( '\n' . join ( sorted ( v )[ 0 ])   if  v  else   'Impossible' )",kwd pln kwd pln pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln lit pun pln kwd pln kwd pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln kwd pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln kwd pln kwd pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln lit pun pln kwd pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln kwd pln kwd pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln kwd pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln kwd pln kwd pun pln pun pln pun pln pun pln str pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln str pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln str pln pun pln pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln str pun,124 ms,300 KB,47
24712799,2017-02-16 11:11:00,sbandjohn,48C - The Race,Python 3,Accepted,21,158,"#codeforces 48c: the race: math import  math   def  readGen ( trans ): 	 while   1 : 		 for  x  in  input (). split (): 			 yield ( trans ( x )) readint = readGen ( int )   n = next ( readint ) a =[ 0 ]+[ next ( readint )   for  i  in  range ( n )]   p = max (( n + 1 )* a [ i ]/ i - 1   for  i  in  range ( 1 , n + 1 )) q = min (( n + 1 )*( a [ i ]+ 1 )/ i  for  i  in  range ( 1 , n + 1 ))   eps = 1e-8 u = math . floor ( q - eps ) l = math . ceil ( p + eps ) #print(p,q,l,u) if   ( l < u ):   print ( ""not unique"" ) else :   print ( ""unique\n%d"" % l )",com kwd pln pln kwd pln pun pln pun pln kwd pln lit pun pln kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun com kwd pln pun pln pun pln pun pln kwd pun str pun kwd pun pln kwd pun str pun pln pun,154 ms,4800 KB,48
50733647,2019-03-03 14:57:00,pavkal5,49C - Disposition,Python 3,Accepted,2,20,"print (* range ( 2 ,  int ( input ())+ 1 ),  end = ' ' ) print ( 1 )",kwd pun pln pun lit pun pln pun pln pun lit pun pln pun str pun kwd pun lit pun,498 ms,2900 KB,49
13918190,2015-10-28 18:49:00,Eeyore,50C - Happy Farm 5,Python 3,Accepted,29,221,"n  =  int ( input ()) x ,  y  =  map ( int ,  input (). split ()) max_x  =  min_x  =  x max_y  =  min_y  =  y sum_pp  =  x  +  y sum_pn  =  x  -  y sum_np  =   - x  +  y sum_nn  =   - x  -  y for  i  in  range ( 1 ,  n ):   x ,  y  =  map ( int ,  input (). split ())   max_x  =  max ( max_x ,  x )   min_x  =  min ( min_x ,  x )   max_y  =  max ( max_y ,  y )   min_y  =  min ( min_y ,  y )    if  x  +  y  >  sum_pp :     sum_pp  =  x  +  y    if  x  -  y  >  sum_pn :     sum_pn  =  x  -  y    if   - x  +  y  >  sum_np :     sum_np  =   - x  +  y    if   - x  -  y  >  sum_nn :     sum_nn  =   - x  -  y box  =   2   *   ( max_x  -  min_x  +  max_y  -  min_y ) box  -=  max_x  +  max_y  -  sum_pp box  -=  max_x  -  min_y  -  sum_pn box  -=   - min_x  +  max_y  -  sum_np box  -=   - min_x  -  min_y  -  sum_nn box  +=   4 print ( box )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pln pun pln pun pln pln pun pln pun pln pln pun pln pun pln pun pln pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pln pun pln lit kwd pun pln pun,966 ms,0 KB,50
20239130,2016-08-29 15:40:00,rpk74m,51C - Three Base Stations,Python 3,Accepted,26,148,"#!/usr/bin/env	python #-*-coding:utf-8 -*- n = int ( input ()) X = sorted ( map ( int , input (). split ())) i = 1 - n j = n - 2 s = 0 n = X [ j ]- X [ i ] while  s < n : 	l , r = X [ i ]- X [ 0 ], X [- 1 ]- X [ j ] 	 if  l < r : 		 if  n <= l : 			s = n 			 break 		i += 1 		s = l 	 else : 		 if  n <= r : 			s = n 			 break 		j -= 1 		s = r 	n = X [ j ]- X [ i ] s /= 2 print ( s ) print ( s + X [ 0 ], X [ j ]- s , X [- 1 ]- s )",com com pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln pun pln pun lit pln pun lit pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pln kwd pln pun lit pln pun pln pln kwd pun pln kwd pln pun pln pun pln pun pln pln kwd pln pun lit pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pun pln pun kwd pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun,436 ms,16400 KB,51
49335207,2019-02-01 21:07:00,pavkal5,53C - Little Frog,Python 3,Accepted,3,38,"n  =  int ( input ()) for  i  in  range ( n ):      print ( n - i // 2   if  i % 2   else  i // 2 + 1 ,  end = ' ' )",pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun lit pln kwd pln pun lit pln kwd pln pun lit pun lit pun pln pun str pun,248 ms,400 KB,53
14119622,2015-11-07 11:42:00,Eeyore,54C - First Digit Law,Python 3,Accepted,36,249,"import  math   def  get_count ( x ):      if  x  ==   0 :          return   0     y  =   10   **   ( len ( str ( x ))   -   1 )     d  =  x  //  y      if  d  ==   1 :         count  =  x  -  y  +   1      else :         count  =  y      #print(x, math.log10(x), int(math.log10(x)), y, d, count)      while  y  >   1 :         y  //=   10         count  +=  y      #print('get_count(%d) -> %d' % (x, count))      return  count   n  =  int ( input ()) total  =   [   1.0   ] for  i  in  range ( n ):     low ,  high  =  map ( int ,  input (). split ())     count  =  get_count ( high )   -  get_count ( low  -   1 )     p  =  count  /   ( high  -  low  +   1 )     new_total  =   [   0.0   for  i  in  range ( len ( total )   +   1 )   ]      for  i ,  q  in  enumerate ( total ):         new_total [ i ]   +=   ( 1   -  p )   *  q         new_total [ i  +   1 ]   +=  p  *  q     total  =  new_total       k  =  int ( input ()) result  =   1.0 for  i  in  range ( math . ceil ( n  *  k  /   100 )):     result  -=  total [ i ] #print(total) print ( result )",kwd pln pln kwd pln pun pln pun pln kwd pln pun pln lit pun pln kwd pln lit pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pln kwd pln pun pln lit pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pln com pln kwd pln pun pln lit pun pln pun pln lit pln pun pln pln com pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln lit pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pln pun pln pun pln lit pun pln pun pln pun pln pln pun pln pln pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun com kwd pun pln pun,748 ms,400 KB,54
14913841,2015-12-21 17:06:00,eddy1021,55C - Pie or die,Python 3,Accepted,8,91,"n ,  m ,  k  =  map (  int  ,  input (). split ()   ) flag  =   False while  k  >   0 :   k  -=   1   x ,  y  =  map (  int  ,  input (). split ()   )   d  =  min (  x  ,  n  -  x  +   1   ,  y  ,  m  -  y  +   1   )    if  d  <=   5 :  flag  =   True print (   ""YES""   if  flag  else   ""NO""   )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd kwd pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln lit pln pun pln kwd pln pun pln lit pun pln pun pln kwd kwd pun pln str pln kwd pln kwd pln str pln pun,124 ms,0 KB,55
21246786,2016-10-07 01:42:00,Amores,56C - Corporation Mail,Python 3,Accepted,17,138,"def  P (): 	n = a [ 0 ]; a . pop ( 0 ); d ={ n : 1 }; r = 0 	 while  a [ 0 ]!= '.' : 		a . pop ( 0 ); l , t = P (); r += l 		 for  k  in  t . keys (): 			d [ k ]= d . get ( k , 0 )+ t [ k ] 			 if  k == n : r += t [ k ] 	a . pop ( 0 ) 	 return  r , d a =[] x = '' for  i  in  input (): 	 if  i  in   ':.,' : 		 if  x : a +=[ x ] 		a +=[ i ]; x = '' 	 else : x += i print ( P ()[ 0 ])",kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pln kwd pln pun lit pun str pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pln pun pln pun str kwd pln kwd pln pun pln kwd pln kwd pln str pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun str pln kwd pun pln pun pln kwd pun pln pun lit pun,124 ms,4500 KB,56
24981836,2017-02-24 16:04:00,YazanRi,57C - Array,Python 3,Accepted,7,81,"n , a , b , M , I = int ( input ()), 1 , 1 , 1000000007 , 1000000005 for  i  in  range ( 1 , n ):   a = a * i % M a = pow ( a , I , M ) for  i  in  range ( n + 1 , n * 2 ):   b = b * i % M print ((( 2 * a * b )% M - n )% M )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln kwd pun lit pun pln pun pln pun pln pun pln pun pln pun,248 ms,4500 KB,57
23501897,2017-01-02 18:30:00,AbcFly,58C - Trees,Python 3,Accepted,6,62,"n = int ( input ()); x =[ n ]* 4 ** 9 ; a = list ( map ( int , input (). split ())) for  i  in  range ( n ):     x [ a [ i ]- min ( i , n - i - 1 )]-= 1 print ( min ( x [ 1 : 7 ** 6 ]))",pln pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pun pln pun pln pun lit pun lit pun lit pun,278 ms,13000 KB,58
21198243,2016-10-05 02:45:00,Amores,59C - Title,Python 3,Accepted,17,227,"Z = 'IMPOSSIBLE' R = range P = print I = input k = int ( I ()) s = list ( I ()) n = len ( s ) for  i  in  R ( n ): 	 if  s [ i ]== s [ n - i - 1 ]: pass 	 elif  s [ i ]== '?' : s [ i ]= s [ n - i - 1 ] 	 elif  s [ n - i - 1 ]== '?' : s [ n - i - 1 ]= s [ i ] 	 else : P ( Z ); exit () d = set ( chr ( i ) for  i  in  R ( 97 , 97 + k ) if  chr ( i )   not   in  s ) for  i  in  R ( n // 2 ,- 1 ,- 1 ): 	 if  len ( d )   and  s [ i ]== '?' : s [ i ]= s [ n - i - 1 ]= max ( d ); d . remove ( max ( d )) s = '' . join ( s ). replace ( '?' , 'a' ) P ([ Z , s ][ set ( s )== set ( chr ( i ) for  i  in  R ( 97 , 97 + k ))])",pln pun str pln pun pln pln pun kwd pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pun str pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun lit pun pln pun kwd pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun pln pun lit pun lit pun lit pun pln kwd pln pun pln pun pln kwd pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun str pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun lit pun pln pun,154 ms,0 KB,59
41570951,2018-08-14 00:38:00,prjasti,61C - Capture Valerian,Python 3,Accepted,36,243,"a ,  b  =  input (). strip (). split ( ' ' ) c  =  input () a  =  int ( a ) def  conv ( num , b ):     convStr  =   ""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ""      if  num  <  b :          return  convStr [ num ]      else :          return  conv ( num // b , b )   +  convStr [ num  %  b ]   def  write_roman ( num ):         val  =   [              1000 ,   900 ,   500 ,   400 ,              100 ,   90 ,   50 ,   40 ,              10 ,   9 ,   5 ,   4 ,              1              ]         syb  =   [              ""M"" ,   ""CM"" ,   ""D"" ,   ""CD"" ,              ""C"" ,   ""XC"" ,   ""L"" ,   ""XL"" ,              ""X"" ,   ""IX"" ,   ""V"" ,   ""IV"" ,              ""I""              ]         roman_num  =   ''         i  =   0          while   num  >   0 :              for  _  in  range ( num  //  val [ i ]):                 roman_num  +=  syb [ i ]                 num  -=  val [ i ]             i  +=   1          return  roman_num t  =  int ( c . lower (), a ) if  b  !=   'R' :    print ( conv ( t , int ( b ))) else :    print ( write_roman ( t ))  ",pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln str pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pln pun pln pun pln pun pln str pun pln str pun pln str pun pln str pun pln str pun pln str pun pln str pun pln str pun pln str pun pln str pun pln str pun pln str pun pln str pln pun pln pun pln str pln pun pln lit pln kwd pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pln pun pln pun pln pun pln pun pln pun kwd pln pun pln str pun pln kwd pun pln pun pln pun pln pun pln pun kwd pun pln kwd pun pln pun pln pun pln,109 ms,0 KB,61
76652748,2020-04-14 06:15:00,LeierKing,63C - Bulls and Cows,Python 3,Accepted,33,292,"import  sys lines  =  sys . stdin . readlines () n  =  int ( lines [ 0 ]. strip ()) query  =   [] for  i  in  range ( 1 ,  n + 1 ):      ( a ,  b ,  c )   =  lines [ i ]. strip (). split ( "" "" )     query . append (( a ,  int ( b ),  int ( c ))) def  compare ( i ):     digits  =  str ( i )     digits  =   ""0""   *( 4 - len ( digits ))   +  digits      if  len ( set ( list ( digits )))   !=   4 :   return   False      for  q  in  query :          ( a ,  b ,  c )   =  q         m ,  n  =   0 ,   0          for  i  in  range ( 4 ):              if  a [ i ]   ==  digits [ i ]:  m  +=   1          for  l  in  a :              if  l  in  digits :  n  +=   1         n  -=  m          if  m  !=  b  or  n  !=  c :              return   False      return   True res  =   0 count  =   0 for  i  in  range ( 123 ,   9877 ):      if  compare ( i ):  count  +=   1 ;  res  =  i      if  count  >=   2 :   break if  count  ==   0 :   print ( ""Incorrect data"" ) elif  count  ==   1 :     digits  =  str ( res )     digits  =   ""0""   *( 4 - len ( digits ))   +  digits      print ( digits ) else :   print ( ""Need more data"" )",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln str pln pun lit pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln lit pun pln lit pln kwd pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln lit pln pun pln pln kwd pln pun pln kwd pln pun pln pun pln kwd pln kwd pln kwd pln kwd pln pun pln lit pln pun pln lit kwd pln kwd pln pun lit pun pln lit pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pln kwd pln pun pln lit pun pln kwd kwd pln pun pln lit pun pln kwd pun str pun kwd pln pun pln lit pun pln pun pln pun pln pun pln pun pln str pln pun lit pun pln pun pln pun pln pun pln pln kwd pun pln pun kwd pun pln kwd pun str pun,248 ms,500 KB,63
7051816,2014-07-09 12:32:00,ItsLastDay,65C - Harry Potter and the Golden Snitch,Python 3,Accepted,53,443,"import  math import  functools import  sys   def  eulen ( x ,  y ):     r  =  functools . reduce ( lambda  x ,  y :  x  +  y ,  \             map ( lambda  x :   ( x [ 0 ]   -  x [ 1 ])   **   2 ,  zip ( x ,  y )))      return  math . sqrt ( r )   def  output ( t ,  p ):      print ( 'YES' )      print ( t )      print ( ' ' . join ( map ( str ,  p )))   n  =  int ( input ()) points  =   [] for  i  in  range ( n  +   1 ):     points . append ( tuple ( map ( int ,  input (). split ())))   vp ,  vs  =  map ( int ,  input (). split ()) x ,  y ,  z  =  map ( int ,  input (). split ())   curTime  =   0 for  i  in  range ( n ):     endTime  =  curTime  +  eulen ( points [ i ],  points [ i  +   1 ])   /  vs      lies_in  =   lambda  p ,  t :   ( x  -  p [ 0 ])   **   2   +   ( y  -  p [ 1 ])   **   2   +  \              ( z  -  p [ 2 ])   **   2   <=   ( t  *  vp )   **   2   +   1e-7          if  lies_in ( points [ i  +   1 ],  endTime ):          if  lies_in ( points [ i ],  curTime ):             output ( curTime ,  points [ i ])             sys . exit ( 0 )                  left ,  right  =   0 ,  endTime  -  curTime  +   1e-8         fc  =  eulen ( points [ i ],  points [ i  +   1 ])         answer  =   None          for  j  in  range ( 100 ):             mid  =   ( left  +  right )   /   2.0             endPoint  =  tuple ( \                     map ( lambda  x :  x [ 0 ]   +   ( x [ 1 ]   -  x [ 0 ])   /  fc  *  mid  *  vs ,  \                     zip ( points [ i ],  points [ i  +   1 ])))              if  lies_in ( endPoint ,  curTime  +  mid ):                 answer  =  endPoint                 right  =  mid              else :                 left  =  mid         output ( curTime  +  right ,  answer )           sys . exit ( 0 )       curTime  =  endTime   print ( 'NO' )",kwd pln kwd pln kwd pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pln pun kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pun str pun pln kwd pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pln kwd pln pun pln pun pln pun pln lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln pun pln pun pln lit pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pln pun kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln pun pln pln kwd pun pln pun pln pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pln pun pln pln kwd pun str pun,310 ms,800 KB,65
13109313,2015-09-20 06:08:00,vjudge3,66C - Petya and File System,Python 3,Accepted,13,130,"from  collections  import   * from  sys  import   *   txt  =  stdin . readlines () for  i  in  range ( len ( txt )):     txt [ i ]   =  txt [ i ][:- 1 ]. replace ( ':\\' ,   ':' ). split ( '\\' ) file  =   Counter ([ s [ 0 ]   for  s  in  txt ]) folder  =  defaultdict ( set ) for  i  in  txt :      for  j  in  range ( 2 ,  len ( i )):         folder [ i [ 0 ]]. add ( '\\' . join ( i [ 1 : j ])) print ( max ([ len ( i )   for  i  in  folder . values ()]+[ 0 ]),  max ( file . values ()))     		 		 	       	   	 		 		 	",kwd pln kwd pln pun kwd pln kwd pln pun pln pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun str pun pln str pun pln pun str pun pln pun pln typ pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun str pun pln pun pln pun lit pun pln pun kwd pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln,154 ms,900 KB,66
16947235,2016-03-26 10:43:00,MarcoXerox,69C - Game,Python 3,Accepted,25,239,"k , m , n , q  =  map ( int ,  input (). split ()) basic  =   [ input ()   for  _  in  range ( m )] from  collections  import   Counter ,  defaultdict recipes ,  accounts  =  defaultdict ( Counter ),  defaultdict ( Counter ) for  _  in  range ( n ):     composite ,  components  =  input (). split ( ': ' )      for  unit  in  components . split ( ', ' ):         x ,  y  =  unit . split ()         recipes [ composite ][ x ]   +=  int ( y ) for  _  in  range ( q ):     player ,  artifact  =  input (). split ()     p  =  int ( player )     accounts [ p ][ artifact ]   +=   1      for  composite ,  recipe  in  recipes . items ():          if  all ( num  <=  accounts [ p ][ a ]   for  a ,  num  in  recipe . items ()):              for  basic ,  num  in  recipe . items ():                 accounts [ p ][ basic ]   -=  num             accounts [ p ][ composite ]   +=   1              break for  player  in  range ( 1 ,  k + 1 ):     artifacts  =  sorted ((+ accounts [ player ]). keys ())      print ( len ( artifacts ))      for  artifact  in  artifacts :         num  =  accounts [ player ][ artifact ]          print ( artifact ,  num )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln typ pun pln pln pun pln pun pln pun typ pun pln pun typ pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln kwd pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln lit pln kwd kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun,154 ms,5200 KB,69
67958346,2019-12-30 13:34:00,Annvv,71C - Round Table Knights,Python 3,Accepted,12,96,"n = int ( input ()) lst =[* map ( int , input (). split ())] from  sys  import  exit for  i  in  range ( 3 , n + 1 ):      if  n % i == 0 :         k = n // i          for  j  in  range ( k ):             res = 'YES'              for  x  in  range ( j , n , k ):                  if  lst [ x ]== 0 : res = 'NO' ; break              if  res == 'YES' : print ( res ); exit () print ( 'NO' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pln kwd pln kwd pln pun pln pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun str pun kwd pln kwd pln pun str pun kwd pun pln pun pln pun kwd pun str pun,327 ms,2200 KB,71
53126192,2019-04-22 17:09:00,daotiennamhlvl,75C - Modified GCD,Python 3,Accepted,13,141,"a ,  b  =  map ( int ,  input (). split ()) import  math g  =  math . gcd ( a ,  b ) lis  =   [ i  for  i  in  range ( 1 ,  int ( math . sqrt ( g ))   +   1 )   if  g % i  ==   0 ] for  i  in  lis [::- 1 ]:  lis . append ( g // i ) n  =  int ( input ()) for  _  in  range ( n ):     a ,  b  =  map ( int  ,  input (). split ())      import  bisect     x  =  bisect . bisect ( lis ,  b )   -   1      if  lis [ x ]   <  a :   print (- 1 )      else :   print ( lis [ x ])         ",pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln lit pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln kwd pun lit pun pln kwd pun pln kwd pun pln pun pln pun pln,436 ms,200 KB,75
8410629,2014-10-25 15:51:00,noor148,78C - Beaver Game,Python 3,Accepted,22,140,"x = input () l = x . split () n = int ( l [ 0 ]) m = int ( l [ 1 ]) k = int ( l [ 2 ]) def  func_2 ( m , k ):      if  k == 1   and  m != 1 :          return   True     s = int ( m **. 5 )      for  i  in  range ( 2 , s + 1 ):          if   not  m % i :              if  i >= k  or  m / i >= k :                  return   True      return   False if  func_2 ( m , k ):     p = n else   :     p = 0 if  p % 2 == 0 :      print ( 'Marsel' ) else   :      print ( 'Timur' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun kwd pln pun pln pun pln pun pln kwd pln pun lit pln kwd pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln kwd pln kwd pln kwd pln kwd kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit kwd pln pun lit pun lit pun pln kwd pun str pun kwd pln pun pln kwd pun str pun,156 ms,0 KB,78
5639831,2014-01-09 01:08:00,yugle7,79C - Beaver,Python 3,Accepted,35,326,"s ,  n  =  input (),  int ( input ()) t  =   [ input ()   for  i  in  range ( n )]   def  f ( i ):      global  t      for  j  in  range ( n ):          if  i  <  j :              if  len ( t [ j ])   <  len ( t [ i ])   and  t [ j ]   in  t [ i ]:   return   False          elif  j  <  i  and  t [ j ]   in  t [ i ]:   return   False      return   True   t  =   [ t [ i ]   for  i  in  range ( n )   if  f ( i )] n  =  len ( s ) r  =   [ 0 ]   *  n   for  p  in  t :     i ,  m  =   - 1 ,  len ( p )   -   1      while   True :         i  =  s . find ( p ,  i  +   1 )          if  i  ==   - 1 :   break         r [ i ]   +=   1         r [ i  +  m ]   +=   2   d ,  j ,  q  =   0 ,   - 1 ,   [- 1 ]   for  i  in  range ( n ):      if  r [ i ]   &   1 :  q . append ( i )      if  r [ i ]   &   2 :         j  =  q . pop ( 0 )          if  i  -  j  >  d :  d ,  k  =  i  -  j ,  j   j  =  q . pop ( 0 ) if  n  -  j  >  d :  d ,  k  =  n  -  j ,  j   print ( d  -   1 ,  k  +   1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln kwd pln kwd pln pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pln kwd pln kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun pln pun pln lit pun pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln pun pln pun pln pun lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln lit pun pln pun pln lit pun,436 ms,700 KB,79
20485648,2016-09-09 22:57:00,Amores,77A - Heroes,Python 3,Accepted,35,326,"s ,  n  =  input (),  int ( input ()) t  =   [ input ()   for  i  in  range ( n )]   def  f ( i ):      global  t      for  j  in  range ( n ):          if  i  <  j :              if  len ( t [ j ])   <  len ( t [ i ])   and  t [ j ]   in  t [ i ]:   return   False          elif  j  <  i  and  t [ j ]   in  t [ i ]:   return   False      return   True   t  =   [ t [ i ]   for  i  in  range ( n )   if  f ( i )] n  =  len ( s ) r  =   [ 0 ]   *  n   for  p  in  t :     i ,  m  =   - 1 ,  len ( p )   -   1      while   True :         i  =  s . find ( p ,  i  +   1 )          if  i  ==   - 1 :   break         r [ i ]   +=   1         r [ i  +  m ]   +=   2   d ,  j ,  q  =   0 ,   - 1 ,   [- 1 ]   for  i  in  range ( n ):      if  r [ i ]   &   1 :  q . append ( i )      if  r [ i ]   &   2 :         j  =  q . pop ( 0 )          if  i  -  j  >  d :  d ,  k  =  i  -  j ,  j   j  =  q . pop ( 0 ) if  n  -  j  >  d :  d ,  k  =  n  -  j ,  j   print ( d  -   1 ,  k  +   1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln kwd pln kwd pln pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pln kwd pln kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun pln pun pln lit pun pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln pun pln pun pln pun lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln lit pun pln pun pln lit pun,186 ms,300 KB,80
52296083,2019-04-04 09:09:00,r57shell,81C - Average Score,Python 3,Accepted,25,174,"import  sys from  math  import   *   def  minp (): 	 return  sys . stdin . readline (). strip ()   def  mint (): 	 return  int ( minp ())   def  mints (): 	 return  map ( int ,  minp (). split ())   n  =  mint () a ,  b  =  mints () t  =  list ( mints ()) c  =   [ 0 ]* n for  i  in  range ( n ): 	c [ i ]   =   ( t [ i ]   if  a  !=  b  else   0 ,   - i  if  a < b  else  i ) c . sort ( reverse = a < b ) f  =   [ 0 ]* n for  i  in  range ( a ): 	f [ abs ( c [ i ][ 1 ])]   =   1 for  i  in  range ( a , a + b ): 	f [ abs ( c [ i ][ 1 ])]   =   2 print (* f )",kwd pln kwd pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln lit pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pun pln pun,716 ms,8400 KB,81
31544363,2017-10-20 23:22:00,yugle7,87A - Trains,Python 3,Accepted,25,174,"import  sys from  math  import   *   def  minp (): 	 return  sys . stdin . readline (). strip ()   def  mint (): 	 return  int ( minp ())   def  mints (): 	 return  map ( int ,  minp (). split ())   n  =  mint () a ,  b  =  mints () t  =  list ( mints ()) c  =   [ 0 ]* n for  i  in  range ( n ): 	c [ i ]   =   ( t [ i ]   if  a  !=  b  else   0 ,   - i  if  a < b  else  i ) c . sort ( reverse = a < b ) f  =   [ 0 ]* n for  i  in  range ( a ): 	f [ abs ( c [ i ][ 1 ])]   =   1 for  i  in  range ( a , a + b ): 	f [ abs ( c [ i ][ 1 ])]   =   2 print (* f )",kwd pln kwd pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln lit pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pun pln pun,124 ms,5400 KB,88
9229401,2014-12-23 05:29:00,srnth,89A - Robbery,Python 3,Accepted,25,174,"import  sys from  math  import   *   def  minp (): 	 return  sys . stdin . readline (). strip ()   def  mint (): 	 return  int ( minp ())   def  mints (): 	 return  map ( int ,  minp (). split ())   n  =  mint () a ,  b  =  mints () t  =  list ( mints ()) c  =   [ 0 ]* n for  i  in  range ( n ): 	c [ i ]   =   ( t [ i ]   if  a  !=  b  else   0 ,   - i  if  a < b  else  i ) c . sort ( reverse = a < b ) f  =   [ 0 ]* n for  i  in  range ( a ): 	f [ abs ( c [ i ][ 1 ])]   =   1 for  i  in  range ( a , a + b ): 	f [ abs ( c [ i ][ 1 ])]   =   2 print (* f )",kwd pln kwd pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln lit pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pun pln pun,124 ms,700 KB,90
5475460,2013-12-19 17:41:00,yugle7,91A - Newspaper Headline,Python 3,Accepted,25,174,"import  sys from  math  import   *   def  minp (): 	 return  sys . stdin . readline (). strip ()   def  mint (): 	 return  int ( minp ())   def  mints (): 	 return  map ( int ,  minp (). split ())   n  =  mint () a ,  b  =  mints () t  =  list ( mints ()) c  =   [ 0 ]* n for  i  in  range ( n ): 	c [ i ]   =   ( t [ i ]   if  a  !=  b  else   0 ,   - i  if  a < b  else  i ) c . sort ( reverse = a < b ) f  =   [ 0 ]* n for  i  in  range ( a ): 	f [ abs ( c [ i ][ 1 ])]   =   1 for  i  in  range ( a , a + b ): 	f [ abs ( c [ i ][ 1 ])]   =   2 print (* f )",kwd pln kwd pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln lit pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pun pln pun,1964 ms,2900 KB,92
31737820,2017-10-26 15:22:00,yugle7,93A - Frames,Python 3,Accepted,25,174,"import  sys from  math  import   *   def  minp (): 	 return  sys . stdin . readline (). strip ()   def  mint (): 	 return  int ( minp ())   def  mints (): 	 return  map ( int ,  minp (). split ())   n  =  mint () a ,  b  =  mints () t  =  list ( mints ()) c  =   [ 0 ]* n for  i  in  range ( n ): 	c [ i ]   =   ( t [ i ]   if  a  !=  b  else   0 ,   - i  if  a < b  else  i ) c . sort ( reverse = a < b ) f  =   [ 0 ]* n for  i  in  range ( a ): 	f [ abs ( c [ i ][ 1 ])]   =   1 for  i  in  range ( a , a + b ): 	f [ abs ( c [ i ][ 1 ])]   =   2 print (* f )",kwd pln kwd pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln lit pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pun pln pun,154 ms,0 KB,94
39932262,2018-07-03 21:00:00,yugle7,95C - Volleyball,Python 3,Accepted,28,284,"from  heapq  import   *   f  =   lambda :  map ( int ,  input (). split ()) inf  =   1e13   n ,  m  =  f () x ,  y  =  f () p  =   [[]   for  i  in  range ( n  +   1 )] for  j  in  range ( m ):     u ,  v ,  w  =  f ()     p [ u ]. append (( v ,  w ))     p [ v ]. append (( u ,  w )) d  =   [( 0 ,   0 )]   +   [ tuple ( f ())   for  k  in  range ( n )]   C ,  T  =   { x :   0 },   { x :   0 } h  =   [( 0 ,  x ,   0 ,   1 )] while  h :     c ,  u ,  t ,  q  =  heappop ( h )      if  u  ==  y :  exit ( print ( c ))     dt ,  dc  =  d [ u ]      if  t  <  dt  and  q :  heappush ( h ,   ( c  +  dc ,  u ,  dt ,   0 ))      for  v ,  w  in  p [ u ]:         dt  =  t  -  w          if  dt  >=   0 :              if  c  <  C . get ( v ,  inf )   or  dt  >  T . get ( v ,   - 1 ):                 C [ v ],  T [ v ]   =  c ,  dt                 heappush ( h ,   ( c ,  v ,  dt ,   1 )) print (- 1 )",kwd pln kwd pln pun pln pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln lit pun pln lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun kwd pun lit pun,280 ms,600 KB,95
7099609,2014-07-14 14:49:00,ItsLastDay,96C - Hockey,Python 3,Accepted,31,230,"n  =  int ( input ()) b  =   [] for  i  in  range ( n ):     b . append ( input ()) w  =  input () let  =  input ()   bad  =   [ False   for  i  in  range ( len ( w ))] for  i  in  range ( len ( w )):     mx  =   0      for  j  in  range ( n ):          if  w [ i :]. lower (). startswith ( b [ j ]. lower ()):             mx  =  max ( mx ,  len ( b [ j ]))      for  j  in  range ( mx ):         bad [ i  +  j ]   =   True     ans  =   '' for  i  in  range ( len ( w )):      if   not  bad [ i ]:         ans  +=  w [ i ]      else :          if  w [ i ]. lower ()   ==  let :             newlet  =   'a'   if  let  !=   'a'   else   'b'             ans  +=  newlet . lower ()   if  w [ i ]. lower ()   ==  w [ i ]   else  \                     newlet . upper ()          else :             ans  +=  let  if  w [ i ]. lower ()   ==  w [ i ]   else  let . upper ()   print ( ans )         ",pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun kwd pln kwd pln kwd pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pln pln pun pln str kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln pun pln str pln kwd pln str pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pln pun pln pun pln kwd pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pun pln pun pln,154 ms,0 KB,96
14669952,2015-12-06 02:37:00,knight-erraunt,99C - Help Victoria the Wise,Python 3,Accepted,45,318,"from  functools  import  reduce   def  factorial ( n ):      return  reduce ( lambda  x ,  y :  x * y ,  range ( 1 , n + 1 ))   colors  =   {      'R'   :   0 ,      'O'   :   0 ,      'Y'   :   0 ,      'G'   :   0 ,      'B'   :   0 ,      'V'   :   0 }   for  c  in  list ( input ()):     colors [ c ]   +=   1   amount  =  list ( reversed ( sorted ([( colors [ key ],  key )   for  key  in  colors ])))   amount  =   [ x [ 0 ]   for  x  in  amount ]   if  amount [ 0 ]   ==   6   or  amount [ 0 ]   ==   5 :      print ( ""1"" ) elif  amount [ 0 ]   ==   4 :      print ( ""2"" ) elif  amount [ 0 ]   ==   3 :      if  amount [ 1 ]   ==   3 :          print ( ""2"" )      elif  amount [ 1 ]   ==   2 :          print ( ""3"" )      elif  amount [ 1 ]   ==   1 :          print ( ""5"" ) elif  amount [ 0 ]   ==   2 :      if  amount [ 1 ]   ==  amount [ 2 ]   ==   2 :          print ( ""6"" )      elif  amount [ 1 ]   ==   2 :          print ( ""8"" )      else :          print ( factorial ( 6 )   //   48 )   elif  amount [ 0 ]   ==   1 :      print ( factorial ( 6 )   //   24 )      ",kwd pln kwd pln pln kwd pln pun pln pun pln kwd pln pun kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pln pun pln pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln kwd pln pun lit pun pln pun pln lit pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun kwd pln pun lit pun pln pun pln lit pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun kwd pln pun lit pun pln pun pln lit pun pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln lit pun pln kwd pun str pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun pln kwd pun pln kwd pun pln pun lit pun pln pun pln lit pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun pln pun lit pun pln pun pln lit pun pln pln pln,77 ms,800 KB,99
21839204,2016-10-28 08:02:00,Amores,101A - Homework,Python 3,Accepted,45,318,"from  functools  import  reduce   def  factorial ( n ):      return  reduce ( lambda  x ,  y :  x * y ,  range ( 1 , n + 1 ))   colors  =   {      'R'   :   0 ,      'O'   :   0 ,      'Y'   :   0 ,      'G'   :   0 ,      'B'   :   0 ,      'V'   :   0 }   for  c  in  list ( input ()):     colors [ c ]   +=   1   amount  =  list ( reversed ( sorted ([( colors [ key ],  key )   for  key  in  colors ])))   amount  =   [ x [ 0 ]   for  x  in  amount ]   if  amount [ 0 ]   ==   6   or  amount [ 0 ]   ==   5 :      print ( ""1"" ) elif  amount [ 0 ]   ==   4 :      print ( ""2"" ) elif  amount [ 0 ]   ==   3 :      if  amount [ 1 ]   ==   3 :          print ( ""2"" )      elif  amount [ 1 ]   ==   2 :          print ( ""3"" )      elif  amount [ 1 ]   ==   1 :          print ( ""5"" ) elif  amount [ 0 ]   ==   2 :      if  amount [ 1 ]   ==  amount [ 2 ]   ==   2 :          print ( ""6"" )      elif  amount [ 1 ]   ==   2 :          print ( ""8"" )      else :          print ( factorial ( 6 )   //   48 )   elif  amount [ 0 ]   ==   1 :      print ( factorial ( 6 )   //   24 )      ",kwd pln kwd pln pln kwd pln pun pln pun pln kwd pln pun kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pln pun pln pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln str pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln kwd pln pun lit pun pln pun pln lit pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun kwd pln pun lit pun pln pun pln lit pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun kwd pln pun lit pun pln pun pln lit pun pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln lit pun pln kwd pun str pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun pln kwd pun pln kwd pun pln pun lit pun pln pun pln lit pun pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun pln pun lit pun pln pun pln lit pun pln pln pln,124 ms,300 KB,102
28787663,2017-07-23 01:25:00,YazanRi,103C - Russian Roulette,Python 3,Accepted,6,125,"n , k , p = map ( int , input (). split ()) if  n % 2 : n , k = n - 1 , k - 1 for  i  in  range ( p ):   x = int ( input ())   z =(( k <= n // 2   and  x % 2 == 0   and  x > n - 2 * k )   or   ( k > n // 2   and ( x % 2 == 0   or   ( x > n - 2 *( k - n // 2 ))))   or   ( x > n  and  k >= 0 ))    print ([ '.' , 'X' ][ z ], end = '' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun lit pun lit pln kwd pln pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun lit pln kwd pun pln pun lit pun lit pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln kwd pun str pun str pun pln pun pln pun str pun,154 ms,4500 KB,103
11953357,2015-07-07 00:38:00,merolish,103B - Cthulhu,Python 3,Accepted,6,125,"n , k , p = map ( int , input (). split ()) if  n % 2 : n , k = n - 1 , k - 1 for  i  in  range ( p ):   x = int ( input ())   z =(( k <= n // 2   and  x % 2 == 0   and  x > n - 2 * k )   or   ( k > n // 2   and ( x % 2 == 0   or   ( x > n - 2 *( k - n // 2 ))))   or   ( x > n  and  k >= 0 ))    print ([ '.' , 'X' ][ z ], end = '' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun lit pun lit pln kwd pln pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun lit pln kwd pun pln pun lit pun lit pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln kwd pun str pun str pun pln pun pln pun str pun,122 ms,0 KB,104
7244768,2014-07-25 22:53:00,ItsLastDay,105C - Item World,Python 3,Accepted,106,900,"# written with help of failed tests def  searchBest ( iType ,  number ,  rType ,  countResidents ):      global  items ,  equipped     best  =   0     ret  =   None      for  item ,  params  in  items . items ():          if  params [ 0 ]   ==  iType :             val  =  int ( params [ number ])              if  countResidents :                  for  resid  in  equipped [ item ]:                      if  resid [ 1 ]   ==  rType :                         val  +=  int ( resid [ 2 ])              if  val  >  best :                 best  =  val                 ret  =  item      return  ret   def  printItem ( item ):      global  equipped      print ( item ,  len ( equipped [ item ]),   ' ' . join ([ x [ 0 ]   for  x  in  equipped [ item ]]))   def  searchFor ( iType ,  number ,  might ):      global  items ,  equipped ,  liesIn     pSum  =   [ 0 ]      for  x  in  might :         pSum . append ( pSum [- 1 ]   +  int ( x [ 2 ]))      while  len ( pSum )   <   11 :         pSum . append ( pSum [- 1 ])          bestVal  =   0      for  item ,  params  in  items . items ():          if  params [ 0 ]   ==  iType :             val  =  int ( params [ number ])   +  pSum [ int ( params [ 4 ])]              if  val  >  bestVal :                 bestVal  =  val        for  item ,  params  in  items . items ():          if  params [ 0 ]   ==  iType :             val  =  int ( params [ number ])   +  pSum [ int ( params [ 4 ])]              if  val  ==  bestVal :                  for  i  in  range ( min ( int ( params [ 4 ]),  len ( might ))):                     want  =  might [ i ]                     equipped [ liesIn [ want [ 0 ]]]. remove ( want )                     liesIn [ want [ 0 ]]   =  item                        if  len ( equipped [ item ])   ==  int ( params [ 4 ]):                         rm  =  equipped [ item ][ 0 ]                         liesIn [ rm [ 0 ]]   =  want [ 3 ]                         equipped [ want [ 3 ]]   =   [ rm ]   +  equipped [ want [ 3 ]]                         equipped [ item ]. remove ( rm )                     equipped [ item ]. append ( want )                                           return  item     def  rel ( item ):      global  liesIn ,  equipped ,  items      while  len ( equipped [ item ])   >  int ( items [ item ][ 4 ]):         toDelete  =  equipped [ item ][ 0 ]          for  other  in  items :              if  len ( equipped [ other ])   <  int ( items [ other ][ 4 ]):                 liesIn [ toDelete [ 0 ]]   =  other                 equipped [ other ]. append ( toDelete )                  break         equipped [ item ]   =  equipped [ item ][ 1 :]   n  =  int ( input ()) items  =  dict () equipped  =  dict () for  i  in  range ( n ):     t  =  tuple ( input (). split ())     items [ t [ 0 ]]   =  t [ 1 :]     equipped [ t [ 0 ]]   =   []   k  =  int ( input ()) residents  =   [ None   for  i  in  range ( k )] glads  =  dict () liesIn  =  dict () for  i  in  range ( k ):     residents [ i ]   =  tuple ( input (). split ())     equipped [ residents [ i ][ 3 ]]   =  equipped . get ( residents [ i ][ 3 ],   [])   +   [ residents [ i ]]     liesIn [ residents [ i ][ 0 ]]   =  residents [ i ][ 3 ]   canSwap  =   False for  name ,  val  in  equipped . items ():      if  len ( val )   <  int ( items [ name ][ 4 ]):         canSwap  =   True   if  canSwap :     glads  =  sorted ([ x  for  x  in  residents  if  x [ 1 ]   ==   'gladiator' ],  key  =   lambda  x :   - int ( x [ 2 ]))     sentries  =  sorted ([ x  for  x  in  residents  if  x [ 1 ]   ==   'sentry' ],  key  =   lambda  x :   - int ( x [ 2 ]))     phys  =  sorted ([ x  for  x  in  residents  if  x [ 1 ]   ==   'physician' ],  key  =   lambda  x :   - int ( x [ 2 ]))       wp  =  searchFor ( 'weapon' ,   1 ,  glads )     ar  =  searchFor ( 'armor' ,   2 ,  sentries )     orb  =  searchFor ( 'orb' ,   3 ,  phys )     rel ( wp )     rel ( ar )     rel ( orb )     printItem ( wp )     printItem ( ar )     printItem ( orb ) else :     printItem ( searchBest ( 'weapon' ,   1 ,   'gladiator' ,   True ))     printItem ( searchBest ( 'armor' ,   2 ,   'sentry' ,   True ))     printItem ( searchBest ( 'orb' ,   3 ,   'physician' ,   True ))",com kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pln pun pln lit pln pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pln pun pln pln kwd pln pln kwd pln pun pln pun pln kwd pln pln kwd pun pln pun pln pun pln pun pln pun pln str pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun lit pun pln pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pln pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pln pln kwd pln pun pln pun pln kwd pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pln pun pln kwd kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun lit pun pln pun pln str pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln kwd pln pun lit pun pln pun pln str pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln kwd pln pun lit pun pln pun pln str pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pln pun pln pun str pun pln lit pun pln pun pln pun pln pun str pun pln lit pun pln pun pln pun pln pun str pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun str pun pln lit pun pln str pun pln kwd pun pln pun pln pun str pun pln lit pun pln str pun pln kwd pun pln pun pln pun str pun pln lit pun pln str pun pln kwd pun,154 ms,300 KB,105
70488644,2020-02-07 11:16:00,Annvv,106C - Buns,Python 3,Accepted,12,125,"n ,  m ,  c ,  d  =  map ( int ,  input (). split ()) arr  =   [ 0 ]* 1010 for  i  in  range ( c ,  n + 1 ):     arr [ i ]   =  arr [ i - c ]   +  d for  l  in  range ( m ):     a ,  b ,  c ,  d  =  map ( int ,  input (). split ())      for  i  in  range ( 0 ,  a // b ):         j = n          while  j  >=  c :             arr [ j ]   =  max ( arr [ j ],  arr [ j - c ]   +  d )             j  -=   1 print ( arr [ n ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun,1652 ms,300 KB,106
37558710,2018-04-23 22:55:00,nowyyz,107A - Dorm Water Supply,Python 3,Accepted,12,125,"n ,  m ,  c ,  d  =  map ( int ,  input (). split ()) arr  =   [ 0 ]* 1010 for  i  in  range ( c ,  n + 1 ):     arr [ i ]   =  arr [ i - c ]   +  d for  l  in  range ( m ):     a ,  b ,  c ,  d  =  map ( int ,  input (). split ())      for  i  in  range ( 0 ,  a // b ):         j = n          while  j  >=  c :             arr [ j ]   =  max ( arr [ j ],  arr [ j - c ]   +  d )             j  -=   1 print ( arr [ n ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun,78 ms,6900 KB,108
47486950,2018-12-25 12:23:00,Silky_Littleraisin,109A - Lucky Sum of Digits,Python 3,Accepted,12,125,"n ,  m ,  c ,  d  =  map ( int ,  input (). split ()) arr  =   [ 0 ]* 1010 for  i  in  range ( c ,  n + 1 ):     arr [ i ]   =  arr [ i - c ]   +  d for  l  in  range ( m ):     a ,  b ,  c ,  d  =  map ( int ,  input (). split ())      for  i  in  range ( 0 ,  a // b ):         j = n          while  j  >=  c :             arr [ j ]   =  max ( arr [ j ],  arr [ j - c ]   +  d )             j  -=   1 print ( arr [ n ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun,248 ms,200 KB,110
20980602,2016-09-29 02:19:00,Amores,111A - Petya and Inequiations,Python 3,Accepted,12,125,"n ,  m ,  c ,  d  =  map ( int ,  input (). split ()) arr  =   [ 0 ]* 1010 for  i  in  range ( c ,  n + 1 ):     arr [ i ]   =  arr [ i - c ]   +  d for  l  in  range ( m ):     a ,  b ,  c ,  d  =  map ( int ,  input (). split ())      for  i  in  range ( 0 ,  a // b ):         j = n          while  j  >=  c :             arr [ j ]   =  max ( arr [ j ],  arr [ j - c ]   +  d )             j  -=   1 print ( arr [ n ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun,154 ms,800 KB,112
31931660,2017-10-31 22:12:00,yugle7,113A - Grammar Lessons,Python 3,Accepted,12,125,"n ,  m ,  c ,  d  =  map ( int ,  input (). split ()) arr  =   [ 0 ]* 1010 for  i  in  range ( c ,  n + 1 ):     arr [ i ]   =  arr [ i - c ]   +  d for  l  in  range ( m ):     a ,  b ,  c ,  d  =  map ( int ,  input (). split ())      for  i  in  range ( 0 ,  a // b ):         j = n          while  j  >=  c :             arr [ j ]   =  max ( arr [ j ],  arr [ j - c ]   +  d )             j  -=   1 print ( arr [ n ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun,156 ms,700 KB,114
40169483,2018-07-10 14:44:00,Yath230799,115A - Party,Python 3,Accepted,12,125,"n ,  m ,  c ,  d  =  map ( int ,  input (). split ()) arr  =   [ 0 ]* 1010 for  i  in  range ( c ,  n + 1 ):     arr [ i ]   =  arr [ i - c ]   +  d for  l  in  range ( m ):     a ,  b ,  c ,  d  =  map ( int ,  input (). split ())      for  i  in  range ( 0 ,  a // b ):         j = n          while  j  >=  c :             arr [ j ]   =  max ( arr [ j ],  arr [ j - c ]   +  d )             j  -=   1 print ( arr [ n ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun,1434 ms,0 KB,116
21732317,2016-10-24 06:07:00,Amores,120C - Winnie-the-Pooh and honey,Python 3,Accepted,6,63,"import  sys sys . stdin = open ( 'input.txt' ,   'r' ) sys . stdout = open ( 'output.txt' ,   'w' ) I = lambda : map ( int , input (). split ()) n , k = I () print ( sum ( max ( x % k , x - 3 * k ) for  x  in  I ()))",kwd pln pln pun pln pun pln pun str pun pln str pun pln pun pln pun pln pun str pun pln str pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun kwd pln kwd pln pun,154 ms,0 KB,120
5184084,2013-11-21 14:42:00,TsunamiNoLetGo,121C - Lucky Permutation,Python 3,Accepted,71,508,"def  lucky ( x ):     s = str ( x )      return  s . count ( '4' )+ s . count ( '7' )== len ( s )   def   Gen_lucky ( n ):      if ( len ( n )== 1 ):          if ( n < ""4"" ):              return   0          if ( n < ""7"" ):              return   1          return   2     s = str ( n )      if ( s [ 0 ]< '4' ):          return   0      if ( s [ 0 ]== '4' ):          return   Gen_lucky ( s [ 1 :])      if ( s [ 0 ]< '7' ):          return   2 **( len ( s )- 1 )      if ( s [ 0 ]== '7' ):          return   2 **( len ( s )- 1 )+ Gen_lucky ( s [ 1 :])      else :          return   2 ** len ( s )            def   Form ( X , k ):      if ( k == 0 ):          return  X      for  i  in  range ( len ( X )):          if ( k >= F [ len ( X )- i - 1 ]):             h = k // F [ len ( X )- i - 1 ]             r = k % F [ len ( X )- i - 1 ]             G = list ( X [ i + 1 :])             G . remove ( X [ i + h ])             G =[ X [ i ]]+ G              return   Form ( X [: i ]+[ X [ i + h ]]+ G , r )   p = 1   F =[ 1 ] i = 1 while ( p <= 10 ** 15 ):     p *= i     F . append ( p )     i += 1   n , k = map ( int , input (). split ())          if ( n <= 14 ):      if ( k > F [ n ]):          print (- 1 )      else :         L = Form ( list ( range ( 1 , n + 1 )), k - 1 )         x = 0          for  i  in  range ( n ):              if ( lucky ( i + 1 )   and  lucky ( L [ i ])):                 x += 1          print ( x ) else :     L = Form ( list ( range ( n - 14 , n + 1 )), k - 1 )     ss = str ( n - 15 )     x = 0      for  i  in  range ( 1 , len ( ss )):         x += 2 ** i     x += Gen_lucky ( ss )      for  i  in  range ( n - 14 , n + 1 ):          if ( lucky ( L [ i - n + 14 ])   and  lucky ( i )):             x += 1      print ( x )        ",kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun str pun pln pun pln pun str pun pln pun pln pun pln kwd pln typ pun pln pun pln kwd pun pln pun pln pun lit pun pln kwd pun pln pun str pun pln kwd pln lit pln kwd pun pln pun str pun pln kwd pln lit pln kwd pln lit pln pun pln pun pln pun pln kwd pun pln pun lit pun str pun pln kwd pln lit pln kwd pun pln pun lit pun str pun pln kwd pln typ pun pln pun lit pun pln kwd pun pln pun lit pun str pun pln kwd pln lit pun pln pun pln pun lit pun pln kwd pun pln pun lit pun str pun pln kwd pln lit pun pln pun pln pun lit pun typ pun pln pun lit pun pln kwd pun pln kwd pln lit pun pln pun pln pun pln pln kwd pln typ pun pln pun pln pun pln kwd pun pln pun lit pun pln kwd pln pln kwd pln kwd pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln typ pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit pln pln pun lit pun pln pun lit kwd pun pln pun lit pun lit pun pln pun pln pln pun pln pun pln pun pln pun lit pln pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln kwd pun pln pun lit pun pln kwd pun pln pun pln pun pln pun pln kwd pun lit pun pln kwd pun pln pun typ pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pln kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun lit pln kwd pun pln pun kwd pun pln pun typ pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun lit pun pln pln pun typ pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun lit pun pln kwd pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pln kwd pun pln pun pln,124 ms,0 KB,121
54175336,2019-05-15 16:39:00,MajAK,121A - Lucky Sum,Python 3,Accepted,71,508,"def  lucky ( x ):     s = str ( x )      return  s . count ( '4' )+ s . count ( '7' )== len ( s )   def   Gen_lucky ( n ):      if ( len ( n )== 1 ):          if ( n < ""4"" ):              return   0          if ( n < ""7"" ):              return   1          return   2     s = str ( n )      if ( s [ 0 ]< '4' ):          return   0      if ( s [ 0 ]== '4' ):          return   Gen_lucky ( s [ 1 :])      if ( s [ 0 ]< '7' ):          return   2 **( len ( s )- 1 )      if ( s [ 0 ]== '7' ):          return   2 **( len ( s )- 1 )+ Gen_lucky ( s [ 1 :])      else :          return   2 ** len ( s )            def   Form ( X , k ):      if ( k == 0 ):          return  X      for  i  in  range ( len ( X )):          if ( k >= F [ len ( X )- i - 1 ]):             h = k // F [ len ( X )- i - 1 ]             r = k % F [ len ( X )- i - 1 ]             G = list ( X [ i + 1 :])             G . remove ( X [ i + h ])             G =[ X [ i ]]+ G              return   Form ( X [: i ]+[ X [ i + h ]]+ G , r )   p = 1   F =[ 1 ] i = 1 while ( p <= 10 ** 15 ):     p *= i     F . append ( p )     i += 1   n , k = map ( int , input (). split ())          if ( n <= 14 ):      if ( k > F [ n ]):          print (- 1 )      else :         L = Form ( list ( range ( 1 , n + 1 )), k - 1 )         x = 0          for  i  in  range ( n ):              if ( lucky ( i + 1 )   and  lucky ( L [ i ])):                 x += 1          print ( x ) else :     L = Form ( list ( range ( n - 14 , n + 1 )), k - 1 )     ss = str ( n - 15 )     x = 0      for  i  in  range ( 1 , len ( ss )):         x += 2 ** i     x += Gen_lucky ( ss )      for  i  in  range ( n - 14 , n + 1 ):          if ( lucky ( L [ i - n + 14 ])   and  lucky ( i )):             x += 1      print ( x )        ",kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun str pun pln pun pln pun str pun pln pun pln pun pln kwd pln typ pun pln pun pln kwd pun pln pun pln pun lit pun pln kwd pun pln pun str pun pln kwd pln lit pln kwd pun pln pun str pun pln kwd pln lit pln kwd pln lit pln pun pln pun pln pun pln kwd pun pln pun lit pun str pun pln kwd pln lit pln kwd pun pln pun lit pun str pun pln kwd pln typ pun pln pun lit pun pln kwd pun pln pun lit pun str pun pln kwd pln lit pun pln pun pln pun lit pun pln kwd pun pln pun lit pun str pun pln kwd pln lit pun pln pun pln pun lit pun typ pun pln pun lit pun pln kwd pun pln kwd pln lit pun pln pun pln pun pln pln kwd pln typ pun pln pun pln pun pln kwd pun pln pun lit pun pln kwd pln pln kwd pln kwd pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln typ pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit pln pln pun lit pun pln pun lit kwd pun pln pun lit pun lit pun pln pun pln pln pun pln pun pln pun pln pun lit pln pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln kwd pun pln pun lit pun pln kwd pun pln pun pln pun pln pun pln kwd pun lit pun pln kwd pun pln pun typ pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pln kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun lit pln kwd pun pln pun kwd pun pln pun typ pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun lit pun pln pln pun typ pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun lit pun pln kwd pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pln kwd pun pln pun pln,109 ms,300 KB,122
46992156,2018-12-14 08:32:00,vjudge1,123A - Prime Permutation,Python 3,Accepted,71,508,"def  lucky ( x ):     s = str ( x )      return  s . count ( '4' )+ s . count ( '7' )== len ( s )   def   Gen_lucky ( n ):      if ( len ( n )== 1 ):          if ( n < ""4"" ):              return   0          if ( n < ""7"" ):              return   1          return   2     s = str ( n )      if ( s [ 0 ]< '4' ):          return   0      if ( s [ 0 ]== '4' ):          return   Gen_lucky ( s [ 1 :])      if ( s [ 0 ]< '7' ):          return   2 **( len ( s )- 1 )      if ( s [ 0 ]== '7' ):          return   2 **( len ( s )- 1 )+ Gen_lucky ( s [ 1 :])      else :          return   2 ** len ( s )            def   Form ( X , k ):      if ( k == 0 ):          return  X      for  i  in  range ( len ( X )):          if ( k >= F [ len ( X )- i - 1 ]):             h = k // F [ len ( X )- i - 1 ]             r = k % F [ len ( X )- i - 1 ]             G = list ( X [ i + 1 :])             G . remove ( X [ i + h ])             G =[ X [ i ]]+ G              return   Form ( X [: i ]+[ X [ i + h ]]+ G , r )   p = 1   F =[ 1 ] i = 1 while ( p <= 10 ** 15 ):     p *= i     F . append ( p )     i += 1   n , k = map ( int , input (). split ())          if ( n <= 14 ):      if ( k > F [ n ]):          print (- 1 )      else :         L = Form ( list ( range ( 1 , n + 1 )), k - 1 )         x = 0          for  i  in  range ( n ):              if ( lucky ( i + 1 )   and  lucky ( L [ i ])):                 x += 1          print ( x ) else :     L = Form ( list ( range ( n - 14 , n + 1 )), k - 1 )     ss = str ( n - 15 )     x = 0      for  i  in  range ( 1 , len ( ss )):         x += 2 ** i     x += Gen_lucky ( ss )      for  i  in  range ( n - 14 , n + 1 ):          if ( lucky ( L [ i - n + 14 ])   and  lucky ( i )):             x += 1      print ( x )        ",kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun str pun pln pun pln pun str pun pln pun pln pun pln kwd pln typ pun pln pun pln kwd pun pln pun pln pun lit pun pln kwd pun pln pun str pun pln kwd pln lit pln kwd pun pln pun str pun pln kwd pln lit pln kwd pln lit pln pun pln pun pln pun pln kwd pun pln pun lit pun str pun pln kwd pln lit pln kwd pun pln pun lit pun str pun pln kwd pln typ pun pln pun lit pun pln kwd pun pln pun lit pun str pun pln kwd pln lit pun pln pun pln pun lit pun pln kwd pun pln pun lit pun str pun pln kwd pln lit pun pln pun pln pun lit pun typ pun pln pun lit pun pln kwd pun pln kwd pln lit pun pln pun pln pun pln pln kwd pln typ pun pln pun pln pun pln kwd pun pln pun lit pun pln kwd pln pln kwd pln kwd pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln typ pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit pln pln pun lit pun pln pun lit kwd pun pln pun lit pun lit pun pln pun pln pln pun pln pun pln pun pln pun lit pln pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln kwd pun pln pun lit pun pln kwd pun pln pun pln pun pln pun pln kwd pun lit pun pln kwd pun pln pun typ pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pln kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun lit pln kwd pun pln pun kwd pun pln pun typ pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun lit pun pln pln pun typ pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun lit pun pln kwd pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pln kwd pun pln pun pln,280 ms,200 KB,124
48288501,2019-01-12 14:45:00,spellstaker,125C - Hobbits' Party,Python 3,Accepted,15,120,n  =  int ( input ()) d  =  int ( 0.5   +   ( 1   +   8 * n )** 0.5   /   2 ) curr  =   1 res  =   [[]   for  _  in  range ( d )]   for  i  in  range ( d ):     j  =  i  +   1      while  len ( res [ i ])   <  d  -   1 :         res [ i ]. append ( str ( curr ))         res [ j ]. append ( str ( curr ))         curr  +=   1         j  +=   1 print ( d ) for  l  in  res :      print ( ' ' . join ( l )),pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun lit pln pun pln lit pun pln pun lit pln pun pln lit pun pln pun pln lit pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit kwd pun pln pun kwd pln kwd pln pun pln kwd pun str pun pln pun pln pun,248 ms,900 KB,125
32157201,2017-11-09 15:13:00,yugle7,128C - Games with Rectangle,Python 3,Accepted,4,90,"from  math  import   * n ,  m ,  k  =  map ( int ,  input (). split ()) c  =   lambda  n ,  k :   0   if  k  >  n  else  factorial ( n )   //   ( factorial ( k )   *  factorial ( n  -  k )) print ( c ( n  -   1 ,   2   *  k )   *  c ( m  -   1 ,   2   *  k )   %   1000000007 )",kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln lit pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pln pun pln pun pln pun pln lit pun,77 ms,0 KB,128
15913650,2016-02-09 16:22:00,not_bot_but_POT,128A - Statues,Python 3,Accepted,4,90,"from  math  import   * n ,  m ,  k  =  map ( int ,  input (). split ()) c  =   lambda  n ,  k :   0   if  k  >  n  else  factorial ( n )   //   ( factorial ( k )   *  factorial ( n  -  k )) print ( c ( n  -   1 ,   2   *  k )   *  c ( m  -   1 ,   2   *  k )   %   1000000007 )",kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln lit pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pln pun pln pun pln pun pln lit pun,124 ms,0 KB,129
22651336,2016-12-02 07:05:00,Mr.Hitch,131C - The World is a Theatre,Python 3,Accepted,3,77,"from  math  import  factorial  as  f n , m , t = map ( int , input (). split ()) print ( sum ( f ( n )* f ( m )// f ( i )// f ( n - i )// f ( t - i )// f ( m - t + i ) for  i  in  range ( max ( 4 , t - m ), min ( n + 1 , t ))))",kwd pln kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun,124 ms,0 KB,131
31917549,2017-10-31 13:33:00,yugle7,132C - Logo Turtle,Python 3,Accepted,13,208,"s  =  input () n  =  int ( input ())   l ,  r  =   [- 1e9 ]   *   101 ,   [- 1e9 ]   *   101 l [ 0 ]   =  r [ 0 ]   =   0   for  q  in  s :      for  j  in  range ( n ,   - 1 ,   - 1 ):         x  =  max ( r [ j ],  l [ j  -   1 ]   +   1 )   if  q  ==   'T'   else  max ( l [ j ]   +   1 ,  r [ j  -   1 ])         y  =  max ( l [ j ],  r [ j  -   1 ]   +   1 )   if  q  ==   'T'   else  max ( r [ j ]   -   1 ,  l [ j  -   1 ])         l [ j ],  r [ j ]   =  x ,  y   print ( max ( l [ n  %   2 : n  +   1 : 2 ]   +  r [ n  %   2 : n  +   1 : 2 ]))",pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln pun pln lit pun pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pun pln str pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pun pln str pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun lit pun,124 ms,0 KB,132
76281204,2020-04-12 06:21:00,heronry,132A - Turing Tape,Python 3,Accepted,13,208,"s  =  input () n  =  int ( input ())   l ,  r  =   [- 1e9 ]   *   101 ,   [- 1e9 ]   *   101 l [ 0 ]   =  r [ 0 ]   =   0   for  q  in  s :      for  j  in  range ( n ,   - 1 ,   - 1 ):         x  =  max ( r [ j ],  l [ j  -   1 ]   +   1 )   if  q  ==   'T'   else  max ( l [ j ]   +   1 ,  r [ j  -   1 ])         y  =  max ( l [ j ],  r [ j  -   1 ]   +   1 )   if  q  ==   'T'   else  max ( r [ j ]   -   1 ,  l [ j  -   1 ])         l [ j ],  r [ j ]   =  x ,  y   print ( max ( l [ n  %   2 : n  +   1 : 2 ]   +  r [ n  %   2 : n  +   1 : 2 ]))",pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln pun pln lit pun pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pun pln str pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pun pln str pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun lit pun,248 ms,0 KB,133
43638788,2018-10-01 13:09:00,lckcode,135C - Zero-One,Python 3,Accepted,27,151,"s  =  input ()   a ,  b ,  c  =   ( s . count ( x )   for  x  in   ""01?"" )   # print(""{} {} {}"".format(a, b, c))   if ( a  +  c  >  b ):      print ( ""00"" ) if ( a  +  c  +   2   >  b  >=  a  -  c ):      if ( s [- 1 ]   !=   '?' ):          if ( s [- 1 ]   ==   '0' ):              print ( '10' )          else :              print ( '01' )      else :          if ( a  +  c  >  b ):              print ( ""01"" )          if ( b  +  c  >  a  +   1 ):              print ( ""10"" )   if ( b  +  c  >  a  +   1 ):      print ( ""11"" )          ",pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln str pun pln com pln kwd pun pln pun pln pun pln pun pln kwd pun str pun kwd pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln kwd pun pln pun lit pun pln pun pln str pun pln kwd pun pln pun lit pun pln pun pln str pun pln kwd pun str pun pln kwd pun pln kwd pun str pun pln kwd pun pln kwd pun pln pun pln pun pln pun pln kwd pun str pun pln kwd pun pln pun pln pun pln pun pln lit pun pln kwd pun str pun pln kwd pun pln pun pln pun pln pun pln lit pun pln kwd pun str pun pln pln pln pln pln,248 ms,200 KB,135
63433217,2019-10-26 12:45:00,KATAYPEPE,135A - Replacement,Python 3,Accepted,27,151,"s  =  input ()   a ,  b ,  c  =   ( s . count ( x )   for  x  in   ""01?"" )   # print(""{} {} {}"".format(a, b, c))   if ( a  +  c  >  b ):      print ( ""00"" ) if ( a  +  c  +   2   >  b  >=  a  -  c ):      if ( s [- 1 ]   !=   '?' ):          if ( s [- 1 ]   ==   '0' ):              print ( '10' )          else :              print ( '01' )      else :          if ( a  +  c  >  b ):              print ( ""01"" )          if ( b  +  c  >  a  +   1 ):              print ( ""10"" )   if ( b  +  c  >  a  +   1 ):      print ( ""11"" )          ",pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln str pun pln com pln kwd pun pln pun pln pun pln pun pln kwd pun str pun kwd pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln kwd pun pln pun lit pun pln pun pln str pun pln kwd pun pln pun lit pun pln pun pln str pun pln kwd pun str pun pln kwd pun pln kwd pun str pun pln kwd pun pln kwd pun pln pun pln pun pln pun pln kwd pun str pun pln kwd pun pln pun pln pun pln pun pln lit pun pln kwd pun str pun pln kwd pun pln pun pln pun pln pun pln lit pun pln kwd pun str pun pln pln pln pln pln,684 ms,8000 KB,136
27226089,2017-05-20 04:09:00,bigdataman,137C - History,Python 3,Accepted,7,67,"t  =   [ tuple ( map ( int ,  input (). split ()))   for  i  in  range ( int ( input ()))] t . sort () c ,  s  =   0 ,   0 for  a ,  b  in  t :      if  b  <  c :  s  +=   1      if  b  >  c :  c  =  b print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pun pln pun,996 ms,8200 KB,137
14828568,2015-12-16 04:06:00,merolish,138A - Literature Lesson,Python 3,Accepted,7,67,"t  =   [ tuple ( map ( int ,  input (). split ()))   for  i  in  range ( int ( input ()))] t . sort () c ,  s  =   0 ,   0 for  a ,  b  in  t :      if  b  <  c :  s  +=   1      if  b  >  c :  c  =  b print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pun pln pun,154 ms,0 KB,139
8067790,2014-10-03 15:18:00,manhhomienbienthuy,140C - New Year Snowmen,Python 3,Accepted,25,196,"#!/usr/bin/env python3 from  heapq  import   * from  collections  import  defaultdict   n  =  int ( input ()) r  =  map ( int ,  input (). split ()) H  =  defaultdict ( int ) for  t  in  r :     H [ t ]   +=   1   D  =   [(- 1   *  v ,  k )   for  k ,  v  in  H . items ()] heapify ( D ) ret  =   [] while  len ( D )   >   2 :     a ,  b ,  c  =  heappop ( D ),  heappop ( D ),  heappop ( D )       ret . append ( sorted ([ a [ 1 ],  b [ 1 ],  c [ 1 ]],  reverse = True ))        for  x ,  xi  in   (( i  +   1 ,  j )   for  i ,  j  in   ( a ,  b ,  c )):          if  x :             heappush ( D ,   ( x ,  xi ))   print ( len ( ret )) for  a ,  b ,  c  in  ret :      print ( a ,  b ,  c )",com kwd pln kwd pln pun kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun lit pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun kwd pun pln pln kwd pln pun pln kwd pln pun pln pun pln lit pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun kwd pln pun pln pun pln kwd pln pun pln kwd pun pln pun pln pun pln pun,1684 ms,11900 KB,140
47529859,2018-12-26 21:12:00,_aurora_#,141C - Queue,Python 3,Accepted,15,114,"n  =  int ( input ()) a  =   [] for  _  in  range ( n ):     x  =  input (). split ()     a . append (( x [ 0 ],  int ( x [ 1 ]))) a . sort ( key = lambda  x :  x [ 1 ]) ans  =   [] for  x  in  a :      if  x [ 1 ]   >  len ( ans ):          print (- 1 )         exit ()     ans . insert ( x [ 1 ],   ( x [ 0 ],  n ))     n  -=   1 for  x  in  ans :      print ( x [ 0 ],  x [ 1 ])",pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln pun kwd pln kwd pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln kwd pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln lit kwd pln kwd pln pun pln kwd pun pln pun lit pun pln pun lit pun,278 ms,900 KB,141
5480875,2013-12-20 17:15:00,yugle7,142A - Help Farmer,Python 3,Accepted,15,114,"n  =  int ( input ()) a  =   [] for  _  in  range ( n ):     x  =  input (). split ()     a . append (( x [ 0 ],  int ( x [ 1 ]))) a . sort ( key = lambda  x :  x [ 1 ]) ans  =   [] for  x  in  a :      if  x [ 1 ]   >  len ( ans ):          print (- 1 )         exit ()     ans . insert ( x [ 1 ],   ( x [ 0 ],  n ))     n  -=   1 for  x  in  ans :      print ( x [ 0 ],  x [ 1 ])",pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln pun kwd pln kwd pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln kwd pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln lit kwd pln kwd pln pun pln kwd pun pln pun lit pun pln pun lit pun,312 ms,100 KB,143
4098429,2013-07-18 13:45:00,fish_ball,144C - Anagram Search,Python 3,Accepted,22,169,"s  =  input ()   +   '?' p  =  input ()   cnt  =   0   d  =   [ 0 ]   *   26   for  c  in  p :  d [ ord ( c )- 97 ]   +=   1   for  c  in  s [ 0 : len ( p )]:      if  c  !=   '?' :         d [ ord ( c )- 97 ]   -=   1   for  k  in  range ( len ( p ),  len ( s )):      if  min ( d )   >=   0 :         cnt  +=   1      if  s [ k ]   !=   '?' :         d [ ord ( s [ k ])- 97 ]   -=   1      if  s [ k - len ( p )]   !=   '?' :         d [ ord ( s [ k - len ( p )])- 97 ]   +=   1   print ( cnt )",pln pun pln pun pln pun pln str pln pun pln pun pln pln pun pln lit pln pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun pln pun pln kwd pln pun pln str pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln lit pln kwd pln pun pln pun pln pun pln str pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln str pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pun pln pun,405 ms,400 KB,144
19832117,2016-08-12 18:42:00,Amores,145A - Lucky Conversion,Python 3,Accepted,22,169,"s  =  input ()   +   '?' p  =  input ()   cnt  =   0   d  =   [ 0 ]   *   26   for  c  in  p :  d [ ord ( c )- 97 ]   +=   1   for  c  in  s [ 0 : len ( p )]:      if  c  !=   '?' :         d [ ord ( c )- 97 ]   -=   1   for  k  in  range ( len ( p ),  len ( s )):      if  min ( d )   >=   0 :         cnt  +=   1      if  s [ k ]   !=   '?' :         d [ ord ( s [ k ])- 97 ]   -=   1      if  s [ k - len ( p )]   !=   '?' :         d [ ord ( s [ k - len ( p )])- 97 ]   +=   1   print ( cnt )",pln pun pln pun pln pun pln str pln pun pln pun pln pln pun pln lit pln pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun pln pun pln kwd pln pun pln str pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln lit pln kwd pln pun pln pun pln pun pln str pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln str pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pun pln pun,156 ms,4900 KB,146
5121028,2013-11-15 22:25:00,yugle7,148C - Terse princess,Python 3,Accepted,9,169,"n ,  b ,  a  =  map ( int ,  input (). split ()) c  =  n  -  a  -  b  -   1 if  c  <   0 :   print ( '-1' ) elif  a :     d  =   ( 1   <<  a )      print ( '1' ,   ' ' . join ( str ( 2   <<  i )   for  i  in  range ( a )),   ' ' . join ( map ( str ,  range ( d  +   1 ,  d  +  b  +   1 ))),   ( str ( d  +  b )   +   ' ' )   *  c ) elif  b  <  n  -   1 :   print ( '1 '   *   ( c  +   1 )   +   ' ' . join ( map ( str ,  range ( 2 ,   2   +  b )))) elif  b :   print ( '-1' ) else :   print ( '1' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln pun pln lit pun pln kwd pun str pun kwd pln pun pln pun pln pun lit pln pun pln pun pln kwd pun str pun pln str pun pln pun pln pun lit pln pun pln pun pln kwd pln kwd pln pun pln pun pln str pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln str pun pln pun pln pun kwd pln pun pln pun pln lit pun pln kwd pun str pln pun pln pun pln pun pln lit pun pln pun pln str pun pln pun pln pun pln pun pln pun lit pun pln lit pln pun pln pun kwd pln pun pln kwd pun str pun kwd pun pln kwd pun str pun,92 ms,0 KB,148
55957161,2019-06-23 10:43:00,Mohamed_Ayman,149C - Division into Teams,Python 3,Accepted,9,92,"n  =  int ( input ()) arr  =  sorted ([( int ( x ),  i )   for  i ,  x  in  enumerate ( input (). split ())]) print (( len ( arr )+ 1 )// 2 ) for  i  in  arr [:: 2 ]:        print ( i [ 1 ]+ 1 ,  end = ' ' ) print () print ( len ( arr )// 2 ) for  i  in  arr [ 1 :: 2 ]:        print ( i [ 1 ]+ 1 ,  end = ' ' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun kwd pun pln pun pln pun lit pun lit pun kwd pln kwd pln pun lit pun pln pln kwd pun pln pun lit pun lit pun pln pun str pun kwd pun kwd pun pln pun pln pun lit pun kwd pln kwd pln pun lit pun lit pun pln pln kwd pun pln pun lit pun lit pun pln pun str pun,778 ms,12400 KB,149
31004163,2017-10-05 01:40:00,Eva,150A - Win or Freeze,Python 3,Accepted,9,92,"n  =  int ( input ()) arr  =  sorted ([( int ( x ),  i )   for  i ,  x  in  enumerate ( input (). split ())]) print (( len ( arr )+ 1 )// 2 ) for  i  in  arr [:: 2 ]:        print ( i [ 1 ]+ 1 ,  end = ' ' ) print () print ( len ( arr )// 2 ) for  i  in  arr [ 1 :: 2 ]:        print ( i [ 1 ]+ 1 ,  end = ' ' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun kwd pun pln pun pln pun lit pun lit pun kwd pln kwd pln pun lit pun pln pln kwd pun pln pun lit pun lit pun pln pun str pun kwd pun kwd pun pln pun pln pun lit pun kwd pln kwd pln pun lit pun lit pun pln pln kwd pun pln pun lit pun lit pun pln pun str pun,1606 ms,0 KB,151
3905060,2013-06-16 16:16:00,nab,152C - Pocket Book,Python 3,Accepted,5,49,"R = input n , m = map ( int , R (). split ()) r = 1 for  z  in  zip (* map ( R , "" "" * n )): r *= len ( set ( z )) print ( r %( 10 ** 9 + 7 ))",pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit pun lit pun lit pun,93 ms,100 KB,152
5544564,2013-12-29 00:03:00,yugle7,154A - Hometask,Python 3,Accepted,5,49,"R = input n , m = map ( int , R (). split ()) r = 1 for  z  in  zip (* map ( R , "" "" * n )): r *= len ( set ( z )) print ( r %( 10 ** 9 + 7 ))",pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit pun lit pun lit pun,248 ms,500 KB,155
40286376,2018-07-13 19:00:00,yugle7,156C - Cipher,Python 3,Accepted,13,163,"S ,  N  =   2501 ,   101 m  =   1000000007 k  =   26 p  =   [[ 0 ]   *   ( S  +  k )   for  i  in  range ( N )] p [ 0 ][ 0 ]   =   1 for  n  in  range ( 1 ,  N ):      for  s  in  range ( S ):         p [ n ][ s ]   =   ( p [ n ][ s  -   1 ]   +  p [ n  -   1 ][ s ]   -  p [ n  -   1 ][ s  -  k ])   %  m r  =   [] for  j  in  range ( int ( input ())):     t  =  input ()     s  =  sum ( ord ( q )   -   97   for  q  in  t )      print ( p [ len ( t )][ s ]   -   1 )",pln pun pln pun pln lit pun pln lit pln pun pln lit pln pun pln lit pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun lit pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pun,1214 ms,3200 KB,156
5359494,2013-12-06 13:41:00,yugle7,156A - Message,Python 3,Accepted,13,163,"S ,  N  =   2501 ,   101 m  =   1000000007 k  =   26 p  =   [[ 0 ]   *   ( S  +  k )   for  i  in  range ( N )] p [ 0 ][ 0 ]   =   1 for  n  in  range ( 1 ,  N ):      for  s  in  range ( S ):         p [ n ][ s ]   =   ( p [ n ][ s  -   1 ]   +  p [ n  -   1 ][ s ]   -  p [ n  -   1 ][ s  -  k ])   %  m r  =   [] for  j  in  range ( int ( input ())):     t  =  input ()     s  =  sum ( ord ( q )   -   97   for  q  in  t )      print ( p [ len ( t )][ s ]   -   1 )",pln pun pln pun pln lit pun pln lit pln pun pln lit pln pun pln lit pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun lit pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pun,1278 ms,100 KB,157
19470510,2016-07-29 04:54:00,Amores,158C - Cd and pwd commands,Python 3,Accepted,10,90,"d = """" for  _  in  range ( int ( input ())):     s = input ()      if  s == ""pwd"" : print ( d + ""/"" )      else :         s = s . split ()[- 1 ]          if  s [ 0 ]== ""/"" : s , d = s [ 1 :], """"          for  x  in  s . split ( ""/"" ):              if  x == "".."" : d = d [: d . rfind ( ""/"" )]              else : d += ""/"" + x",pln pun str kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun str pun kwd pun pln pun str pun pln kwd pun pln pun pln pun pln pun lit pun pln kwd pln pun lit pun str pun pln pun pln pun pln pun lit pun str pln kwd pln kwd pln pun pln pun str pun pln kwd pln pun str pun pln pun pln pun pln pun pln pun str pun pln kwd pun pln pun str pun pln,124 ms,0 KB,158
4906935,2013-10-27 00:03:00,yugle7,159C - String Manipulation 1.0,Python 3,Accepted,16,147,"n  =  int ( input ()) t  =  input () l  =  len ( t ) m  =  int ( input ())   q  =   { c :   []   for  c  in   'abcdefghijklmnopqrstuvwxyz' } for  j ,  c  in  enumerate ( t ):     q [ c ]. append ( j ) q  =   { c :   [ i  +  j  for  i  in  range ( 0 ,  n  *  l ,  l )   for  j  in  q [ c ]]   for  c  in  q } t  =  n  *  list ( t ) for  i  in  range ( m ):     j ,  c  =  input (). split ()     t [ q [ c ]. pop ( int ( j )   -   1 )]   =   ''   print ( '' . join ( t ))         ",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln kwd pln kwd pln str pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln str pln kwd pun str pun pln pun pln pun pln,1622 ms,7300 KB,159
14787082,2015-12-13 18:41:00,merolish,160C - Find Pair,Python 3,Accepted,6,79,"n ,  k  =  map ( int ,  input (). split ()) a  =  sorted ( map ( int ,  input (). split ())) x  =  a [( k  -   1 )   //  n ] p ,  c  =  a . index ( x ),  a . count ( x ) y  =   (( k  -   1 )   -  p  *  n )   //  c print ( x ,  a [ y ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun,372 ms,8300 KB,160
25586910,2017-03-18 04:30:00,vjudge4,161C - Abracadabra,Python 3,Accepted,41,409,"aaa  = 0   def  f ( l1 , r1 , l2 , r2 , top ):    global  aaa    if   ( l1 > r1  or  l2 >   r2 ):      return   0    if   ( top - 1 <= aaa )   or   ( r1 - l1 + 1 <= aaa )   or   ( r2 - l2 + 1 <= aaa ):      return   0    if  top == 2 :      return   1    if   ( l1 > top ):     l1  -= top     r1  -=  top    if   ( l2 > top ):     l2 -= top     r2 -= top    #print(l1,r1,l2,r2,top)    if   ( l1 == l2  and  r1 == r2 ):      return  r1 - l1 + 1    if   ( l1 == 0   and  r1 == top - 1 ):      return  r2 - l2 + 1    if   ( l2 == 0   and  r2 == top - 1 ):      return  r1 - l1 + 1    if   (   ( l1 <=  l2  and  l2 <=  r1 )   or   ( l2 <=  l1  and  l1 <=  r2 )):     ans  =   min ( r1 , r2 )   - max ( l1 , l2 )    + 1    else :     ans  =   0    #print(ans)   top  =  top // 2   ans  =  max ( ans ,  f ( l1 , min ( r1 , top - 1 ), l2 , min ( r2 , top - 1 ),  top ))   ans  =  max ( ans ,  f ( l1 , min ( r1 , top - 1 ), max ( top + 1 , l2 ), r2 ,  top ))   ans  =  max ( ans ,  f ( max ( l1 , top + 1 ), r1 ,  l2 , min ( r2 , top - 1 ),  top ))   ans  =  max ( ans ,  f ( max ( l1 , top + 1 ), r1 ,  max ( l2 , top + 1 ), r2 ,  top ))   aaa  =  max ( aaa , ans )    return  ans   a  =  input (). split ()     print ( f ( int ( a [ 0 ]), int ( a [ 1 ]), int ( a [ 2 ]), int ( a [ 3 ]), 2 ** 36 )) 	 	 			    	 	  		   					 	 		",pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln lit pln kwd pln pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln kwd pln lit pln kwd pln pun lit pun pln kwd pln lit pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pln com pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun lit pln kwd pln pun pln pun lit pln kwd pln pun pln pun lit pun pln kwd pln pun pln pun lit pln kwd pln pun pln pun lit pln kwd pln pun pln pun lit pun pln kwd pln pun pln pun lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pun pln pun pln lit pln com pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pln pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun lit pun pln,62 ms,4800 KB,161
43805554,2018-10-04 22:29:00,ashok123,165C - Another Problem on Strings,Python 3,Accepted,12,69,"k = int ( input ()) s = input () c = 0 d ={} res = 0 d [ 0 ]= 1   for  i  in  s :      if  i == '1' :         c += 1       res += d . get ( c - k , 0 )     d [ c ]= d . get ( c , 0 )+ 1   print ( res )",pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun lit pln pun lit pun lit pln kwd pln kwd pln pun pln kwd pln pun str pun pln pun lit pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pun pln pun,1996 ms,55800 KB,165
28589729,2017-07-16 10:11:00,rprtr258,166C - Median,Python 3,Accepted,5,75,"n ,  x  =  map ( int ,  input (). split ()) a ,  ans  =  sorted ( list ( map ( int ,  input (). split ()))),   0 while  a [( len ( a )   +   1 )   //   2   -   1 ]   !=  x :   a ,  ans  =  sorted ( a  +   [ x ]),  ans  +   1 print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun,124 ms,5400 KB,166
6872003,2014-06-13 12:46:00,yugle7,167A - Wizards and Trolleybuses,Python 3,Accepted,5,75,"n ,  x  =  map ( int ,  input (). split ()) a ,  ans  =  sorted ( list ( map ( int ,  input (). split ()))),   0 while  a [( len ( a )   +   1 )   //   2   -   1 ]   !=  x :   a ,  ans  =  sorted ( a  +   [ x ]),  ans  +   1 print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun,717 ms,10600 KB,168
58235566,2019-08-03 22:18:00,UTMoonlight,171C - A Piece of Cake,Python 3,Accepted,2,42,"n ,   * a  =  input (). split () print ( sum ( i  *  int ( a [ i  -   1 ])   for  i  in  range ( 1 ,  int ( n )   +   1 )))",pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln lit pun,248 ms,0 KB,171
5356232,2013-12-05 21:49:00,yugle7,172C - Bus,Python 3,Accepted,26,248,"from  collections  import  defaultdict n ,  m  =  map ( int ,  input (). split ()) r ,  p  =   [ 0 ]   *  n ,  defaultdict ( list ) i  =  d  =   0 while  i  <  n  -  m :      for  j  in  range ( i ,  i  +  m ):         t ,  x  =  map ( int ,  input (). split ())         p [ x ]. append ( j )     d  =  max ( t ,  d )     y  =  sorted ( p . keys ())      for  x  in  y :          for  j  in  p [ x ]:  r [ j ]   =  d  +  x         d  +=   1   +  len ( p [ x ])   //   2     d  +=   2   *  y [- 1 ]     p . clear ()     i  +=  m for  j  in  range ( i ,  n ):     t ,  x  =  map ( int ,  input (). split ())     p [ x ]. append ( j ) if  p :     d  =  max ( t ,  d )     y  =  sorted ( p . keys ())      for  x  in  y :          for  j  in  p [ x ]:  r [ j ]   =  d  +  x         d  +=   1   +  len ( p [ x ])   //   2 print ( ' ' . join ( map ( str ,  r )))",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit kwd pun str pun pln pun pln pun pln pun pln pun,1590 ms,10700 KB,172
14702495,2015-12-08 21:21:00,Eeyore,174C - Range Increments,Python 3,Accepted,20,162,"n  =  int ( input ()) big  =   10   **   5 last  =   ( big  +   1 )   *   [   - 1   ] data  =  list ( map ( int ,  input (). split ())) data . insert ( 0 ,   0 ) data . append ( 0 )   result  =   [] previous  =   0 for  pos ,  current  in  enumerate ( data ):      if  current  >  previous :          for  x  in  range ( previous  +   1 ,  current  +   1 ):             last [ x ]   =  pos      elif  current  <  previous :          for  x  in  range ( previous ,  current ,   - 1 ):             result . append ( '%d %d'   %   ( last [ x ],  pos  -   1 ))     previous  =  current   print ( len ( result )) print ( '\n' . join ( result ))",pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln lit pun pln pun pln pun lit pun pln pln pun pln pun pln pun pln lit kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun str pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln kwd pun pln pun pln pun kwd pun str pun pln pun pln pun,498 ms,12400 KB,174
27108458,2017-05-14 17:46:00,knight-erraunt#,175C - Geometry Horse,Python 3,Accepted,32,215,"  n  =  int ( input ())   figures  =   [] for  _  in  range ( n ):     amount ,  cost  =  map ( int ,  input (). split ())     figures  +=   [( cost ,  amount )]   figures . sort ()   t  =  int ( input ()) T  =  list ( map ( int ,  input (). split ()))   result  =   0   destructed  =   0   i ,  j  =   0 ,   0 while  i  <  len ( figures ):      if  j  <  len ( T )   and  destructed  +  figures [ i ][ 1 ]   >=  T [ j ]:         take  =  T [ j ]   -  destructed         destructed  +=  take         figures [ i ]   =   ( figures [ i ][ 0 ],  figures [ i ][ 1 ]   -  take )         result  +=  take  *   ( j  +   1 )   *  figures [ i ][ 0 ]         j  +=   1      else :         take  =  figures [ i ][ 1 ]         destructed  +=  take         result  +=  take  *   ( j  +   1 )   *  figures [ i ][ 0 ]         i  +=   1   print ( result )",pln pln pun pln pun pln pun pln pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln pln pun pln lit pln pln pun pln pun pln lit pun pln lit kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pun pln pun,124 ms,0 KB,175
24143135,2017-01-26 08:29:00,metowolf,176C - Playing with Superglue,Python 3,Accepted,4,64,"n , m , X , Y , x , y = map ( int , input (). split ()) a =[ abs ( X - x ), abs ( Y - y )] a . sort () print ( ""First""   if  a [ 1 ]< 5   and  a [ 0 ]+ a [ 1 ]< 7   else   ""Second"" )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pln kwd pln pun lit pun lit pln kwd pln pun lit pun pln pun lit pun lit pln kwd pln str pun,156 ms,4500 KB,176
79267514,2020-05-07 15:14:00,KILLER_CODER,180C - Letter,Python 3,Accepted,9,41,"q = input () a , b = 0 , 0 for  i  in  q :      if  i . islower ():         a += 1      elif  a > 0 :         b += 1         a -= 1 print ( b )",pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun lit pun pln pun lit pln pun lit kwd pun pln pun,248 ms,6800 KB,180
21116721,2016-10-02 16:59:00,Amores,176A - Trading Business,Python 3,Accepted,9,41,"q = input () a , b = 0 , 0 for  i  in  q :      if  i . islower ():         a += 1      elif  a > 0 :         b += 1         a -= 1 print ( b )",pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun lit pun pln pun lit pln pun lit kwd pun pln pun,156 ms,300 KB,181
25185209,2017-03-03 21:56:00,YazanRi,185A - Plant,Python 3,Accepted,9,41,"q = input () a , b = 0 , 0 for  i  in  q :      if  i . islower ():         a += 1      elif  a > 0 :         b += 1         a -= 1 print ( b )",pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun lit pun pln pun lit pln pun lit kwd pun pln pun,122 ms,4500 KB,186
6687550,2014-05-23 17:19:00,yugle7,187A - Permutations,Python 3,Accepted,9,41,"q = input () a , b = 0 , 0 for  i  in  q :      if  i . islower ():         a += 1      elif  a > 0 :         b += 1         a -= 1 print ( b )",pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun lit pun pln pun lit pln pun lit kwd pun pln pun,592 ms,18200 KB,189
34838918,2018-02-02 16:01:00,yugle7,190C - STL,Python 3,Accepted,13,92,"input () p  =   '' s  =   [] for  q  in  input (). split ():     t  =  q  <   'p'     p  +=  q      while  t  and  s  and  s [- 1 ]:         p  +=   '>'         s . pop ()          if  s :  s . pop ()     s . append ( t )     p  +=   '<,' [ t ] print ( p [:- 1 ]   if  p . count ( '<' )   ==  p . count ( '>' )   else   'Error occurred' )",pln pun pln pun pln str pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln str pln pun pln pln kwd pln kwd pln kwd pln pun lit pun pln pun pln str pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pun pln pun kwd pun pln pun lit pun pln kwd pln pun pln pun str pun pln pun pln pun pln pun str pun pln kwd pln str pun,434 ms,12400 KB,190
30055020,2017-09-04 17:21:00,423555290,193C - Hamming Distance,Python 3,Accepted,63,831,"h  =   [[ 0   in  range ( 10 )]   for  j  in  range ( 10 )] for  i  in  range ( 1 ,   4 ):     h [ i ]   =   [ 0   for  j  in  range ( i  +   1 )]   +  list ( map ( int ,  input (). split ())) #for i in range(1, 4): #    print("" "".join(map(str, h[i][1:5]))) if   ( h [ 1 ][ 2 ]   +  h [ 1 ][ 3 ]   <  h [ 2 ][ 3 ]   or   ( h [ 1 ][ 2 ]   +  h [ 1 ][ 3 ]   -  h [ 2 ][ 3 ])   %   2   ==   1 ):      print ( ""-1"" )     exit ( 0 )   BB  =   ( h [ 1 ][ 2 ]   +  h [ 1 ][ 3 ]   -  h [ 2 ][ 3 ])   //   2 BA  =  h [ 1 ][ 2 ]   -  BB AB  =  h [ 1 ][ 3 ]   -  BB NowB   =  h [ 1 ][ 4 ] NowLen   =  BB  +  AB  +  BA Now24   =  BA  +   NowB   +  BB Now34   =  AB  +   NowB   +  BB BAB  =   0 ABB  =   0 BBB  =   0   Dif   =   ( BA  -  AB )   -   ( h [ 2 ][ 4 ]   -  h [ 3 ][ 4 ]) if   ( abs ( Dif )   %   2   ==   1 ):      print ( ""-1"" )     exit ( 0 ) if   Dif   <   0 :     ABB  +=  abs ( Dif )   //   2      Now34   -=  ABB  *   2      #Now24 += ABB      if   ( AB  <  ABB  or   NowB   <  ABB ):          print ( ""-1"" )         exit ( 0 )      NowB   -=  ABB else :     BAB  +=   Dif   //   2      Now24   -=  BAB  *   2      #Now34 += BAB      if   ( BA  <  BAB  or   NowB   <  BAB ):          print ( ""-1"" )         exit ( 0 )      NowB   -=  BAB if   ( Now24   <  h [ 2 ][ 4 ]   or   ( Now24   -  h [ 2 ][ 4 ])   %   2   ==   1 ):      print ( ""-1"" )     exit ( 0 ) #print(Now34 - h[3][4]) for  i  in  range ( BB  +   1 ):      if   ( i  >   NowB ):          break      Now   =  i  *   2      if   ( Now   >   Now24   -  h [ 2 ][ 4 ]):          break      if  min ([( NowB   -  i )   //   2 ,  BA  -  BAB ,  AB  -  ABB ])   *   2   >=   Now24   -  h [ 2 ][ 4 ]   -   Now :          #print(i, Now24, h[2][4], NowB)         BBB  +=  i         BAB  +=   ( Now24   -  h [ 2 ][ 4 ]   -   Now )   //   2         ABB  +=   ( Now24   -  h [ 2 ][ 4 ]   -   Now )   //   2          NowB   -=  i  +   ( Now24   -  h [ 2 ][ 4 ]   -   Now )          print ( NowLen   +   NowB )          print ( """" . join ([ ""a""   for  j  in  range ( NowLen )]   +   [ ""a""   for  j  in  range ( NowB )]))          print ( """" . join ([ ""a""   for  j  in  range ( AB )]   +   [ ""b""   for  j  in  range ( BB  +  BA )]   +   [ ""a""   for  j  in  range ( NowB )]))          print ( """" . join ([ ""b""   for  j  in  range ( AB  +  BB )]   +   [ ""a""   for  j  in  range ( BA )]   +   [ ""a""   for  j  in  range ( NowB )]))          print ( """" . join ([ ""b""   for  j  in  range ( ABB )]   +   [ ""a""   for  j  in  range ( AB  -  ABB )]   +   [ ""b""   for  j  in  range ( BBB )]   +   [ ""a""   for  j  in  range ( BB  -  BBB )]   +   [ ""b""   for  j  in  range ( BAB )]   +   [ ""a""   for  j  in  range ( BA  -  BAB )]   +   [ ""b""   for  j  in  range ( NowB )]))         exit ( 0 ) print ( ""-1"" )",pln pun pln pun lit pln kwd pln pun lit pun pln kwd pln kwd pln pun lit pun kwd pln kwd pln pun lit pun pln lit pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun com com kwd pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln kwd pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln pun pln lit pln pun pln lit pun pln kwd pun str pun pln pun lit pun pln pln pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln pun pln lit pln pun pln pun lit pun lit pun pln pun pln pln pun pln pun lit pun lit pun pln pun pln typ pln pun pln pun lit pun lit pun typ pln pun pln pun pln pun pln typ pln pun pln pun pln typ pln pun pln typ pln pun pln pun pln typ pln pun pln pln pun pln lit pln pun pln lit pln pun pln lit pln typ pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun kwd pln pun pln pun typ pun pln pun pln lit pln pun pln lit pun pln kwd pun str pun pln pun lit pun kwd pln typ pln pun pln lit pun pln pun pln pun typ pun pln pun pln lit pln typ pln pun pln pun pln lit pln com pln kwd pln pun pln pun pln kwd pln typ pln pun pln pun pln kwd pun str pun pln pun lit pun pln typ pln pun pln kwd pun pln pun pln typ pln pun pln lit pln typ pln pun pln pun pln lit pln com pln kwd pln pun pln pun pln kwd pln typ pln pun pln pun pln kwd pun str pun pln pun lit pun pln typ pln pun pln kwd pln pun typ pln pun pln pun lit pun lit pun pln kwd pln pun typ pln pun pln pun lit pun lit pun pln pun pln lit pln pun pln lit pun pln kwd pun str pun pln pun lit pun com kwd pln kwd pln pun pln pun pln lit pun pln kwd pln pun pln pun pln typ pun pln kwd pln typ pln pun pln pun pln lit pln kwd pln pun typ pln pun pln typ pln pun pln pun lit pun lit pun pln kwd pln kwd pln pun typ pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln typ pln pun pln pun lit pun lit pun pln pun pln typ pun pln com pln pun pln pln pun pln pun typ pln pun pln pun lit pun lit pun pln pun pln typ pun pln pun pln lit pln pun pln pun typ pln pun pln pun lit pun lit pun pln pun pln typ pun pln pun pln lit pln typ pln pun pln pun pln pun typ pln pun pln pun lit pun lit pun pln pun pln typ pun pln kwd pun typ pln pun pln typ pun pln kwd pun str pun pln pun str pln kwd pln kwd pln pun typ pun pln pun pln pun str pln kwd pln kwd pln pun typ pun pln kwd pun str pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun typ pun pln kwd pun str pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun typ pun pln kwd pun str pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun str pln kwd pln kwd pln pun typ pun pln pun lit pun kwd pun str pun,93 ms,2600 KB,193
21198485,2016-10-05 03:17:00,Amores,195C - Try and Catch,Python 3,Accepted,15,185,"I = input s =[] for  _  in  range ( int ( I ())): 	t = I () 	 if  t . find ( '""' )!=- 1 : t = t [: t . find ( '""' )]. replace ( ' ' , '' )+ t [ t . find ( '""' ): t . rfind ( '""' )]+ '"")' 	 else : t = t . replace ( ' ' , '' ) 	 if  len ( t )< 1 : pass 	 elif  t == 'try' : s +=[ '' ] 	 elif  t . startswith ( 'throw' ): s +=[ t [ 6 :- 1 ]+ ',' ]   	 elif  s [- 1 ]== '' : s . pop () 	 else : 			 if  s [- 1 ]== t [ 6 : t . find ( '""' )]: print ( t [ t . find ( '""' )+ 1 :- 2 ]); exit () 			 if  len ( s )> 1 : s [- 2 ]= s [- 1 ]; s . pop () 			 else : break print ( 'Unhandled Exception' )",pln pun pln pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun str pun lit pun pln pun pln pun pln pun pln pun str pun pln pun str pun str pun pln pun pln pun pln pun str pun pln pun pln pun str pun str pln kwd pun pln pun pln pun pln pun str pun str pun pln kwd pln pun pln pun lit pun kwd pln kwd pln pun str pun pln pun str pun pln kwd pln pun pln pun str pun pln pun pln pun lit pun lit pun str pun pln pln kwd pln pun lit pun str pun pln pun pln pun pln kwd pun pln kwd pln pun lit pun pln pun lit pun pln pun pln pun str pun kwd pun pln pun pln pun pln pun str pun lit pun lit pun pln pun pln kwd pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln kwd pun kwd kwd pun str pun,1028 ms,600 KB,195
4333857,2013-08-25 00:02:00,hl_joker,197C - Lexicographically Maximum Subsequence,Python 3,Accepted,5,35,"a = m = '' for  x  in  input ()[::- 1 ]:      if  x >= m :  a += x     m = max ( m , x ) print ( a [::- 1 ])",pln pun pln pun str kwd pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun kwd pun pln pun lit pun,248 ms,300 KB,197
23549213,2017-01-05 09:54:00,haleyk100198,198A - About Bacteria,Python 3,Accepted,5,35,"a = m = '' for  x  in  input ()[::- 1 ]:      if  x >= m :  a += x     m = max ( m , x ) print ( a [::- 1 ])",pln pun pln pun str kwd pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun kwd pun pln pun lit pun,904 ms,4500 KB,199
3691850,2013-05-08 03:52:00,neko13,201A - Clear Symmetry,Python 3,Accepted,5,35,"a = m = '' for  x  in  input ()[::- 1 ]:      if  x >= m :  a += x     m = max ( m , x ) print ( a [::- 1 ])",pln pun pln pun str kwd pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun kwd pun pln pun lit pun,78 ms,100 KB,202
21126754,2016-10-03 03:53:00,Amores,203C - Photographer,Python 3,Accepted,13,126,"I = lambda : map ( int , input (). split ()) R = range n , d = I () a , b = I () m =[] v =[] for  i  in  R ( n ): x , y = I (); v +=[ x * a + y * b ]; m +=[ i ] m = sorted ( m , key = lambda  x : v [ x ]) for  i  in  R ( n ): 	 if  v [ m [ i ]]> d : n = i ; break 	d -= v [ m [ i ]] print ( n ) for  i  in  R ( n ): print ( m [ i ]+ 1 , end = ' ' )",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun kwd pun pln pun kwd pln kwd pln pun pln pun kwd pun pln pun pln pun lit pun pln pun str pun,1652 ms,6900 KB,203
31240331,2017-10-12 15:14:00,GT_18,204A - Little Elephant and Interval,Python 3,Accepted,13,126,"I = lambda : map ( int , input (). split ()) R = range n , d = I () a , b = I () m =[] v =[] for  i  in  R ( n ): x , y = I (); v +=[ x * a + y * b ]; m +=[ i ] m = sorted ( m , key = lambda  x : v [ x ]) for  i  in  R ( n ): 	 if  v [ m [ i ]]> d : n = i ; break 	d -= v [ m [ i ]] print ( n ) for  i  in  R ( n ): print ( m [ i ]+ 1 , end = ' ' )",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun kwd pun pln pun kwd pln kwd pln pun pln pun kwd pun pln pun pln pun lit pun pln pun str pun,154 ms,0 KB,205
5891956,2014-02-04 07:57:00,choice,208C - Police Station,Python 3,Accepted,39,320,"read_line  =   lambda :  map ( int ,  input (). split ( ' ' ))   n ,  m  =  read_line ()   g  =   [[]   for  i  in  range ( n )] while  m :     a ,  b  =  map ( lambda  x :  x  -   1 ,  read_line ())     g [ a ]. append ( b )     g [ b ]. append ( a )     m  -=   1   def  bfs ( v0 ):     q  =   [ v0 ]     d  =   [- 1 ]   *  n     d [ v0 ]   =   0     ways  =   [ 0 ]   *  n     ways [ v0 ]   =   1     i  =   0      while  i  <  len ( q ):         v  =  q [ i ]          for  w  in  g [ v ]:              if  d [ w ]   ==   - 1 :                 d [ w ]   =  d [ v ]   +   1                 q . append ( w )              if  d [ w ]   ==  d [ v ]   +   1 :                 ways [ w ]   +=  ways [ v ]         i  +=   1      return  q ,  d ,  ways   q0 ,  d0 ,  ways0  =  bfs ( 0 ) q1 ,  d1 ,  ways1  =  bfs ( n  -   1 )   min_dist  =  d0 [ n  -   1 ] num_paths  =  ways0 [ n  -   1 ] ans  =  num_paths for  v  in  range ( 1 ,  n  -   1 ):      if  d0 [ v ]   +  d1 [ v ]   ==  min_dist :         ans  =  max ( ans ,   2   *  ways0 [ v ]   *  ways1 [ v ]) print ( '{:.7f}' . format ( ans  /  num_paths ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun str pun pln pln pun pln pun pln pun pln pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln pun pln pun pln pun pln pun kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln lit pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pln pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun,124 ms,300 KB,208
35596393,2018-02-23 15:34:00,yugle7,213A - Game,Python 3,Accepted,39,320,"read_line  =   lambda :  map ( int ,  input (). split ( ' ' ))   n ,  m  =  read_line ()   g  =   [[]   for  i  in  range ( n )] while  m :     a ,  b  =  map ( lambda  x :  x  -   1 ,  read_line ())     g [ a ]. append ( b )     g [ b ]. append ( a )     m  -=   1   def  bfs ( v0 ):     q  =   [ v0 ]     d  =   [- 1 ]   *  n     d [ v0 ]   =   0     ways  =   [ 0 ]   *  n     ways [ v0 ]   =   1     i  =   0      while  i  <  len ( q ):         v  =  q [ i ]          for  w  in  g [ v ]:              if  d [ w ]   ==   - 1 :                 d [ w ]   =  d [ v ]   +   1                 q . append ( w )              if  d [ w ]   ==  d [ v ]   +   1 :                 ways [ w ]   +=  ways [ v ]         i  +=   1      return  q ,  d ,  ways   q0 ,  d0 ,  ways0  =  bfs ( 0 ) q1 ,  d1 ,  ways1  =  bfs ( n  -   1 )   min_dist  =  d0 [ n  -   1 ] num_paths  =  ways0 [ n  -   1 ] ans  =  num_paths for  v  in  range ( 1 ,  n  -   1 ):      if  d0 [ v ]   +  d1 [ v ]   ==  min_dist :         ans  =  max ( ans ,   2   *  ways0 [ v ]   *  ways1 [ v ]) print ( '{:.7f}' . format ( ans  /  num_paths ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun str pun pln pln pun pln pun pln pun pln pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln pun pln pun pln pun pln pun kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln lit pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pln pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun,186 ms,7100 KB,214
35163992,2018-02-12 00:22:00,niquefa_diego,215C - Crosses,Python 3,Accepted,28,245,"from  sys  import  stdin def  read ():   return  map ( int ,  stdin . readline (). split ())     def  ways ( h , w , area ):    if  area  ==  h * w :      return   2   *   (   ( h + 1 )// 2   *   ( w + 1 )// 2   )   -   1    if  area  >  h * w :   return   0    if  area  <  h + w - 1 :   return   0        area  =  h * w  -  area    if  area  %   4   !=   0 :   return   0   area  //=   4      ans  =   0   h  //=   2   w  //=   2    for  a  in  range ( 1 , h + 1 ):      if  area % a  ==   0   and  area // a  <=  w :       ans  +=   1    return  ans * 2    n ,  m ,  s  =  read () ans  =   0 for  h  in  range ( 1 , n + 1 , 2 ):    for  w  in  range ( 1 , m + 1 , 2 ):     ans  +=  ways ( h , w , s )   *   ( n - h + 1 )   *   ( m - w + 1 ) print ( ans )",kwd pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln lit pln pun pln pun pln pun pln pun lit pun lit pln pun pln pun pln pun lit pun lit pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln lit pln kwd pln pun pln pun pln pun lit pun pln kwd pln lit pln pln pun pln pun pln pun pln pln kwd pln pun pln lit pln pun pln lit pun pln kwd pln lit pln pun pln lit pln pln pun pln lit pln pun pln lit pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun lit pln pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun lit pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun,936 ms,5500 KB,215
44723905,2018-10-23 10:04:00,noelcowm,216C - Hiring Staff,Python 3,Accepted,11,116,"n , m , k  =  map ( int , input (). split ()) cnt  =   [ 0 ]   *   100010 a  =   [] for  day  in  range ( n + m ):     while  cnt [ day ]   <  k  or  cnt [ day  +   1 ]   ==   0   :       a . append ( day  +   1 )        for  i  in  range ( n ):          cnt [ day + i ]   +=   1 print   ( len ( a )) for  i  in  range ( len ( a )):     print   ( a [ i ], end  =   "" "" )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln str pun,934 ms,600 KB,216
76039449,2020-04-10 00:18:00,cybertron1609,217A - Ice Skating,Python 3,Accepted,11,116,"n , m , k  =  map ( int , input (). split ()) cnt  =   [ 0 ]   *   100010 a  =   [] for  day  in  range ( n + m ):     while  cnt [ day ]   <  k  or  cnt [ day  +   1 ]   ==   0   :       a . append ( day  +   1 )        for  i  in  range ( n ):          cnt [ day + i ]   +=   1 print   ( len ( a )) for  i  in  range ( len ( a )):     print   ( a [ i ], end  =   "" "" )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln str pun,218 ms,300 KB,218
4913520,2013-10-27 18:08:00,yugle7,219C - Color Stripe,Python 3,Accepted,24,292,"n ,  k  =  map ( int ,  input (). split ())   p  =   'ABCDEFGHIJKLMNOPQRSTUVWXYZ' [:  k ]   +   'A' p  =   { p [ i ]   :  p [ i  +   1 ]   for  i  in  range ( k )}   if  k  ==   2 :     t  =  input ()     u ,  v  =   'AB'   *   ( n  //   2 )   +   'A'   *   ( n  %   2 ),   'BA'   *   ( n  //   2 )   +   'B'   *   ( n  %   2 )     x ,  y  =  sum ( int ( u [ i ]   !=  t [ i ])   for  i  in  range ( n )),  sum ( int ( v [ i ]   !=  t [ i ])   for  i  in  range ( n ))      if  x  <  y :          print ( x )          print ( u )      else :          print ( y )          print ( v )      else :     t ,  s  =  list ( input ()),   0      for  i  in  range ( 1 ,  n ):          if  t [ i ]   ==  t [ i  -   1 ]:             t [ i ]   =  p [ t [ i ]]              if  i  +   1   <  n  and  t [ i ]   ==  t [ i  +   1 ]:  t [ i ]   =  p [ t [ i ]]             s  +=   1      print ( s )      print ( '' . join ( t ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln str pun pln pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pun pln str pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln lit pun pln str pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pun pln pun pln kwd pun pln pun pln kwd pun pln kwd pun pln pun pln kwd pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln kwd pun str pun pln pun pln pun,468 ms,4200 KB,219
19507060,2016-07-30 05:26:00,Amores,220A - Little Elephant and Problem,Python 3,Accepted,24,292,"n ,  k  =  map ( int ,  input (). split ())   p  =   'ABCDEFGHIJKLMNOPQRSTUVWXYZ' [:  k ]   +   'A' p  =   { p [ i ]   :  p [ i  +   1 ]   for  i  in  range ( k )}   if  k  ==   2 :     t  =  input ()     u ,  v  =   'AB'   *   ( n  //   2 )   +   'A'   *   ( n  %   2 ),   'BA'   *   ( n  //   2 )   +   'B'   *   ( n  %   2 )     x ,  y  =  sum ( int ( u [ i ]   !=  t [ i ])   for  i  in  range ( n )),  sum ( int ( v [ i ]   !=  t [ i ])   for  i  in  range ( n ))      if  x  <  y :          print ( x )          print ( u )      else :          print ( y )          print ( v )      else :     t ,  s  =  list ( input ()),   0      for  i  in  range ( 1 ,  n ):          if  t [ i ]   ==  t [ i  -   1 ]:             t [ i ]   =  p [ t [ i ]]              if  i  +   1   <  n  and  t [ i ]   ==  t [ i  +   1 ]:  t [ i ]   =  p [ t [ i ]]             s  +=   1      print ( s )      print ( '' . join ( t ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln str pun pln pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pun pln str pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln lit pun pln str pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pun pln pun pln kwd pun pln pun pln kwd pun pln kwd pun pln pun pln kwd pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln kwd pun str pun pln pun pln pun,171 ms,8300 KB,221
33056842,2017-12-09 20:06:00,Aint_Stain,223C - Partial Sums,Python 3,Accepted,13,149,"leng ,  repeat = list ( map ( int , input (). split ())) Lis   =  list ( map ( int , input (). split ())) mod  =   10 ** 9   +   7 cum  =   [ 1 ] ans  =   [ 0 ]* leng for  i  in  range ( 1 ,   2001 ):     cum . append (( cum [- 1 ]   *   ( repeat  +  i  -   1 )   *  pow ( i ,  mod - 2 ,  mod ))   %  mod )   for  i  in  range ( leng ):      for  j  in  range ( i  +   1 ):         ans [ i ]   =   ( ans [ i ]   +  cum [ i - j ]   *   Lis [ j ])   %  mod print (* ans )  ",pln pun pln pun pln pun pln pun pln pun pln pun pln pun typ pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun lit pln pun pln lit pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln typ pun pln pun pln pun pln kwd pun pln pun pln,2838 ms,5600 KB,223
57862915,2019-07-27 21:53:00,ovi_ivo,223A - Bracket Sequence,Python 3,Accepted,13,149,"leng ,  repeat = list ( map ( int , input (). split ())) Lis   =  list ( map ( int , input (). split ())) mod  =   10 ** 9   +   7 cum  =   [ 1 ] ans  =   [ 0 ]* leng for  i  in  range ( 1 ,   2001 ):     cum . append (( cum [- 1 ]   *   ( repeat  +  i  -   1 )   *  pow ( i ,  mod - 2 ,  mod ))   %  mod )   for  i  in  range ( leng ):      for  j  in  range ( i  +   1 ):         ans [ i ]   =   ( ans [ i ]   +  cum [ i - j ]   *   Lis [ j ])   %  mod print (* ans )  ",pln pun pln pun pln pun pln pun pln pun pln pun pln pun typ pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun lit pln pun pln lit pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln typ pun pln pun pln pun pln kwd pun pln pun pln,374 ms,10600 KB,224
5091422,2013-11-13 21:19:00,yugle7,225C - Barcode,Python 3,Accepted,11,321,"n ,  m ,  x ,  y  =  map ( int ,  input (). split ()) u  =   [ i . count ( '.' )   for  i  in  list ( zip (*[ input ()   for  i  in  range ( n )]))] v  =   [ n  -  i  for  i  in  u ] a ,  b ,  s  =   [ u [ 0 ]],   [ v [ 0 ]],  x  -   1 for  i  in  range ( 1 ,  x ):     a ,  b  =   [ 1000001 ]   +   [ j  +  u [ i ]   for  j  in  a ],   [ 1000001 ]   +   [ j  +  v [ i ]   for  j  in  b ] for  i  in  range ( x ,  min ( y ,  m )):     a ,  b  =   [ min ( b [ s :   ])   +  u [ i ]]   +   [ j  +  u [ i ]   for  j  in  a ],   [ min ( a [ s :   ])   +  v [ i ]]   +   [ j  +  v [ i ]   for  j  in  b ] for  i  in  range ( min ( y ,  m ),  m ):     a ,  b  =   [ min ( b [ s :   ])   +  u [ i ]]   +   [ j  +  u [ i ]   for  j  in  a [:   - 1 ]],   [ min ( a [ s :   ])   +  v [ i ]]   +   [ j  +  v [ i ]   for  j  in  b [:   - 1 ]] print ( min ( min ( a [ s :   ]),  min ( b [ s :   ])))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,498 ms,5500 KB,225
11998624,2015-07-10 16:58:00,Vladik,226A - Flying Saucer Segments,Python 3,Accepted,11,321,"n ,  m ,  x ,  y  =  map ( int ,  input (). split ()) u  =   [ i . count ( '.' )   for  i  in  list ( zip (*[ input ()   for  i  in  range ( n )]))] v  =   [ n  -  i  for  i  in  u ] a ,  b ,  s  =   [ u [ 0 ]],   [ v [ 0 ]],  x  -   1 for  i  in  range ( 1 ,  x ):     a ,  b  =   [ 1000001 ]   +   [ j  +  u [ i ]   for  j  in  a ],   [ 1000001 ]   +   [ j  +  v [ i ]   for  j  in  b ] for  i  in  range ( x ,  min ( y ,  m )):     a ,  b  =   [ min ( b [ s :   ])   +  u [ i ]]   +   [ j  +  u [ i ]   for  j  in  a ],   [ min ( a [ s :   ])   +  v [ i ]]   +   [ j  +  v [ i ]   for  j  in  b ] for  i  in  range ( min ( y ,  m ),  m ):     a ,  b  =   [ min ( b [ s :   ])   +  u [ i ]]   +   [ j  +  u [ i ]   for  j  in  a [:   - 1 ]],   [ min ( a [ s :   ])   +  v [ i ]]   +   [ j  +  v [ i ]   for  j  in  b [:   - 1 ]] print ( min ( min ( a [ s :   ]),  min ( b [ s :   ])))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,124 ms,0 KB,227
5286166,2013-11-28 16:01:00,yugle7,229A - Shifts,Python 3,Accepted,11,321,"n ,  m ,  x ,  y  =  map ( int ,  input (). split ()) u  =   [ i . count ( '.' )   for  i  in  list ( zip (*[ input ()   for  i  in  range ( n )]))] v  =   [ n  -  i  for  i  in  u ] a ,  b ,  s  =   [ u [ 0 ]],   [ v [ 0 ]],  x  -   1 for  i  in  range ( 1 ,  x ):     a ,  b  =   [ 1000001 ]   +   [ j  +  u [ i ]   for  j  in  a ],   [ 1000001 ]   +   [ j  +  v [ i ]   for  j  in  b ] for  i  in  range ( x ,  min ( y ,  m )):     a ,  b  =   [ min ( b [ s :   ])   +  u [ i ]]   +   [ j  +  u [ i ]   for  j  in  a ],   [ min ( a [ s :   ])   +  v [ i ]]   +   [ j  +  v [ i ]   for  j  in  b ] for  i  in  range ( min ( y ,  m ),  m ):     a ,  b  =   [ min ( b [ s :   ])   +  u [ i ]]   +   [ j  +  u [ i ]   for  j  in  a [:   - 1 ]],   [ min ( a [ s :   ])   +  v [ i ]]   +   [ j  +  v [ i ]   for  j  in  b [:   - 1 ]] print ( min ( min ( a [ s :   ]),  min ( b [ s :   ])))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,872 ms,800 KB,230
58108981,2019-08-01 09:08:00,MajAK,231C - To Add or Not to Add,Python 3,Accepted,16,116,"n , k = map ( int , input (). split ()) a = list ( map ( int , input (). split ())) a . sort () s = 0 m = 1 ans = a [ 0 ] start = 0 for  end  in  range ( 1 , n ): 	s +=( end - start )*( a [ end ]- a [ end - 1 ]) 	 while  s > k : 		s -= a [ end ]- a [ start ] 		start += 1 	 if  m < end - start + 1 : 		m = end - start + 1 		ans = a [ end ] print ( m , ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit pln pun pln pun lit pun pln pun lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pln pun pln pun pln pun kwd pun pln pun pln pun,592 ms,8500 KB,231
58923604,2019-08-16 21:19:00,abhirock753,232A - Cycles,Python 3,Accepted,16,116,"n , k = map ( int , input (). split ()) a = list ( map ( int , input (). split ())) a . sort () s = 0 m = 1 ans = a [ 0 ] start = 0 for  end  in  range ( 1 , n ): 	s +=( end - start )*( a [ end ]- a [ end - 1 ]) 	 while  s > k : 		s -= a [ end ]- a [ start ] 		start += 1 	 if  m < end - start + 1 : 		m = end - start + 1 		ans = a [ end ] print ( m , ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit pln pun pln pun lit pun pln pun lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pln pun pln pun pln pun kwd pun pln pun pln pun,248 ms,300 KB,233
64485164,2019-11-07 20:28:00,abhivick07,234C - Weather,Python 3,Accepted,14,143,"import  sys sys . stdin = open ( 'input.txt' , 'r' ) sys . stdout = open ( 'output.txt' , 'w' ) n = int ( input ()) r = sys . maxsize t = list ( map ( int , input (). split ())) l1 =[ 0 ]*( n + 1 ) l2 =[ 0 ]*( n + 1 ) for  i , j  in  enumerate ( t ):     l1 [ i + 1 ]= l1 [ i ]+( 0   if  j < 0   else   1 )     l2 [ i + 1 ]= l2 [ i ]+( 0   if  j > 0   else   1 ) for  k  in  range ( 1 , n ):     r = min ( r , l1 [ k ]+ l2 [ n ]- l2 [ k ]) print ( r )",kwd pln pln pun pln pun pln pun str pun str pun pln pun pln pun pln pun str pun str pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pun lit pln kwd pln lit pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pun lit pln kwd pln lit pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,498 ms,9100 KB,234
15835168,2016-02-06 03:32:00,orailly,235A - LCM Challenge,Python 3,Accepted,14,143,"import  sys sys . stdin = open ( 'input.txt' , 'r' ) sys . stdout = open ( 'output.txt' , 'w' ) n = int ( input ()) r = sys . maxsize t = list ( map ( int , input (). split ())) l1 =[ 0 ]*( n + 1 ) l2 =[ 0 ]*( n + 1 ) for  i , j  in  enumerate ( t ):     l1 [ i + 1 ]= l1 [ i ]+( 0   if  j < 0   else   1 )     l2 [ i + 1 ]= l2 [ i ]+( 0   if  j > 0   else   1 ) for  k  in  range ( 1 , n ):     r = min ( r , l1 [ k ]+ l2 [ n ]- l2 [ k ]) print ( r )",kwd pln pln pun pln pun pln pun str pun str pun pln pun pln pun pln pun str pun str pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pun lit pln kwd pln lit pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pun lit pln kwd pln lit pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,124 ms,0 KB,236
4910779,2013-10-27 13:01:00,yugle7,237C - Primes on Interval,Python 3,Accepted,14,288,"def  f ( a ,  b ):     t  =   [ 1 ]   *   ( b  +   1 )      for  i  in  range ( 3 ,  int ( b  **   0.5 )   +   1 ):          if  t [ i ]:  t [ i  *  i  ::   2   *  i ]   =   [ 0 ]   *   (( b  -  i  *  i )   //   ( 2   *  i )   +   1 )      return   [ i  for  i  in  range ( 3 ,  b  +   1 ,   2 )   if  t [ i ]   and  i  >  a ]   a ,  b ,  k  =  map ( int ,  input (). split ())   p  =  f ( a  -   1 ,  b ) if   3   >  a  and  b  >   1 :  p  =   [ 2 ]   +  p   if  k  >  len ( p ):   print (- 1 ) elif  len ( p )   ==  k :   print ( max ( p [ k  -   1 ]   -  a  +   1 ,  b  -  p [ 0 ]   +   1 )) else :   print ( max ( p [ k  -   1 ]   -  a  +   1 ,  b  -  p [ len ( p )   -  k ]   +   1 ,  max ( p [ i  +  k ]   -  p [ i ]   for  i  in  range ( len ( p )   -  k ))))",kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln lit pun pln kwd pln pun pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln lit pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln lit pun pln pun kwd pln lit pln pun pln kwd pln pun pln lit pun pln pun pln pun lit pun pln pun pln pln kwd pln pun pln pun pln pun pln kwd pun lit pun kwd pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln lit pun kwd pun pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun,140 ms,6300 KB,237
22063671,2016-11-05 22:23:00,Amores,238A - Not Wool Sequences,Python 3,Accepted,14,288,"def  f ( a ,  b ):     t  =   [ 1 ]   *   ( b  +   1 )      for  i  in  range ( 3 ,  int ( b  **   0.5 )   +   1 ):          if  t [ i ]:  t [ i  *  i  ::   2   *  i ]   =   [ 0 ]   *   (( b  -  i  *  i )   //   ( 2   *  i )   +   1 )      return   [ i  for  i  in  range ( 3 ,  b  +   1 ,   2 )   if  t [ i ]   and  i  >  a ]   a ,  b ,  k  =  map ( int ,  input (). split ())   p  =  f ( a  -   1 ,  b ) if   3   >  a  and  b  >   1 :  p  =   [ 2 ]   +  p   if  k  >  len ( p ):   print (- 1 ) elif  len ( p )   ==  k :   print ( max ( p [ k  -   1 ]   -  a  +   1 ,  b  -  p [ 0 ]   +   1 )) else :   print ( max ( p [ k  -   1 ]   -  a  +   1 ,  b  -  p [ len ( p )   -  k ]   +   1 ,  max ( p [ i  +  k ]   -  p [ i ]   for  i  in  range ( len ( p )   -  k ))))",kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln lit pun pln kwd pln pun pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln lit pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln lit pun pln pun kwd pln lit pln pun pln kwd pln pun pln lit pun pln pun pln pun lit pun pln pun pln pln kwd pln pun pln pun pln pun pln kwd pun lit pun kwd pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln lit pun kwd pun pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun,218 ms,0 KB,239
37546615,2018-04-23 11:46:00,nowyyz,242C - King's Path,Python 3,Accepted,22,220,"from  collections  import  deque x0 ,  y0 ,  x1 , y1  =  map ( int ,  input (). split ()) n  =  int ( input ()) g  =   {} for  _  in  range ( n ):     r , a , b  =  map ( int ,  input (). split ())      for  i  in  range ( a , b + 1 ):         g [( r , i )]   =   - 1 g [( x0 , y0 )]   =   0 q  =  deque ([( x0 , y0 )]) dx  =   [- 1 , 0 , 1 ,- 1 , 1 ,- 1 , 0 , 1 ] dy  =   [- 1 ,- 1 ,- 1 , 0 , 0 , 1 , 1 , 1 ] while  len ( q )   >   0 :     c  =  q . popleft ()      for  i  in  range ( 8 ):         m  =   ( c [ 0 ]+ dx [ i ],  c [ 1 ]+ dy [ i ])          if  m  in  g  and  g [ m ]   ==   - 1 :             q . append ( m )             g [ m ]   =  g [ c ]+ 1      print ( g [( x1 , y1 )]) exit ()",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun pln pun pln pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pun pln pun pln pun pln pun pln pun,1964 ms,17900 KB,242
73771714,2020-03-20 10:51:00,both_stars,243A - The Brand New Function,Python 3,Accepted,22,220,"from  collections  import  deque x0 ,  y0 ,  x1 , y1  =  map ( int ,  input (). split ()) n  =  int ( input ()) g  =   {} for  _  in  range ( n ):     r , a , b  =  map ( int ,  input (). split ())      for  i  in  range ( a , b + 1 ):         g [( r , i )]   =   - 1 g [( x0 , y0 )]   =   0 q  =  deque ([( x0 , y0 )]) dx  =   [- 1 , 0 , 1 ,- 1 , 1 ,- 1 , 0 , 1 ] dy  =   [- 1 ,- 1 ,- 1 , 0 , 0 , 1 , 1 , 1 ] while  len ( q )   >   0 :     c  =  q . popleft ()      for  i  in  range ( 8 ):         m  =   ( c [ 0 ]+ dx [ i ],  c [ 1 ]+ dy [ i ])          if  m  in  g  and  g [ m ]   ==   - 1 :             q . append ( m )             g [ m ]   =  g [ c ]+ 1      print ( g [( x1 , y1 )]) exit ()",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun pln pun pln pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pun pln pun pln pun pln pun pln pun,1340 ms,22300 KB,244
37872443,2018-05-04 01:57:00,YazanRi,245C - Game with Coins,Python 3,Accepted,10,117,"n ,  s  =  int ( input ()),   0 a  =   [ 0 ]   +  list ( map ( int ,  input (). split ())) if  n  %   2   ==   0   or  n  ==   1 :    print (- 1 ) else :    for  i  in  range ( n ,   1 ,   - 2 ):     mx  =  max ( a [ i ],  a [ i  -   1 ])     s  +=  mx     a [ i  //   2 ]   =  max ( 0 ,  a [ i  //   2 ]   -  mx )    print ( s  +  a [ 1 ])",pln pun pln pun pln pun pln pun pln lit pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln lit pln pun pln lit pln kwd pln pun pln lit pun pln kwd pun lit pun kwd pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun pln lit pun pln pun pln pun pln kwd pun pln pun pln pun lit pun,156 ms,6900 KB,245
5030773,2013-11-08 19:43:00,yugle7,246C - Beauty Pageant,Python 3,Accepted,7,106,"n ,  k  =  map ( int ,  input (). split ()) p  =  list ( map ( int ,  input (). split ())) p . sort () t  =   [[ i ]   for  i  in  p ] for  i  in  range ( 1 ,  n ):     t  +=   [ t [- 1 ]   +  i  for  i  in  t [:  n  -  i ]] print ( '\n' . join ( str ( len ( i ))   +   ' '   +   ' ' . join ( map ( str ,  i ))   for  i  in  t [:  k ]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun pln pun pln str pln pun pln str pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun,156 ms,1000 KB,246
5286153,2013-11-28 15:59:00,yugle7,250C - Movie Critics,Python 3,Accepted,7,106,"n ,  k  =  map ( int ,  input (). split ()) p  =  list ( map ( int ,  input (). split ())) p . sort () t  =   [[ i ]   for  i  in  p ] for  i  in  range ( 1 ,  n ):     t  +=   [ t [- 1 ]   +  i  for  i  in  t [:  n  -  i ]] print ( '\n' . join ( str ( len ( i ))   +   ' '   +   ' ' . join ( map ( str ,  i ))   for  i  in  t [:  k ]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun pln pun pln str pln pun pln str pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun,342 ms,7200 KB,247
5286153,2013-11-28 15:59:00,yugle7,250C - Movie Critics,Python 3,Accepted,10,169,"n ,  k  =  map ( int ,  input (). split ()) t  =  list ( map ( int ,  input (). split ())) t  =   [ t [ 0 ]]   +   [ t [ i ]   for  i  in  range ( 1 ,  len ( t ))   if  t [ i ]   !=  t [ i  -   1 ]] p  =   [ 0 ]   *   ( k  +   1 ) for  i  in  range ( 1 ,  len ( t )   -   1 ):      if  t [ i  -   1 ]   ==  t [ i  +   1 ]:  p [ t [ i ]]   +=   2      else :  p [ t [ i ]]   +=   1 p [ t [ 0 ]]   +=   1 p [ t [- 1 ]]   +=   1 print ( p . index ( max ( p )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun lit pun pln pun pln lit pln pun pln pun lit pun pln pun pln lit kwd pun pln pun pln pun pln pun pln pun,342 ms,7200 KB,250
75301651,2020-04-03 05:35:00,rdav,252C - Points on Line,Python 3,Accepted,9,79,"n , d = map ( int , input (). split ()) a = list ( map ( int , input (). split ())) s , x = 0 , 0 for  i  in  range ( n ): 	 while  a [ i ]> d + a [ x ]   and  x < n : 		x += 1 	m = i - x - 1 	s +=( m + 1 )* m // 2 print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pln pun pln pun pln pun lit pln pun pln pun lit pun pln pun lit kwd pun pln pun,498 ms,8300 KB,252
5660764,2014-01-11 21:03:00,yugle7,253C - Text Editor,Python 3,Accepted,27,290,"import  sys sys . stdin  =  open ( 'input.txt' ) sys . stdout  =  open ( 'output.txt' , 'w' )   n  =  int ( input ()) a  =  list ( map ( int ,  input (). split ()))   r1 ,  c1 ,  r2 ,  c2  =   ( i  -   1   for  i  in  map ( int ,  input (). split ())) x ,  y  =   ( r1 ,  r2 )   if  r1  <  r2  else   ( r2 ,  r1 )   if  r1  <  r2 :  c1  =  min ( c1 ,  min ( a [ i ]   for  i  in  range ( r1  +   1 ,  r2  +   1 ))) elif  r2  <  r1 :  c1  =  min ( c1 ,  min ( a [ i ]   for  i  in  range ( r2 ,  r1 )))   d  =  abs ( c1  -  c2 ) c  =  c1 for  i  in  range ( x  -   1 ,   - 1 ,   - 1 ):      if  c  >  a [ i ]:         c  =  a [ i ]         q  =  abs ( c2  -  c )   +   2   *  abs ( x  -  i )          if  q  <  d :  d  =  q c  =  c1 for  i  in  range ( y  +   1 ,  n ):      if  c  >  a [ i ]:         c  =  a [ i ]         q  =  abs ( c2  -  c )   +   2   *  abs ( i  -  y )          if  q  <  d :  d  =  q print ( d  +  abs ( r2  -  r1 ))",kwd pln pln pun pln pun pln pun str pun pln pun pln pun pln pun str pun str pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun lit pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun,92 ms,100 KB,253
75182794,2020-04-02 00:11:00,viniciuszeiko,254C - Anagram,Python 3,Accepted,38,272,"import  sys     def  conv ( letra ):      return  ord ( letra )- ord ( 'A' )     sys . stdin  =  open ( 'input.txt' ,   'r' ) sys . stdout  =  open ( 'output.txt' ,   'w' )   s  =   [ conv ( i )   for  i  in  input ()] t  =   [ conv ( i )   for  i  in  input ()]   aux  =   [ s . count ( i )   for  i  in  range ( 26 )] lista_cont  =   [ aux [ i ]- t . count ( i )   for  i  in  range ( 26 )] # print(lista_cont, 'oi')   p ,  r  =   [],   0   for  i  in  range ( 25 ,   - 1 ,   - 1 ):      if  lista_cont [ i ]   <   0 :          # print(p, 'oieei')         p  +=   [ i ]   *   - lista_cont [ i ]         r  -=  lista_cont [ i ]   cont  =   0 for  x  in  s :      if  lista_cont [ x ]   >   0   and   ( p [- 1 ]   <  x  or  aux [ x ]   ==  lista_cont [ x ]):         lista_cont [ x ]   -=   1         s [ cont ]   =  p . pop ()     aux [ x ]   -=   1     cont  +=   1   print ( r ) ans  =   '' for  i  in  s :     ans  +=  chr ( i + ord ( 'A' )) print ( ans )",kwd pln pln pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun str pun pln pln pln pun pln pun pln pun str pun pln str pun pln pun pln pun pln pun str pun pln str pun pln pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun com pln pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun lit pun pln kwd pln pun pln pun pln pun pln lit pun pln com pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln kwd pun pln pun pln pun pln str kwd pln kwd pln pun pln pun pln pun pln pun pln pun str pun kwd pun pln pun,934 ms,1700 KB,254
28199805,2017-07-02 02:43:00,YazanRi,257C - View Angle,Python 3,Accepted,11,94,"import  math from  math  import  atan2  as  t a =[] for  i  in  range ( int ( input ())):   x , y = map ( int , input (). split ())   a . append ( 180 * t ( y , x )/ math . pi ) a . sort () ans = a [- 1 ]- a [ 0 ] for  i  in  range ( len ( a )- 1 ):   ans = min ( ans , 360 - a [ i + 1 ]+ a [ i ]) print ( ans )",kwd pln kwd pln kwd pln kwd pln pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun kwd pun pln pun,1060 ms,8200 KB,257
7823443,2014-09-18 10:49:00,Qumeric,258A - Little Elephant and Bits,Python 3,Accepted,11,94,"import  math from  math  import  atan2  as  t a =[] for  i  in  range ( int ( input ())):   x , y = map ( int , input (). split ())   a . append ( 180 * t ( y , x )/ math . pi ) a . sort () ans = a [- 1 ]- a [ 0 ] for  i  in  range ( len ( a )- 1 ):   ans = min ( ans , 360 - a [ i + 1 ]+ a [ i ]) print ( ans )",kwd pln kwd pln kwd pln kwd pln pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun kwd pun pln pun,124 ms,400 KB,259
6688713,2014-05-23 21:24:00,WARenie,260C - Balls and Boxes,Python 3,Accepted,18,141,"n ,  x  =  map ( int ,  input (). split ()) a  =  list ( map ( int ,  input (). split ())) t  =  min ( a ) if  t  !=   0 :      for  i  in  range ( n ):         a [ i ]   -=  t  -   1 i  =  x  -   1 c  =   0 while  a [ i ]   !=   0 :     a [ i ]   -=   1     c  +=   1     i  -=   1      if  i  ==   - 1 :         i  =  n  -   1 a [ i ]   +=  c  +  max ( t  -   1 ,   0 )   *  n for  i  in  a :      print ( i ,  end  =   ' ' )     ",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln lit pln pun pln lit kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pun pln pun pln kwd pln kwd pln pun pln kwd pun pln pun pln pun pln str pun pln,514 ms,9200 KB,260
53205315,2019-04-24 00:10:00,meooow,261C - Maxim and Matrix,Python 3,Accepted,17,145,"from  math  import  factorial  as  fac   n ,  t  =  map ( int ,  input (). split ()) if  t  &   ( t  -   1 ):     ans  =   0 else :     ans  =  c  =   0     s  =  bin ( n  +   2 )[ 2 :]          l  =  len ( s )      for  i  in  range ( l ):          if  s [ i ]   ==   '1' :             m ,  k  =  l  -  i  -   1 ,  t . bit_length ()   -  c              if   0   <=  k  <=  m :                 ans  +=  fac ( m )   //  fac ( k )   //  fac ( m  -  k )             c  +=   1      if  t  ==   1 :  ans  -=   1 print ( ans )",kwd pln kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln lit pun pln pun pln lit kwd pun pln pun pln pun pln lit pln pun pln pun pln pun pln lit pun lit pun pln pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln str pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pln kwd pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln lit pun pln pun pln lit kwd pun pln pun,218 ms,0 KB,261
3670257,2013-05-05 00:02:00,neko13,262C - Maxim and Discounts,Python 3,Accepted,7,60,"rd  =   lambda :  list ( map ( int ,  input (). split ()))   input () q  =  min ( rd ()) input () a  =  sorted ( rd (),  reverse = True ) print ( sum ( v  for  i ,  v  in  enumerate ( a )   if  i %( q + 2 )< q ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun kwd pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun lit pun pln pun,281 ms,7800 KB,262
25657191,2017-03-20 03:00:00,traff#,263C - Circle of Numbers,Python 3,Accepted,69,403,"#!/usr/local/bin/python3   from  __future__  import  print_function import  sys   DEBUG  =   '-d'   in  sys . argv     def  debug (* args ,   ** kwargs ):      if  DEBUG :          print (* args ,  file = sys . stderr ,   ** kwargs )        return   None       def  main ():     n  =  int ( input ())       cnt  =   [ 0 ]   *   ( n  +   1 )     edge  =   []        for  i  in  range ( 0 ,  n  +   1 ):         edge . append ( set ())        for  i  in  range ( 0 ,   2   *  n ):         s ,  t  =  map ( int ,  input (). split ())         edge [ s ]. add ( t )         edge [ t ]. add ( s )         cnt [ s ]   +=   1         cnt [ t ]   +=   1       c4  =   0      for  i  in  range ( 1 ,  n  +   1 ):          if  cnt [ i ]   ==   4 :             c4  +=   1        if  c4  !=  n :          print (- 1 )      else :          for  v2  in  edge [ 1 ]:              for  v3  in  edge [ 1 ]:                  if  v2  in  edge [ v3 ]:                     mark  =   [ True ]   *   ( n  +   1 )                     mark [ 1 ]   =   False                     mark [ v2 ]   =   False                     res  =   [ 1 ,  v2 ]                     i  =  v3                      try :                          while   True :                             res . append ( i )                             mark [ i ]   =   False                              if  len ( res )   ==  n :                                  print ( ' ' . join ([ str ( x )   for  x  in  res ]))                                 sys . exit ( 0 )                              for  e  in  edge [ i ]:                                  if  e  !=  i  and  mark [ e ]   and  res [- 2 ]   in  edge [ e ]:                                     i  =  e                                      break                              if   not  mark [ i ]:                                  raise   StopIteration                      except   StopIteration :                          pass            print (- 1 )     if  __name__  ==   '__main__' :     main ()",com pln kwd pln kwd pln kwd pln pln pln pun pln str pln kwd pln pun pln pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pln kwd pln kwd pln pun lit pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln lit pln pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln lit pln pln kwd pln pun pln pun pln kwd pun lit pun pln kwd pun pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln lit pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pln kwd pun pln kwd pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln pln kwd pln kwd pln kwd pln pun pln pun pln kwd pln typ pln kwd pln typ pun pln kwd pln pln kwd pun lit pun pln pln kwd pln pun pln str pun pln pun,1870 ms,33800 KB,263
78593419,2020-04-30 21:02:00,thukrake_mera_pyaar,264A - Escape from Stones,Python 3,Accepted,69,403,"#!/usr/local/bin/python3   from  __future__  import  print_function import  sys   DEBUG  =   '-d'   in  sys . argv     def  debug (* args ,   ** kwargs ):      if  DEBUG :          print (* args ,  file = sys . stderr ,   ** kwargs )        return   None       def  main ():     n  =  int ( input ())       cnt  =   [ 0 ]   *   ( n  +   1 )     edge  =   []        for  i  in  range ( 0 ,  n  +   1 ):         edge . append ( set ())        for  i  in  range ( 0 ,   2   *  n ):         s ,  t  =  map ( int ,  input (). split ())         edge [ s ]. add ( t )         edge [ t ]. add ( s )         cnt [ s ]   +=   1         cnt [ t ]   +=   1       c4  =   0      for  i  in  range ( 1 ,  n  +   1 ):          if  cnt [ i ]   ==   4 :             c4  +=   1        if  c4  !=  n :          print (- 1 )      else :          for  v2  in  edge [ 1 ]:              for  v3  in  edge [ 1 ]:                  if  v2  in  edge [ v3 ]:                     mark  =   [ True ]   *   ( n  +   1 )                     mark [ 1 ]   =   False                     mark [ v2 ]   =   False                     res  =   [ 1 ,  v2 ]                     i  =  v3                      try :                          while   True :                             res . append ( i )                             mark [ i ]   =   False                              if  len ( res )   ==  n :                                  print ( ' ' . join ([ str ( x )   for  x  in  res ]))                                 sys . exit ( 0 )                              for  e  in  edge [ i ]:                                  if  e  !=  i  and  mark [ e ]   and  res [- 2 ]   in  edge [ e ]:                                     i  =  e                                      break                              if   not  mark [ i ]:                                  raise   StopIteration                      except   StopIteration :                          pass            print (- 1 )     if  __name__  ==   '__main__' :     main ()",com pln kwd pln kwd pln kwd pln pln pln pun pln str pln kwd pln pun pln pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pln kwd pln kwd pln pun lit pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln lit pln pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln lit pln pln kwd pln pun pln pun pln kwd pun lit pun pln kwd pun pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln lit pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pln kwd pun pln kwd pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln pln kwd pln kwd pln kwd pln pun pln pun pln kwd pln typ pln kwd pln typ pun pln kwd pln pln kwd pun lit pun pln pln kwd pln pun pln str pun pln pun,1934 ms,3100 KB,265
37131468,2018-04-09 23:46:00,Funniestnamez,266C - Below the Diagonal,Python 3,Accepted,38,341,"n  =  int ( input ()) a  =   [] b  =   [ 0 ]   *   ( n + 1 ) c  =   [ 10000 ]   *   ( n + 1 )   for  i  in  range ( 0 , n - 1 ):     p1 , p2  =  list ( map ( int , input (). split ()))     a . append (( p1 , p2 ))     b [ p1 ]   =  max ( b [ p1 ], p2 ) ans  =   []   for  i  in  range ( 1 , n + 1 ):      if  b [ i ]== 0 :   continue     k  =   0      for  j  in  range ( i , n + 1 ):          if  b [ j ]== 0 :             k = j              break      if  k == 0 : break     b [ j ]= b [ i ]     b [ i ]= 0      for  j  in  range ( 0 , n - 1 ):          if  a [ j ][ 0 ]== i :  a [ j ]=( k , a [ j ][ 1 ])     ans . append (( 1 , i , k ))      for  i  in  a :     c [ i [ 1 ]]= min ( c [ i [ 1 ]], i [ 0 ])      for  i  in  range ( 1 , n + 1 ):     k = i      for  j  in  range ( i + 1 , n + 1 ):          if  c [ j ]< c [ i ]:  i = j      if   ( i == k ):   continue     ans . append (( 2 , i , k ))     c [ 0 ]= c [ i ]; c [ i ]= c [ k ]; c [ k ]= c [ 0 ]      print ( len ( ans )) for  i  in  ans : print ( i [ 0 ], i [ 1 ], i [ 2 ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln pun pln pun lit pun pln kwd pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pln kwd pln kwd pln pun lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pln kwd pln kwd pln pun pln pun lit pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun pln pun kwd pln kwd pln pun kwd pun pln pun lit pun pln pun lit pun pln pun lit pun,622 ms,7400 KB,266
3848318,2013-06-08 22:29:00,nab,268C - Beautiful Sets of Points,Python 3,Accepted,3,35,"s = min ( map ( int , input (). split ())) print ( s + 1 ) for  i  in  range ( s + 1 ): print ( i , s - i )",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit pun kwd pln kwd pln pun pln pun lit pun kwd pun pln pun pln pun pln pun,78 ms,0 KB,268
5145480,2013-11-19 00:26:00,yugle7,269A - Magical Boxes,Python 3,Accepted,3,35,"s = min ( map ( int , input (). split ())) print ( s + 1 ) for  i  in  range ( s + 1 ): print ( i , s - i )",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit pun kwd pln kwd pln pun pln pun lit pun kwd pun pln pun pln pun pln pun,904 ms,8900 KB,270
4834870,2013-10-20 22:02:00,yugle7,271C - Secret,Python 3,Accepted,5,97,"n ,  k  =  map ( int ,  input (). split ()) if  n  <   3   *  k :   print (- 1 ) else :     t  =  list ( str ( i )   +   ' '   for  i  in  range ( 1 ,  k  +   1 ))      print ( '' . join ( t )   +   '' . join ( i  *   2   for  i  in  t )   +  t [- 1 ]   *   ( n  -   3   *  k ))",pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln lit pln pun pln pun pln kwd pun lit pun kwd pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln kwd pun str pun pln pun pln pun pln pun pln str pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pln pun pln pun,592 ms,35100 KB,271
54689819,2019-05-26 20:14:00,MajAK,272C - Dima and Staircase,Python 3,Accepted,11,82,"n = int ( input ()) a = list ( map ( int ,  input (). split ())) m = int ( input ()) b =[] for  _  in  range ( m ): 	b . append ( list ( map ( int ,  input (). split ())))   for  x , y  in  b : 	m = max ( a [ 0 ],  a [ x  -   1 ]) 	 print ( m ) 	a [ 0 ]= m + y",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln lit pun pln kwd pun pln pun pln pun lit pun pln pun pln,1310 ms,12900 KB,272
40915949,2018-07-29 14:45:00,yura200253,275C - k-Multiple Free Set,Python 3,Accepted,8,65,"n , k = map ( int , input (). split ()) a = sorted ([ int ( i )   for  i  in  input (). split ()]) b = set ( a ) if  k != 1 :      for  i  in  a :          if  i  in  b :             b . discard ( i * k ) print ( len ( b ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun kwd pln pun lit pun pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun,468 ms,8200 KB,275
54055572,2019-05-13 10:59:00,The_Pacific_Ocean,276C - Little Girl and Maximum Sum,Python 3,Accepted,20,122,"n , m = map ( int , input (). split ()) l = list ( map ( int , input (). split ())) l1 =[ 0 ]*( n ) for  i  in  range ( m ): 	p , q = map ( int , input (). split ())   	l1 [ p - 1 ]+= 1 	 if  q != n : 		l1 [ q ]-= 1   c = 0 for  i  in  range ( n ): 	c += l1 [ i ] 	l1 [ i ]= c l1 . sort () l . sort () a = 0 for  i  in  range ( n ): 	a += l [ i ]* l1 [ i ] print ( a )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun lit pln kwd pln pun pln pun pln pun pln pun lit pln pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,1714 ms,14000 KB,276
20676171,2016-09-17 11:16:00,Amores,277A - Learning Languages,Python 3,Accepted,20,122,"n , m = map ( int , input (). split ()) l = list ( map ( int , input (). split ())) l1 =[ 0 ]*( n ) for  i  in  range ( m ): 	p , q = map ( int , input (). split ())   	l1 [ p - 1 ]+= 1 	 if  q != n : 		l1 [ q ]-= 1   c = 0 for  i  in  range ( n ): 	c += l1 [ i ] 	l1 [ i ]= c l1 . sort () l . sort () a = 0 for  i  in  range ( n ): 	a += l [ i ]* l1 [ i ] print ( a )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun lit pln kwd pln pun pln pun pln pun pln pun lit pln pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,124 ms,500 KB,278
5543911,2013-12-28 20:48:00,yugle7,279C - Ladder,Python 3,Accepted,15,196,"M  =   lambda :  map ( int ,  input (). split ()) L  =   lambda :  list ( map ( int ,  input (). split ())) I  =   lambda :  int ( input ())   n ,  k  =  M () t  =   [ 0 ]   +  L () a ,  b  =  list ( range ( n  +   1 )),  list ( range ( n  +   1 )) for  i  in  range ( n ,   1 ,   - 1 ):      if  t [ i ]   >=  t [ i  -   1 ]:  a [ i  -   1 ]   =  a [ i ]      if  t [ i ]   <=  t [ i  -   1 ]:  b [ i  -   1 ]   =  b [ i ] p  =   [ 'No' ]   *  k for  i  in  range ( k ):     x ,  y  =  M ()      if  b [ a [ x ]]   >=  y :  p [ i ]   =   'Yes' print ( '\n' . join ( p ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun kwd pln kwd pln pun pln pun pln lit pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str kwd pun str pun pln pun pln pun,1060 ms,9500 KB,279
15435242,2016-01-19 08:01:00,sensei11,280A - Rectangle Puzzle,Python 3,Accepted,15,196,"M  =   lambda :  map ( int ,  input (). split ()) L  =   lambda :  list ( map ( int ,  input (). split ())) I  =   lambda :  int ( input ())   n ,  k  =  M () t  =   [ 0 ]   +  L () a ,  b  =  list ( range ( n  +   1 )),  list ( range ( n  +   1 )) for  i  in  range ( n ,   1 ,   - 1 ):      if  t [ i ]   >=  t [ i  -   1 ]:  a [ i  -   1 ]   =  a [ i ]      if  t [ i ]   <=  t [ i  -   1 ]:  b [ i  -   1 ]   =  b [ i ] p  =   [ 'No' ]   *  k for  i  in  range ( k ):     x ,  y  =  M ()      if  b [ a [ x ]]   >=  y :  p [ i ]   =   'Yes' print ( '\n' . join ( p ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun kwd pln kwd pln pun pln pun pln lit pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str kwd pun str pun pln pun pln pun,154 ms,0 KB,281
3819016,2013-06-03 18:53:00,nab,282C - XOR and OR,Python 3,Accepted,1,37,"I = input ; a , b = I (), I (); print ( ""YNEOS"" [ len ( a )!= len ( b ) or ""1"" in  set ( a )^ set ( b ):: 2 ])",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun kwd str kwd pln pun pln pun pln pun pln pun lit pun,140 ms,3900 KB,282
5046407,2013-11-10 21:26:00,yugle7,283A - Cows and Sequence,Python 3,Accepted,1,37,"I = input ; a , b = I (), I (); print ( ""YNEOS"" [ len ( a )!= len ( b ) or ""1"" in  set ( a )^ set ( b ):: 2 ])",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun kwd str kwd pln pun pln pun pln pun pln pun lit pun,2994 ms,26900 KB,284
20409578,2016-09-06 02:49:00,Amores,285C - Building Permutation,Python 3,Accepted,5,36,"input () k = 0 j = 1 for  i  in  sorted ( map ( int , input (). split ())): k += abs ( i - j ); j += 1 print ( k )",pln pun pln pun lit pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pun pln pun,842 ms,24200 KB,285
3672043,2013-05-05 13:30:00,neko13,286A - Lucky Permutation,Python 3,Accepted,5,36,"input () k = 0 j = 1 for  i  in  sorted ( map ( int , input (). split ())): k += abs ( i - j ); j += 1 print ( k )",pln pun pln pun lit pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pun pln pun,140 ms,7300 KB,287
31681242,2017-10-24 15:36:00,yugle7,288C - Polo the Penguin and XOR operation,Python 3,Accepted,11,95,"s  =  n  =  int ( input ())   +   1 t ,  r  =   [],  list ( range ( n ))[::- 1 ] k  =   2   **   20   while  s :      while  k  >=   2   *  s :  k  //=   2     t  =  r [ n  -  s :  n  +  s  -  k ]   +  t     s  =  k  -  s   print ( n  *  n  -  n ) print ( ' ' . join ( map ( str ,  t )))",pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln lit pln kwd pln pun pln kwd pln pun pln lit pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pln kwd pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun,872 ms,71500 KB,288
19507226,2016-07-30 05:38:00,Amores,288A - Polo the Penguin and Strings,Python 3,Accepted,11,95,"s  =  n  =  int ( input ())   +   1 t ,  r  =   [],  list ( range ( n ))[::- 1 ] k  =   2   **   20   while  s :      while  k  >=   2   *  s :  k  //=   2     t  =  r [ n  -  s :  n  +  s  -  k ]   +  t     s  =  k  -  s   print ( n  *  n  -  n ) print ( ' ' . join ( map ( str ,  t )))",pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln lit pln kwd pln pun pln kwd pln pun pln lit pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pln kwd pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun,124 ms,2900 KB,289
5415284,2013-12-12 18:38:00,yugle7,290C - WTF?,Python 3,Accepted,7,57,"foo  =  baz  =   0 quz  =   1 for  bar  in  range ( 1 ,  int ( input ())   +   1 ):     foo  +=  int ( input ())      if  foo  *  quz  <  baz  *  bar :   break     baz ,  quz  =  foo ,  bar print ( baz  /  quz )",pln pun pln pun pln lit pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pun pln pun pln pun,124 ms,0 KB,290
4904749,2013-10-26 17:14:00,yugle7,291C - Network Mask,Python 3,Accepted,21,226,"def  f ( t ):     a ,  b ,  c ,  d  =  map ( int ,  t . split ( '.' ))      return  d  +   ( c  <<   8 )   +   ( b  <<   16 )   +   ( a  <<   24 )   def  g ( x ):     p  =   [ 0 ]   *   4      for  i  in  range ( 4 ):         p [ 3   -  i ]   =  str ( x  %   256 )         x  //=   256      return   '.' . join ( p )   n ,  k  =  map ( int ,  input (). split ()) t  =   [ f ( input ())   for  i  in  range ( n )] p  =   [ 0 ]   *  n x  =   1   <<   31 for  i  in  range ( 32 ):      for  j ,  y  in  enumerate ( t ):          if  y  &  x :  p [ j ]   +=  x      if  len ( set ( p ))   >=  k :   break     x  >>=   1 print (- 1   if  len ( set ( p ))   !=  k  else  g (( 1   <<   32 )   -  x ))",kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln kwd pln str pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln lit pln pun pln lit kwd pln kwd pln pun lit pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit kwd pun lit pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun lit pln pun pln lit pun pln pun pln pun,2682 ms,9500 KB,291
25179308,2017-03-03 18:01:00,felipe17,294C - Shaass and Lights,Python 3,Accepted,17,170,"M , N  =   1000000007 ,   2000 f  =   [ 1 ]* N for  i  in  range ( 1 , N ): 	f [ i ]   =  f [ i - 1 ]* i % M   n , m  =  map ( int , input (). split ()) ar  =  sorted ( map ( int , input (). split ())) br  =   [] for  i  in  range ( 1 , m ): 	d  =  ar [ i ]- ar [ i - 1 ]- 1 	 if  d > 0 : 		br . append ( d ) res  =  pow ( 2 , sum ( br )- len ( br ), M )* f [ n - m ]% M br  =   [ ar [ 0 ]- 1 ]+ br +[ n - ar [- 1 ]] for  b  in  br : 	res  =  res * pow ( f [ b ], M - 2 , M )% M print ( res )",pln pun pln pun pln lit pun pln lit pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pun pln pun,62 ms,4700 KB,294
3669235,2013-05-04 17:12:00,neko13,295A - Greg and Array,Python 3,Accepted,17,170,"M , N  =   1000000007 ,   2000 f  =   [ 1 ]* N for  i  in  range ( 1 , N ): 	f [ i ]   =  f [ i - 1 ]* i % M   n , m  =  map ( int , input (). split ()) ar  =  sorted ( map ( int , input (). split ())) br  =   [] for  i  in  range ( 1 , m ): 	d  =  ar [ i ]- ar [ i - 1 ]- 1 	 if  d > 0 : 		br . append ( d ) res  =  pow ( 2 , sum ( br )- len ( br ), M )* f [ n - m ]% M br  =   [ ar [ 0 ]- 1 ]+ br +[ n - ar [- 1 ]] for  b  in  br : 	res  =  res * pow ( f [ b ], M - 2 , M )% M print ( res )",pln pun pln pun pln lit pun pln lit pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pun pln pun,1531 ms,25900 KB,296
3667449,2013-05-04 12:10:00,neko13,297A - Parity Game,Python 3,Accepted,17,170,"M , N  =   1000000007 ,   2000 f  =   [ 1 ]* N for  i  in  range ( 1 , N ): 	f [ i ]   =  f [ i - 1 ]* i % M   n , m  =  map ( int , input (). split ()) ar  =  sorted ( map ( int , input (). split ())) br  =   [] for  i  in  range ( 1 , m ): 	d  =  ar [ i ]- ar [ i - 1 ]- 1 	 if  d > 0 : 		br . append ( d ) res  =  pow ( 2 , sum ( br )- len ( br ), M )* f [ n - m ]% M br  =   [ ar [ 0 ]- 1 ]+ br +[ n - ar [- 1 ]] for  b  in  br : 	res  =  res * pow ( f [ b ], M - 2 , M )% M print ( res )",pln pun pln pun pln lit pun pln lit pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pun pln pun,78 ms,100 KB,298
15914189,2016-02-09 16:40:00,not_bot_but_POT,293A - Weird Game,Python 3,Accepted,17,170,"M , N  =   1000000007 ,   2000 f  =   [ 1 ]* N for  i  in  range ( 1 , N ): 	f [ i ]   =  f [ i - 1 ]* i % M   n , m  =  map ( int , input (). split ()) ar  =  sorted ( map ( int , input (). split ())) br  =   [] for  i  in  range ( 1 , m ): 	d  =  ar [ i ]- ar [ i - 1 ]- 1 	 if  d > 0 : 		br . append ( d ) res  =  pow ( 2 , sum ( br )- len ( br ), M )* f [ n - m ]% M br  =   [ ar [ 0 ]- 1 ]+ br +[ n - ar [- 1 ]] for  b  in  br : 	res  =  res * pow ( f [ b ], M - 2 , M )% M print ( res )",pln pun pln pun pln lit pun pln lit pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pun pln pun,1746 ms,7200 KB,299
3672450,2013-05-05 16:06:00,Feu,300C - Beautiful Numbers,Python 3,Accepted,18,191,"ans  =   0 mod  =   1000000007 a ,  b ,  n  =  map ( int ,  input (). split ()) s  =  set () for  x  in  range ( 2 ,   1   <<   8 ):     z  =   0      while  x  >   1 :         z  =  z  *   10   +   ( a ,  b )[ x  &   1 ]         x  >>=   1     s . add ( z ) f  =   [ 1 ]   *   ( n  +   1 ) for  i  in  range ( 1 ,  n  +   1 ):     f [ i ]   =  f [ i  -   1 ]   *  i  %  mod for  x  in  range ( n  +   1 ):      if  x  *  a  +   ( n  -  x )   *  b  in  s :         ans  +=  pow ( f [ x ]   *  f [ n  -  x ],  mod  -   2 ,  mod )         ans  %=  mod print ( ans  *  f [ n ]   %  mod )",pln pun pln lit pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln lit pln pun pln lit pun pln pun pln lit pln kwd pln pun pln lit pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun kwd pln kwd pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun,1625 ms,20200 KB,300
19357253,2016-07-23 09:16:00,jerry,301C - Yaroslav and Algorithm,Python 3,Accepted,23,29,"print   (   """"""0??<>1 1??<>2 2??<>3 3??<>4 4??<>5 5??<>6 6??<>7 7??<>8 8??<>9 9??>>??0 ??<>1 ?0>>0? ?1>>1? ?2>>2? ?3>>3? ?4>>4? ?5>>5? ?6>>6? ?7>>7? ?8>>8? ?9>>9? ?>>?? >>?""""""   )",kwd pln pun pln str str str str str str str str str str str str str str str str str str str str str str str pln pun,124 ms,0 KB,301
5342969,2013-12-03 18:04:00,yugle7,301A - Yaroslav and Sequence,Python 3,Accepted,23,29,"print   (   """"""0??<>1 1??<>2 2??<>3 3??<>4 4??<>5 5??<>6 6??<>7 7??<>8 8??<>9 9??>>??0 ??<>1 ?0>>0? ?1>>1? ?2>>2? ?3>>3? ?4>>4? ?5>>5? ?6>>6? ?7>>7? ?8>>8? ?9>>9? ?>>?? >>?""""""   )",kwd pln pun pln str str str str str str str str str str str str str str str str str str str str str str str pln pun,124 ms,0 KB,302
3732161,2013-05-18 09:29:00,asdsteven2,303A - Lucky Permutation Triple,Python 3,Accepted,20,0,,,1310 ms,3100 KB,304
52229124,2019-04-02 14:08:00,vjudge2,305C - Ivan and Powers of Two,Python 3,Accepted,9,60,"n = int ( input ()) a = list ( map ( int , input (). split ())) b = set () for  i  in  a : 	 while  i  in  b : 		b . remove ( i ) 		i += 1 	b . add ( i ) print ( max ( b )- len ( b )+ 1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun lit pun,202 ms,9000 KB,305
3704716,2013-05-12 05:38:00,ergatis,"306C - White, Black and White Again",Python 3,Accepted,29,270,"import  sys   MOD  =  int ( 1e9 )   +   9   def  inv ( n ):      return  pow ( n ,  MOD  -   2 ,  MOD )   def  combo ( n ):     rv  =   [ 0   for  __  in  range ( n  +   1 )]     rv [ 0 ]   =   1      for  k  in  range ( n ):         rv [ k  +   1 ]   =  rv [ k ]   *   ( n  -  k )   %   MOD  *  inv ( k  +   1 )   %  MOD      return  rv   with  sys . stdin  as  fin ,  sys . stdout  as  fout :     n ,  w ,  b  =  map ( int ,  next ( fin ). split ())       combw  =  combo ( w  -   1 )     combb  =  combo ( b  -   1 )       ans  =   0      for  black  in  range ( max ( 1 ,  n  -  w ),  min ( n  -   2 ,  b )   +   1 ):         ans  =   ( ans  +   ( n  -   1   -  black )   *  combw [ n  -  black  -   1 ]   %  MOD  *  combb [ black  -   1 ])   %  MOD        for  f  in  w ,  b :          for  k  in  range ( 1 ,  f  +   1 ):             ans  =  k  *  ans  %  MOD        print ( ans ,  file = fout )",kwd pln pln pln pun pln pun lit pun pln pun pln lit pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln lit pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln kwd pln pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pln pun pln lit pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pln pln kwd pun pln pun pln pun pln pun,203 ms,100 KB,306
20426805,2016-09-07 03:15:00,Amores,311A - The Closest Pair,Python 3,Accepted,20,0,,,77 ms,500 KB,312
73831843,2020-03-20 23:20:00,zapdospops,313C - Ilya and Matrix,Python 3,Accepted,8,55,"n = int ( input ()) a = list ( map ( float ,  input (). split ())) a . sort ( reverse = True ) su = 0 while ( a ):     su  +=  sum ( a )     a = a [: len ( a )// 4 ] print ( int ( su ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun pln pun,920 ms,72900 KB,313
31661333,2017-10-23 22:56:00,yugle7,314A - Sereja and Contest,Python 3,Accepted,8,55,"n = int ( input ()) a = list ( map ( float ,  input (). split ())) a . sort ( reverse = True ) su = 0 while ( a ):     su  +=  sum ( a )     a = a [: len ( a )// 4 ] print ( int ( su ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun pln pun,1714 ms,19500 KB,315
3912564,2013-06-18 10:37:00,GateOne,318E - Balance,Python 3,Accepted,8,55,"n = int ( input ()) a = list ( map ( float ,  input (). split ())) a . sort ( reverse = True ) su = 0 while ( a ):     su  +=  sum ( a )     a = a [: len ( a )// 4 ] print ( int ( su ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun pln pun,734 ms,2400 KB,317
34200628,2018-01-15 18:25:00,.I.,317A - Perfect Pair,Python 3,Accepted,8,55,"n = int ( input ()) a = list ( map ( float ,  input (). split ())) a . sort ( reverse = True ) su = 0 while ( a ):     su  +=  sum ( a )     a = a [: len ( a )// 4 ] print ( int ( su ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun pln pun,124 ms,5500 KB,318
3969657,2013-06-28 09:03:00,GateOne,319C - Kalila and Dimna in the Logging Industry,Python 3,Accepted,15,235,"n  =  int ( input ()) a  =  list ( map ( int ,  input (). split ())) b  =  list ( map ( int ,  input (). split ())) c  =   [ 0 ]   *  n stk  =   [ 0 ] for  i  in  range ( 1 ,  n ):      while  len ( stk )   >   1   and  c [ stk [ 1 ]]   -  c [ stk [ 0 ]]   <=  a [ i ]   *   ( b [ stk [ 0 ]]   -             b [ stk [ 1 ]]):          del  stk [ 0 ]     c [ i ]   =  c [ stk [ 0 ]]   +  a [ i ]   *  b [ stk [ 0 ]]      while  len ( stk )   >   1   and   (( c [ stk [- 1 ]]   -  c [ stk [- 2 ]])   *   ( b [ stk [- 1 ]]   -  b [ i ])   >              ( b [ stk [- 2 ]]   -  b [ stk [- 1 ]])   *   ( c [ i ]   -  c [ stk [- 1 ]])):          del  stk [- 1 ]     stk . append ( i ) print ( c [ n  -   1 ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun lit pun kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun lit pun pln pun pln pun pln pun kwd pun pln pun pln pun pln lit pun,1031 ms,10500 KB,319
41320279,2018-08-08 03:31:00,aro1,319A - Malek Dance Club,Python 3,Accepted,20,0,,,248 ms,0 KB,320
3989826,2013-06-29 11:20:00,GateOne#,322C - Ciel and Robot,Python 3,Accepted,20,240,"a ,  b  =  map ( int ,  input (). split ()) s  =  input (). strip () c2d  =  dict () c2d [ 'U' ]   =   ( 0 ,   1 ) c2d [ 'D' ]   =   ( 0 ,   - 1 ) c2d [ 'L' ]   =   (- 1 ,   0 ) c2d [ 'R' ]   =   ( 1 ,   0 ) dx  =  dy  =   0 for  c  in  s :     dx  +=  c2d [ c ][ 0 ];  dy  +=  c2d [ c ][ 1 ]   ans  =   not  a  and   not  b x  =   0 ;  y  =   0 for  c  in  s :     x  +=  c2d [ c ][ 0 ];  y  +=  c2d [ c ][ 1 ]          xx  =  a  -  x     yy  =  b  -  y      if   (( xx  %  dx  ==   0   and  xx  //  dx  >=   0 )   if  dx  else   not  xx )   and   (( yy  %  dy  ==   0   and  yy  //  dy  >=   0 )   if  dy  else   not  yy )   and   ( not  dx  or   not  dy  or  xx  //  dx  ==  yy  //  dy ):         ans  =   True print ( ""Yes""   if  ans  else   ""No"" )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun lit pun pln lit pun pln pun str pun pln pun pln pun lit pun pln pun lit pun pln pun str pun pln pun pln pun lit pun pln lit pun pln pun str pun pln pun pln pun lit pun pln lit pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pln pun pln kwd pln kwd pln kwd pln pln pun pln lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pln pun pln pun pln pln pun pln pun pln pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln kwd pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln kwd pln kwd pln kwd pln pun pln kwd pln pun kwd pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd kwd pun str pln kwd pln kwd pln str pun,93 ms,100 KB,322
4229195,2013-08-04 21:20:00,jasperH,335C - More Reclamation,Python 3,Accepted,20,240,"a ,  b  =  map ( int ,  input (). split ()) s  =  input (). strip () c2d  =  dict () c2d [ 'U' ]   =   ( 0 ,   1 ) c2d [ 'D' ]   =   ( 0 ,   - 1 ) c2d [ 'L' ]   =   (- 1 ,   0 ) c2d [ 'R' ]   =   ( 1 ,   0 ) dx  =  dy  =   0 for  c  in  s :     dx  +=  c2d [ c ][ 0 ];  dy  +=  c2d [ c ][ 1 ]   ans  =   not  a  and   not  b x  =   0 ;  y  =   0 for  c  in  s :     x  +=  c2d [ c ][ 0 ];  y  +=  c2d [ c ][ 1 ]          xx  =  a  -  x     yy  =  b  -  y      if   (( xx  %  dx  ==   0   and  xx  //  dx  >=   0 )   if  dx  else   not  xx )   and   (( yy  %  dy  ==   0   and  yy  //  dy  >=   0 )   if  dy  else   not  yy )   and   ( not  dx  or   not  dy  or  xx  //  dx  ==  yy  //  dy ):         ans  =   True print ( ""Yes""   if  ans  else   ""No"" )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun lit pun pln lit pun pln pun str pun pln pun pln pun lit pun pln pun lit pun pln pun str pun pln pun pln pun lit pun pln lit pun pln pun str pun pln pun pln pun lit pun pln lit pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pln pun pln kwd pln kwd pln kwd pln pln pun pln lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pln pun pln pun pln pln pun pln pun pln pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln kwd pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln kwd pln kwd pln kwd pln pun pln kwd pln pun kwd pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd kwd pun str pln kwd pln kwd pln str pun,124 ms,0 KB,326
5973115,2014-03-10 11:26:00,yugle7,327C - Magic Five,Python 3,Accepted,4,103,"t ,  k  =  input (),  int ( input ()) n ,  d  =  len ( t ),   1000000007 p  =   ( pow ( 2 ,  k  *  n ,  d )   -   1 )   *  pow ( pow ( 2 ,  n ,  d )   -   1 ,  d  -   2 ,  d )   %  d print (( p  *  sum ( pow ( 2 ,  i ,  d )   for  i  in  range ( n )   if  t [ i ]   in   '05' ))   %  d )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln pun pln kwd pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln str pun pln pun pln pun,748 ms,100 KB,327
5314274,2013-11-30 19:24:00,yugle7,329A - Purification,Python 3,Accepted,20,0,,,124 ms,0 KB,330
27299630,2017-05-23 14:04:00,YazanRi,334C - Secrets,Python 3,Accepted,3,27,"n , a = int ( input ()), 1 while  n % a == 0 : a *= 3 print ( n // a + 1 )",pln pun pln pun pln pun pln pun lit kwd pln pun pln pun lit pun pln pun lit kwd pun pln pun pln pun lit pun,124 ms,0 KB,334
4229195,2013-08-04 21:20:00,jasperH,335C - More Reclamation,Python 3,Accepted,37,347,"r , n  =   [ int ( x )   for  x  in  input (). split ()] cells  =   [[ int ( x )   for  x  in  input (). split ()]   for  i  in  range ( n )] cells . sort () #print(cells) out  =   False   res  =   { True : ""WIN"" , False : ""LOSE"" }   if  len ( cells )   ==   0 :   print ( res [ r % 2   ==   1 ]) else :     out  =   False      #print(cells[0][0] > 1)      #print(cells[-1][0] < r)      for  i  in  range ( 1 , n ):         out  ^=   (( cells [ i ][ 0 ]- cells [ i - 1 ][ 0 ]- 1 )% 2 )   ^   ( cells [ i ][ 1 ]   !=  cells [ i - 1 ][ 1 ])     dif  =  abs (( cells [ 0 ][ 0 ]- 1 )-( r - cells [- 1 ][ 0 ]))      #print(out,dif)     hi , lo  =  max ( cells [ 0 ][ 0 ]- 1 , r - cells [- 1 ][ 0 ]), min ( cells [ 0 ][ 0 ]- 1 , r - cells [- 1 ][ 0 ])      #print(out,dif,lo,hi)      if  lo  >   1 :          if  dif  ==   0 :              print ( res [ out ])          elif  dif  ==   1   and  lo  %   2   ==   0 :              print ( res [ not  out ])          else :              print ( res [ True ])      elif  lo  ==   0 :          if  hi  ==   0 :   print ( res [ out ])          elif  hi  ==   1 :              print ( res [ not  out ])          else :              print ( res [ True ])      elif  lo  ==   1 :          if  hi  ==   1 :              print ( res [ out ])          else :              print ( res [ True ])",pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun com pln pun pln kwd pln pln pun pln pun kwd pun str pun kwd pun str pun pln kwd pln pun pln pun pln pun pln lit pun pln kwd pun pln pun pln pun lit pln pun pln lit pun kwd pun pln pun pln kwd pln com pln com pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun lit pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun lit pun lit pun pln pun pln pun lit pun lit pun pln com pln pun pln pun pln pun pln pun lit pun lit pun lit pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun lit pun pln pun pln pun lit pun lit pun pln com pln kwd pln pun pln lit pun pln kwd pln pun pln lit pun pln kwd pun pln pun pln pun pln kwd pln pun pln lit pln kwd pln pun pln lit pln pun pln lit pun pln kwd pun pln pun kwd pln pun pln kwd pun pln kwd pun pln pun kwd pun pln kwd pln pun pln lit pun pln kwd pln pun pln lit pun pln kwd pun pln pun pln pun pln kwd pln pun pln lit pun pln kwd pun pln pun kwd pln pun pln kwd pun pln kwd pun pln pun kwd pun pln kwd pln pun pln lit pun pln kwd pln pun pln lit pun pln kwd pun pln pun pln pun pln kwd pun pln kwd pun pln pun kwd pun,124 ms,0 KB,335
4280951,2013-08-15 11:57:00,Eurce,336C - Vasily the Bear and Sequence,Python 3,Accepted,20,124,"n  =  int ( input ()) a  =  list ( map ( int ,  input (). split ()))   mxa  =  max ( a ) v  =   1   <<   30 while  v  >  mxa :     v  >>=   1   while   True :     d  =   - 1      for  i  in  range ( n ):          if  a [ i ]   &  v :             d  &=  a [ i ]      if  d  %  v  ==   0 :          break     v  >>=   1   b  =   [ i  for  i  in  a  if  i  &  v ] print ( len ( b )) print ( ' ' . join ( map ( str , b )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln lit pln pun pln lit kwd pln pun pln pun pln pun pln lit pln kwd pln kwd pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pun pln kwd pln pun pln lit pln pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun kwd pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun,1902 ms,9500 KB,336
26336986,2017-04-13 15:35:00,YazanRi,337C - Quiz,Python 3,Accepted,7,80,"n , m , k = map ( int , input (). split ()) if  n - n // k >= m : exit ( print ( m )) mod = int ( 1e9 + 9 ) x = n // k + m - n r = pow ( 2 , x + 1 , mod )- 2 a = r * k + m - x * k print (( a % mod + mod )% mod )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun lit pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun,154 ms,5400 KB,337
23418423,2016-12-30 14:53:00,GShot,339C - Xenia and Weights,Python 3,Accepted,13,112,"a =[ i  for  i , j  in  enumerate ( input (), 1 )   if  j == '1' ] m = int ( input ()) q =[(- 1 , 0 , 0 ,[])] p = 'NO' while  q :     x , y , z , t = q . pop ()      if  z == m :         p = 'YES\n' + ' ' . join ( map ( str , t ))          break      for  i  in  a :          if  i != x  and  i > y :             q . append (( i , i - y , z + 1 , t +[ i ])) print ( p )",pln pun pln kwd pln pun pln kwd pln pun pln pun lit pun pln kwd pln pun str pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun pln pun str kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun str pun str pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun kwd pun pln pun,78 ms,13100 KB,339
4382886,2013-08-30 22:11:00,DanielChau,340C - Tourist Problem,Python 3,Accepted,8,97,"def  gcd ( a , b )   :   return  a  if  b == 0   else  gcd ( b , a % b )   n  =  int ( input ()) l  =  sorted ( map ( int ,  input (). split ())) t  =  sum (( i + i - n + 1 )* l [ i ]   for  i  in  range ( n )) t  =  t + t + sum ( l ) d  =  gcd ( t , n ) print ( t // d , n // d )",kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun,342 ms,7400 KB,340
34497160,2018-01-24 00:42:00,yugle7,340E - Iahub and Permutations,Python 3,Accepted,8,97,"def  gcd ( a , b )   :   return  a  if  b == 0   else  gcd ( b , a % b )   n  =  int ( input ()) l  =  sorted ( map ( int ,  input (). split ())) t  =  sum (( i + i - n + 1 )* l [ i ]   for  i  in  range ( n )) t  =  t + t + sum ( l ) d  =  gcd ( t , n ) print ( t // d , n // d )",kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun,248 ms,5500 KB,341
4547083,2013-09-24 10:46:00,enter.ru#,342C - Cupboard and Balloons,Python 3,Accepted,5,50,"r ,  h  =  map ( int ,  input (). split ()) a  =   1   +   2   *  h  //  r if  h  %  r  >= 3   **   0.5   *  r  /   2 :     a  +=   1 print ( a )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln pun pln kwd pln pun pln pun lit pln pun pln lit pln pun pln pun pln lit pun pln pun pln lit kwd pun pln pun,124 ms,0 KB,342
26328678,2017-04-13 01:52:00,YazanRi,343A - Rational Resistance,Python 3,Accepted,5,50,"r ,  h  =  map ( int ,  input (). split ()) a  =   1   +   2   *  h  //  r if  h  %  r  >= 3   **   0.5   *  r  /   2 :     a  +=   1 print ( a )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln pun pln kwd pln pun pln pun lit pln pun pln lit pln pun pln pun pln lit pun pln pun pln lit kwd pun pln pun,124 ms,5400 KB,344
9287504,2014-12-28 01:11:00,merolish,346A - Alice and Bob,Python 3,Accepted,20,0,,,374 ms,5700 KB,347
69899490,2020-01-31 15:39:00,TKR18,348A - Mafia,Python 3,Accepted,20,0,,,280 ms,9300 KB,349
75238634,2020-04-02 15:36:00,vjudge3,350C - Bombs,Python 3,Accepted,16,248,"n  =  int ( input ()) arr  =   [( abs ( i )   +  abs ( j ),  i ,  j )   for  i ,  j  in  tuple ( map ( int ,  input (). split ())   for  i  in  range ( n ))] arr . sort () ans  =   [] for  z ,  x ,  y  in  arr :     X ,  Y  =  str ( abs ( x )),  str ( abs ( y ))     l ,  r ,  u ,  d  =   ' L' ,   ' R' ,   ' U' ,   ' D'      if  x  <   0 :  l ,  r  =  r ,  l      if  y  <   0 :  u ,  d  =  d ,  u      if  x :          if  y :  ans  +=   [ '1 '   +  X  +  r ,   '1 '   +  Y  +  u ,   '2' ,   '1 '   +  X  +  l ,   '1 '   +  Y  +  d ,   '3' ]          else :  ans  +=   [ '1 '   +  X  +  r ,   '2' ,   '1 '   +  X  +  l ,   '3' ]      else :  ans  +=   [ '1 '   +  Y  +  u ,   '2' ,   '1 '   +  Y  +  d ,   '3' ] print ( len ( ans )) print ( '\n' . join ( ans ))  		  	    		  	 	 						    			",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pun pln str pun pln str pun pln str pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pln kwd pln pun pln kwd pln pun pln pun pln pun str pln pun pln pun pln pun pln str pln pun pln pun pln pun pln str pun pln str pln pun pln pun pln pun pln str pln pun pln pun pln pun pln str pun pln kwd pun pln pun pln pun str pln pun pln pun pln pun pln str pun pln str pln pun pln pun pln pun pln str pun pln kwd pun pln pun pln pun str pln pun pln pun pln pun pln str pun pln str pln pun pln pun pln pun pln str pun kwd pun pln pun pln pun kwd pun str pun pln pun pln pun pln,1526 ms,49300 KB,350
24684420,2017-02-15 05:28:00,vjudge1,352C - Jeff and Rounding,Python 3,Accepted,17,97,"n  =  int ( input ()) a  =  map ( float ,  input (). split ())   s  =   0 m  =   0 for  val  in  a :     s  +=  val - int ( val )     m  +=   ( val - int ( val ))> 0   v  =   1e9 for  i  in  range ( max ( 0 ,  m - n ),  min ( n ,  m )+ 1 ):     v  =  min ( v ,  abs ( s - i ))   print ( '%.3f' % v )        	  	  			 	 	 	   		 	  		  	 	",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pln pun pln lit kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pln pln,216 ms,4800 KB,352
53209790,2019-04-24 06:54:00,daotiennamhlvl,353C - Find Maximum,Python 3,Accepted,9,75,"n  =  int ( input ()) s  =  list ( map ( int ,  input (). split ())) bit  =  input () res ,  m  =   0 ,   0 for  i  in  range ( len ( bit )):      if  bit [ i ]   ==   '1' :         res  =  max ( s [ i ]   +  res ,  m )     m  +=  s [ i ] print ( res )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,404 ms,7300 KB,353
29818015,2017-08-27 06:01:00,lawrence.long,354C - Vasya and Beautiful Arrays,Python 3,Accepted,10,84,"n ,  k  =  map ( int ,  input (). split ()) t  =  set ( map ( int ,  input (). split ())) y  =  x  =  min ( t ) t  =  list ( t ) while   True :      for  i  in  t :          if  i  %  x  >  k :  x  =  i  //   ( i  //  x  +   1 )      if  y  ==  x :   break     y  =  x print ( y )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pun pln pun,358 ms,21100 KB,354
56031762,2019-06-25 12:56:00,once_twice,354A - Vasya and Robot,Python 3,Accepted,10,84,"n ,  k  =  map ( int ,  input (). split ()) t  =  set ( map ( int ,  input (). split ())) y  =  x  =  min ( t ) t  =  list ( t ) while   True :      for  i  in  t :          if  i  %  x  >  k :  x  =  i  //   ( i  //  x  +   1 )      if  y  ==  x :   break     y  =  x print ( y )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pun pln pun,311 ms,5100 KB,355
44927699,2018-10-27 00:05:00,YazanRi,356C - Compartments,Python 3,Accepted,32,255,"a  =   [ 0 ]   *   5 tot ,  ans  =   0 ,   0   input () for  x  in  list ( map ( int ,  input (). split ())):   a [ x ]   +=   1   tot  +=  x   if  tot  <   3   or  tot  ==   5 :   exit ( print (- 1 ))   mn  =  min ( a [ 1 ],  a [ 2 ]) a [ 1 ]   -=  mn a [ 2 ]   -=  mn a [ 3 ]   +=  mn ans  +=  mn   if  a [ 1 ]:   add  =  a [ 1 ]   //   3   a [ 1 ]   %=   3   a [ 3 ]   +=  add   ans  +=   2   *  add   ans  +=   1   if  a [ 1 ]   ==   1   and  a [ 3 ]   else   2   if  a [ 1 ]   else   0   if  a [ 2 ]:   add  =  a [ 2 ]   //   3   a [ 2 ]   %=   3   a [ 3 ]   +=   2   *  add   ans  +=   2   *  add   ans  +=   1   if  a [ 2 ]   ==   1   and  a [ 4 ]   else   2   if  a [ 2 ]   else   0   print ( ans )",pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln lit pun pln lit pln pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln pun kwd pun lit pun pln pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pln pun lit pun pln pun pln pln pun lit pun pln pun pln pln pun pln pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln pln pun pln lit pln pun pln pln pun pln lit pln kwd pln pun lit pun pln pun pln lit pln kwd pln pun lit pun pln kwd pln lit pln kwd pln pun lit pun pln kwd pln lit pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln lit pln pun pln pln pun pln lit pln pun pln pln pun pln lit pln kwd pln pun lit pun pln pun pln lit pln kwd pln pun lit pun pln kwd pln lit pln kwd pln pun lit pun pln kwd pln lit pln kwd pun pln pun,546 ms,14200 KB,356
78941108,2020-05-04 09:58:00,_viru_,356A - Knight Tournament,Python 3,Accepted,32,255,"a  =   [ 0 ]   *   5 tot ,  ans  =   0 ,   0   input () for  x  in  list ( map ( int ,  input (). split ())):   a [ x ]   +=   1   tot  +=  x   if  tot  <   3   or  tot  ==   5 :   exit ( print (- 1 ))   mn  =  min ( a [ 1 ],  a [ 2 ]) a [ 1 ]   -=  mn a [ 2 ]   -=  mn a [ 3 ]   +=  mn ans  +=  mn   if  a [ 1 ]:   add  =  a [ 1 ]   //   3   a [ 1 ]   %=   3   a [ 3 ]   +=  add   ans  +=   2   *  add   ans  +=   1   if  a [ 1 ]   ==   1   and  a [ 3 ]   else   2   if  a [ 1 ]   else   0   if  a [ 2 ]:   add  =  a [ 2 ]   //   3   a [ 2 ]   %=   3   a [ 3 ]   +=   2   *  add   ans  +=   2   *  add   ans  +=   1   if  a [ 2 ]   ==   1   and  a [ 4 ]   else   2   if  a [ 2 ]   else   0   print ( ans )",pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln lit pun pln lit pln pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln pun kwd pun lit pun pln pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pln pun lit pun pln pun pln pln pun lit pun pln pun pln pln pun pln pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln pln pun pln lit pln pun pln pln pun pln lit pln kwd pln pun lit pun pln pun pln lit pln kwd pln pun lit pun pln kwd pln lit pln kwd pln pun lit pun pln kwd pln lit pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln lit pln pun lit pun pln pun pln lit pln pun pln pln pun pln lit pln pun pln pln pun pln lit pln kwd pln pun lit pun pln pun pln lit pln kwd pln pun lit pun pln kwd pln lit pln kwd pln pun lit pun pln kwd pln lit pln kwd pun pln pun,1715 ms,14900 KB,357
41526531,2018-08-12 15:14:00,yugle7,358C - Dima and Containers,Python 3,Accepted,17,213,"i ,  n  =   0 ,  int ( input ()) s  =   [ 'pushQueue' ]   *  n a ,  b ,  c  =   ' popQueue' ,   ' popStack' ,   ' popBack' p  =   [ '0' ,   '1'   +  a ,   '2'   +  a  +  b ,   '3'   +  a  +  b  +  c ] t  =   [] for  j  in  range ( n ):     x  =  int ( input ())      if  x :         t . append (( x ,  j ))          continue     t  =  sorted ( k  for  x ,  k  in  sorted ( t )[- 3 :])     k  =  len ( t )      if  k  >   0 :  s [ i :  t [ 0 ]]   =   [ 'pushStack' ]   *   ( t [ 0 ]   -  i )      if  k  >   1 :  s [ t [ 1 ]]   =   'pushStack'      if  k  >   2 :  s [ t [ 2 ]]   =   'pushBack'     i ,  t ,  s [ j ]   =  j  +   1 ,   [],  p [ k ] print ( '\n' . join ( s ))",pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun str pun pln pun pln pln pun pln pun pln pun pln str pun pln str pun pln str pln pun pln pun str pun pln str pln pun pln pun pln str pln pun pln pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln pun pln pun lit pun pln pun pln pun str pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln pun lit pun pln pun pln str pln kwd pln pun pln lit pun pln pun pln pun lit pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun,545 ms,4000 KB,358
5460922,2013-12-18 17:35:00,yugle7,359C - Prime Number,Python 3,Accepted,11,92,"n ,  x  =  map ( int ,  input (). split ()) t  =  list ( map ( int ,  input (). split ())) b  =  max ( t ) k  =  t . count ( b ) r  =  sum ( t ) s  =  r  -  b while  k  %  x  ==   0 :     b  -=   1     s  +=   1     k  =  k  //  x  +  t . count ( b ) print ( pow ( x ,  min ( r ,  s ),   1000000007 ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pun pln pun pln lit pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pun,109 ms,9500 KB,359
41626661,2018-08-15 17:52:00,NIkhIL_,363C - Fixing Typos,Python 3,Accepted,6,74,"a  =   """" for  c  in  input ():    if  len ( a )   >   2   and  a [- 3 ]   ==  a [- 2 ]   and  a [- 1 ]   ==  c  or  len ( a )   >   1   and  a [- 2 ]   ==  a [- 1 ]   ==  c :      continue   a  +=  c print ( a )",pln pun pln str kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun lit pun pln pun pln pun lit pun pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln kwd pln pun pln kwd pun pln pun,311 ms,700 KB,363
5414022,2013-12-12 14:05:00,yugle7,366C - Dima and Salad,Python 3,Accepted,14,242,"from  bisect  import  bisect_right n ,  k  =  map ( int ,  input (). split ()) t  =  sorted (( u  -  k  *  v ,  v )   for  u ,  v  in  zip (*( map ( int ,  input (). split ()),  map ( int ,  input (). split ())))) m  =  n  -  bisect_right ( t ,   ( 0 ,   0 )) l ,  p ,  t  =   0 ,   [ 0 ]   *   100001 ,  t [::   - 1 ] for  d ,  v  in  t [:  m ]:      for  j  in  range ( l ,   0 ,   - 1 ):          if  p [ j ]:  p [ j  +  d ]   =  max ( p [ j  +  d ],  p [ j ]   +  v )     p [ d ]   =  max ( p [ d ],  p [ 0 ]   +  v )     l  +=  d for  d ,  v  in  t [ m :   ]:      for  j  in  range (-  d ,  l  +   1 ):          if  p [ j ]:  p [ j  +  d ]   =  max ( p [ j  +  d ],  p [ j ]   +  v ) print ( p [ 0 ]   *  k  if  p [ 0 ]   else   - 1 )",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun lit pun pln pun pln lit pun pln pun pln pun lit pun kwd pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit pun pln pun pln kwd pln pun lit pun pln kwd pln pun lit pun,78 ms,500 KB,366
47647355,2018-12-28 18:57:00,MarcoXerox,367C - Sereja and the Arrangement of Numbers,Python 3,Accepted,4,117,"import  sys ,  bisect ( n ,  m ),   * s  =   [ map ( int ,  s . split ())   for  s  in  sys . stdin . readlines ()] g  =   [ n  *   ( n  -   1 )   //   2   +   ( n  -   1 )   %   2   *   ( n  //   2   -   1 )   for  n  in  range ( 1 ,   2002 )] print ( sum ( sorted ([ w  for  _ ,  w  in  s ],  reverse = True )[: min ( m ,  bisect . bisect_left ( g ,  n ))]))",kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln lit pln pun pln lit pun pln kwd pln kwd pln pun lit pun pln lit pun kwd pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun,358 ms,30200 KB,367
16322955,2016-02-25 11:33:00,orailly,367A - Sereja and Algorithm,Python 3,Accepted,20,0,,,638 ms,8500 KB,368
79690816,2020-05-10 23:58:00,stefdasca,370C - Mittens,Python 3,Accepted,13,105,"n ,  m  =  map ( int ,  input (). split ()) arr  =  list ( map ( int ,  input (). split ())) arr . sort () mit  =   1 col  =   1 for  i  in  range ( 1 ,  m + 1 ):   t  = arr . count ( i )    if  t  >  col :     mit  =  i     col  =  t print ( n - max ( 0 ,  col -( n - col ))) for  i  in  range ( n ):    print ( arr [( i + col )   %  n ],  arr [ i ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pln pun pln kwd pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,124 ms,6900 KB,370
21267853,2016-10-08 01:23:00,Amores,371C - Hamburgers,Python 3,Accepted,17,145,"F = str . count I = input R = lambda : map ( int , I (). split ()) p = I () B = F ( p , 'B' ) S = F ( p , 'S' ) C = F ( p , 'C' ) b , s , c = R () q , w , e = R () p = int ( I ()) l =- 1 r = 10 ** 20 while  l < r - 1 : 	m =( l + r )// 2 	 if  q * max ( 0 , B * m - b )+ w * max ( 0 , S * m - s )+ e * max ( 0 , C * m - c )<= p : l = m 	 else : r = m print ( l )",pln pun pln pun pln pln pun pln pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit pun lit kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln kwd pun pln pun,62 ms,4500 KB,371
77621415,2020-04-22 11:13:00,nocreative1,372A - Counting Kangaroos is Fun,Python 3,Accepted,17,145,"F = str . count I = input R = lambda : map ( int , I (). split ()) p = I () B = F ( p , 'B' ) S = F ( p , 'S' ) C = F ( p , 'C' ) b , s , c = R () q , w , e = R () p = int ( I ()) l =- 1 r = 10 ** 20 while  l < r - 1 : 	m =( l + r )// 2 	 if  q * max ( 0 , B * m - b )+ w * max ( 0 , S * m - s )+ e * max ( 0 , C * m - c )<= p : l = m 	 else : r = m print ( l )",pln pun pln pun pln pln pun pln pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit pun lit kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln kwd pun pln pun,997 ms,14600 KB,373
14189920,2015-11-10 23:36:00,vinitgandhi007,376C - Divisible by Seven,Python 3,Accepted,14,138,"a = input () cnt =[ 0 ]* 10 for  i  in   ( 1 , 6 , 8 , 9 ): 	cnt [ i ]=- 1 for  i  in  a : 	cnt [ int ( i )]+= 1 mod  =   [ 1869 ,   1968 ,   9816 ,   6198 ,   1698 ,   1986 ,   1896 ,   1869 ] modCnt = 0 for  i  in  range ( 1 , 10 ): 	 for  j  in  range ( cnt [ i ]): 		modCnt =   ( modCnt * 3   +  i )% 7 	 print ( str ( i )* cnt [ i ],  end = '' ) modCnt =( 10000 * modCnt )% 7 print ( str ( mod [ 7 - modCnt ])+ '0' * cnt [ 0 ])",pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun lit pun lit pun lit pun lit pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun lit pln pun pln pun lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln pun lit kwd pln kwd pln pun lit pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun lit pln kwd pun pln pun pln pun pln pun pln pun pln pun str pun pln pun lit pun pln pun lit kwd pun pln pun pln pun lit pun pln pun str pun pln pun lit pun,686 ms,5100 KB,376
49611743,2019-02-08 04:46:00,HYPERHYPERHYPERCUBELOVER#,379C - New Year Ratings Change,Python 3,Accepted,7,73,"n  =  int ( input ()) a  =  list ( map ( int ,  input (). split ())) t  =   0 for  x  in  sorted ( range ( n ),  key  =   lambda  t :  a [ t ]): 	t  =  max ( t  +   1 ,  a [ x ]) 	a [ x ]   =  t print ( ' ' . join ( map ( str ,  a )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun,639 ms,27300 KB,379
15914314,2016-02-09 16:42:00,not_bot_but_POT,380A - Sereja and Prefixes,Python 3,Accepted,7,73,"n  =  int ( input ()) a  =  list ( map ( int ,  input (). split ())) t  =   0 for  x  in  sorted ( range ( n ),  key  =   lambda  t :  a [ t ]): 	t  =  max ( t  +   1 ,  a [ x ]) 	a [ x ]   =  t print ( ' ' . join ( map ( str ,  a )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun,779 ms,25100 KB,381
39539266,2018-06-23 13:58:00,MajAK,382C - Arithmetic Progression,Python 3,Accepted,28,264,"n = int ( input ()) a = list ( map ( int , input (). split ())) a . sort () cnt = 0 if  n == 1 : 	 print (- 1 ) 	exit () if  n == 2 : 	 if (( a [ 1 ]- a [ 0 ])% 2 == 0   and  a [ 1 ]!= a [ 0 ]): 		 print ( 3 ) 		 print ( 2 * a [ 0 ]- a [ 1 ],( a [ 0 ]+ a [ 1 ])// 2 , 2 * a [ 1 ]- a [ 0 ]) 		exit () d = sorted ([ a [ i ]- a [ i - 1 ]   for  i  in  range ( 1 ,  n )]) if  len ( set ( d ))== 1 :      if  d [ 0 ]!= 0 :          print ( 2 )          print ( a [ 0 ]- d [ 0 ],  a [- 1 ]+ d [ 0 ])      else :          print ( 1 )          print ( a [ 0 ])     exit () if  len ( set ( d ))   >   2   or  d [- 1 ]!= 2 * d [- 2 ]:      print ( 0 ) else :      print ( 1 )      for  i  in  range ( 1 ,  n ):          if  a [ i ]- a [ i - 1 ]   !=  d [ 0 ]:              print ( a [ i - 1 ]+ d [ 0 ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun lit pun pln kwd pun lit pun pln pun kwd pln pun lit pun pln kwd pun pln pun lit pun pln pun lit pun lit pun lit pln kwd pln pun lit pun pln pun lit pun pln kwd pun lit pun pln kwd pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun lit pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun kwd pln pun pln pun pln pun lit pun pln kwd pln pun lit pun lit pun pln kwd pun lit pun pln kwd pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln kwd pun pln kwd pun lit pun pln kwd pun pln pun lit pun pln pun kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun lit pun lit pun pln pun lit pun pln kwd pun lit pun kwd pun pln kwd pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pun pln pun pln pun lit pun pln pun lit pun,249 ms,7900 KB,382
5953130,2014-03-06 22:51:00,yugle7,383A - Milking cows,Python 3,Accepted,28,264,"n = int ( input ()) a = list ( map ( int , input (). split ())) a . sort () cnt = 0 if  n == 1 : 	 print (- 1 ) 	exit () if  n == 2 : 	 if (( a [ 1 ]- a [ 0 ])% 2 == 0   and  a [ 1 ]!= a [ 0 ]): 		 print ( 3 ) 		 print ( 2 * a [ 0 ]- a [ 1 ],( a [ 0 ]+ a [ 1 ])// 2 , 2 * a [ 1 ]- a [ 0 ]) 		exit () d = sorted ([ a [ i ]- a [ i - 1 ]   for  i  in  range ( 1 ,  n )]) if  len ( set ( d ))== 1 :      if  d [ 0 ]!= 0 :          print ( 2 )          print ( a [ 0 ]- d [ 0 ],  a [- 1 ]+ d [ 0 ])      else :          print ( 1 )          print ( a [ 0 ])     exit () if  len ( set ( d ))   >   2   or  d [- 1 ]!= 2 * d [- 2 ]:      print ( 0 ) else :      print ( 1 )      for  i  in  range ( 1 ,  n ):          if  a [ i ]- a [ i - 1 ]   !=  d [ 0 ]:              print ( a [ i - 1 ]+ d [ 0 ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun lit pun pln kwd pun lit pun pln pun kwd pln pun lit pun pln kwd pun pln pun lit pun pln pun lit pun lit pun lit pln kwd pln pun lit pun pln pun lit pun pln kwd pun lit pun pln kwd pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun lit pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun kwd pln pun pln pun pln pun lit pun pln kwd pln pun lit pun lit pun pln kwd pun lit pun pln kwd pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun lit pun pln kwd pun pln kwd pun lit pun pln kwd pun pln pun lit pun pln pun kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun lit pun lit pun pln pun lit pun pln kwd pun lit pun kwd pun pln kwd pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pun pln pun pln pun lit pun pln pun lit pun,109 ms,1000 KB,384
7017189,2014-07-05 20:59:00,Shiz0,387C - George and Number,Python 3,Accepted,12,99,a  =  input () i  =   0 ;  ans  =   1 while  i  <  len ( a ):     i  +=   1     c  =  i - 1      while  i  <  len ( a )   and  a [ i ]   ==   '0' :         i  +=   1      if   ( c  >  i - c )   or   ( c  ==  i - c  and  a [: c ]   >=  a [ c : i ]):         ans  +=   1      else :         ans  =   1 print ( ans ),pln pun pln pun pln pun pln lit pun pln pun pln lit kwd pln pun pln pun pln pun pln pun pln lit pln pun pln pun lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln str pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln lit kwd pun pln pun,155 ms,0 KB,387
54828440,2019-05-30 10:44:00,spellstaker,388C - Fox and Card Game,Python 3,Accepted,14,116,"n  =  int ( input ()) a  =  b  =   0 s  =   [] for  _  in  range ( n ):     l  =   [* map ( int ,  input (). split ())][ 1 :]     m  =  len ( l )      if  m  &   1 :         s . append ( l [ m // 2 ])     a  +=  sum (( l [: m // 2 ]))     b  +=  sum (( l [( m  +   1 )// 2 :])) s . sort ( reverse  =   True ) a  +=  sum ( s [:: 2 ]) b  +=  sum ( s [ 1 :: 2 ]) print ( a ,  b )",pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pun lit pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun lit pun kwd pun pln pun pln pun,109 ms,0 KB,388
8807640,2014-11-23 02:44:00,nab,388A - Fox and Box Accumulation,Python 3,Accepted,20,0,,,61 ms,0 KB,389
51893194,2019-03-27 13:16:00,UTMoonlight,392A - Blocked Points,Python 3,Accepted,20,0,,,109 ms,0 KB,393
5962108,2014-03-08 15:08:00,yugle7,394C - Dominoes,Python 3,Accepted,11,211,"n ,  m  =  map ( int ,  input (). split ()) k ,  d  =  n  *  m ,   2   *  m c  =   { '11' :   0 ,   '01' :   0 ,   '10' :   0 } for  i  in  range ( n ):     t  =  input ()      for  i  in   ( '11' ,   '01' ,   '10' ):  c [ i ]   +=  t . count ( i ) a ,  b  =  c [ '11' ],  c [ '10' ]   +  c [ '01' ] t  =   [ '11' ]   *  a  +   ( b  //   2 )   *   [ '10' ,   '01' ]   +   [ '10' ]   *   ( b  &   1 )   +   [ '00' ]   *   ( k  -  a  -  b ) for  i  in  range ( 0 ,  k ,  d ):      print ( ' ' . join ( t [ i :  i  +  m ]))      print ( ' ' . join ( t [ i  +  d  -   1 :  i  +  m  -   1 :   - 1 ]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pln pun pln pun str pun pln lit pun pln str pun pln lit pun pln str pun pln lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun str pun pln str pun pln str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun str pun pln pun pln pun str pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun str pun pln str pun pln pun pln pun str pun pln pun pln pun pln pun pln lit pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun lit pun,171 ms,7800 KB,394
74286381,2020-03-25 15:01:00,CodeBreaker003,396A - On Number of Decompositions into Multipliers,Python 3,Accepted,11,211,"n ,  m  =  map ( int ,  input (). split ()) k ,  d  =  n  *  m ,   2   *  m c  =   { '11' :   0 ,   '01' :   0 ,   '10' :   0 } for  i  in  range ( n ):     t  =  input ()      for  i  in   ( '11' ,   '01' ,   '10' ):  c [ i ]   +=  t . count ( i ) a ,  b  =  c [ '11' ],  c [ '10' ]   +  c [ '01' ] t  =   [ '11' ]   *  a  +   ( b  //   2 )   *   [ '10' ,   '01' ]   +   [ '10' ]   *   ( b  &   1 )   +   [ '00' ]   *   ( k  -  a  -  b ) for  i  in  range ( 0 ,  k ,  d ):      print ( ' ' . join ( t [ i :  i  +  m ]))      print ( ' ' . join ( t [ i  +  d  -   1 :  i  +  m  -   1 :   - 1 ]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pln pun pln pun str pun pln lit pun pln str pun pln lit pun pln str pun pln lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun str pun pln str pun pln str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun str pun pln pun pln pun str pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun str pun pln str pun pln pun pln pun str pun pln pun pln pun pln pun pln lit pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun lit pun,389 ms,400 KB,397
5963776,2014-03-08 19:54:00,yugle7,398A - Cards,Python 3,Accepted,11,211,"n ,  m  =  map ( int ,  input (). split ()) k ,  d  =  n  *  m ,   2   *  m c  =   { '11' :   0 ,   '01' :   0 ,   '10' :   0 } for  i  in  range ( n ):     t  =  input ()      for  i  in   ( '11' ,   '01' ,   '10' ):  c [ i ]   +=  t . count ( i ) a ,  b  =  c [ '11' ],  c [ '10' ]   +  c [ '01' ] t  =   [ '11' ]   *  a  +   ( b  //   2 )   *   [ '10' ,   '01' ]   +   [ '10' ]   *   ( b  &   1 )   +   [ '00' ]   *   ( k  -  a  -  b ) for  i  in  range ( 0 ,  k ,  d ):      print ( ' ' . join ( t [ i :  i  +  m ]))      print ( ' ' . join ( t [ i  +  d  -   1 :  i  +  m  -   1 :   - 1 ]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pln pun pln pun str pun pln lit pun pln str pun pln lit pun pln str pun pln lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun str pun pln str pun pln str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun str pun pln pun pln pun str pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun str pun pln str pun pln pun pln pun str pun pln pun pln pun pln pun pln lit pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun lit pun,264 ms,600 KB,399
5999918,2014-03-12 06:03:00,hza,400C - Inna and Huge Candy Matrix,Python 3,Accepted,19,140,"n , m , x , y , z , p = map ( int , input (). split ()) x %= 4 y %= 2 z %= 4 tn , tm = n , m   while  p >= 1 :     n , m = tn , tm     p -= 1     sx , sy = map ( int , input (). split ())      for  i  in  range ( 0 , x ):         sx , sy = sy , n - sx + 1         n , m = m , n      if  y > 0 :         sy = m - sy + 1      for  i  in  range ( 0 , z ):         sx , sy = m - sy + 1 , sx         n , m = m , n      print ( sx , sy )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit pln pun lit pln pun pln pun pln pun pln pln kwd pln pun lit pun pln pun pln pun pln pun pln pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pln kwd pln pun lit pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln pun pln pun pln pun pln pln kwd pun pln pun pln pun,1653 ms,0 KB,400
47251191,2018-12-19 11:20:00,TangentDay,401C - Team,Python 3,Accepted,3,65,"n , m  =  map ( int , input (). split ()) n += 1 print (- 1   if  m < n - 2   or   2 * n < m  else   '0' . join ( '1' *( m // n +( i % n < m % n ))   for  i  in  range (- 1 , n - 1 )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pun lit pln kwd pln pun pln pun lit pln kwd pln lit pun pln pun pln kwd pln str pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun lit pun,561 ms,20000 KB,401
6039443,2014-03-16 21:03:00,citrux,402C - Searching for Graph,Python 3,Accepted,5,63,"t  =  int ( input ()) for  _  in  range ( t ):     n ,  p  =  map ( int ,  input (). split ())      for  i  in  range ( 2 * n + p ):          print ( i % n  +   1 ,   ( i  +  i  //  n  +   1 )% n  +   1 )",pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln kwd pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun,77 ms,0 KB,402
36751249,2018-03-30 18:16:00,vjudge5,404C - Restore Graph,Python 3,Accepted,21,175,"n , k = map ( int , input (). split ()) d = zip (  list ( map ( int , input (). split ())), range ( 0 , n )   ) d = sorted ( d )   last = 0 du =[ 0 ]* n fa =[ 0 ]* n flag = 1 for  j  in  range ( 1 , n ):      while  last < j  and   (  du [ last ]== k  or  d [ last ][ 0 ]+ 1 != d [ j ][ 0 ]   ):         last += 1      if  last == j  or  d [ 0 ][ 0 ]!= 0 :          print (- 1 )          break     fa [ j ]= last     du [ j ]+= 1     du [ last ]+= 1 else :      print ( n - 1 )      for  j  in  range ( 1 , n ):          print ( d [ fa [ j ]][ 1 ]+ 1 , d [ j ][ 1 ]+ 1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit pln pun lit pun pln pln pun lit pun pln pln pun lit kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun lit pun lit pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pun pln kwd pln pun lit pun lit pun lit pun pln kwd pun lit pun pln kwd pln pun pln pun pln pln pun pln pun lit pln pun pln pun lit kwd pun pln kwd pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun,998 ms,18300 KB,404
79656866,2020-05-10 16:27:00,bergus,405C - Unusual Product,Python 3,Accepted,19,111,"from  sys  import  stdin   n  =  int ( stdin . readline ()) dot  =   0 j  =   0 for  i  in  range ( 0 ,   2   *  n ,   2 ):     line  =  stdin . readline ()      if  line [ i ]   ==   '1' :         dot  ^=   1   out  =   [] stdin . readline () for  query  in  stdin :      if  len ( query )   <   3 :         out . append ( '1'   if  dot  else   '0' )      else :         dot  ^=   1   print ( '' . join ( out ))",kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit kwd pln kwd pln pun lit pun pln lit pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln str pun pln pun pln lit pln pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun str pln kwd pln kwd pln str pun pln kwd pun pln pun pln lit pln kwd pun str pun pln pun pln pun,467 ms,14900 KB,405
6196220,2014-03-31 12:31:00,hza,407A - Triangle,Python 3,Accepted,19,111,"from  sys  import  stdin   n  =  int ( stdin . readline ()) dot  =   0 j  =   0 for  i  in  range ( 0 ,   2   *  n ,   2 ):     line  =  stdin . readline ()      if  line [ i ]   ==   '1' :         dot  ^=   1   out  =   [] stdin . readline () for  query  in  stdin :      if  len ( query )   <   3 :         out . append ( '1'   if  dot  else   '0' )      else :         dot  ^=   1   print ( '' . join ( out ))",kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit kwd pln kwd pln pun lit pun pln lit pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln str pun pln pun pln lit pln pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun str pln kwd pln kwd pln str pun pln kwd pun pln pun pln lit pln kwd pun str pun pln pun pln pun,514 ms,0 KB,408
7215977,2014-07-24 15:27:00,synapse,409C - Magnum Opus,Python 3,Accepted,2,38,"a , b , c , d , e = map ( int , input (). split ()) print ( min ( a , b , c // 2 , d // 7 , e // 4 ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun,77 ms,0 KB,409
6408830,2014-04-18 21:09:00,yugle7,411C - Kicker,Python 3,Accepted,9,143,"def  f ():     a ,  b  =  map ( int ,  input (). split ())     A ,  B  =  map ( int ,  input (). split ())      return   (( a ,  B ),   ( A ,  b )) def  g ( u ,  v ):   return  u [ 0 ]   >  v [ 1 ]   and  u [ 1 ]   >  v [ 0 ] x ,  y  =  f (),  f () if  any ( all ( g ( j ,  i )   for  i  in  y )   for  j  in  x ):   print ( 'Team 1' ) elif  all ( any ( g ( i ,  j )   for  i  in  y )   for  j  in  x ):   print ( 'Team 2' ) else :   print ( 'Draw' )",kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln kwd pln pun lit pun pln pun pln pun lit pun pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln kwd pun str pun kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln kwd pun str pun kwd pun pln kwd pun str pun,62 ms,0 KB,411
71590553,2020-02-22 09:20:00,kashishmish9911,412C - Pattern,Python 3,Accepted,12,91,"n  =  int ( input ()) s  =   [ input ()   for  _  in  range ( n )] c  =  list () for  t  in  map ( set ,  zip (* s )): 	t . discard ( '?' ) 	 if   not  len ( t ): 		c . append ( 'x' ) 	 elif  len ( t )   <   2 : 		c . append ( t . pop ()) 	 else : 		c . append ( '?' ) print ( '' . join ( c ))",pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln kwd pln pun pln pun pln pun pln pun str pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun str pun kwd pun str pun pln pun pln pun,218 ms,4600 KB,412
6478017,2014-04-26 13:03:00,yugle7,413C - Jeopardy!,Python 3,Accepted,7,86,"n ,  m  =  map ( int ,  input (). split ()) a  =  list ( map ( int ,  input (). split ())) b  =   [ a [ i  -   1 ]   for  i  in  map ( int ,  input (). split ())] b . sort ( reverse  =   True ) s  =  sum ( a )   -  sum ( b ) for  i  in  b :  s  +=  s  if  i  <  s  else  i print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln kwd pln kwd pun pln pun,77 ms,0 KB,413
16620468,2016-03-09 19:26:00,biGinNer,414A - Mashmokh and Numbers,Python 3,Accepted,7,86,"n ,  m  =  map ( int ,  input (). split ()) a  =  list ( map ( int ,  input (). split ())) b  =   [ a [ i  -   1 ]   for  i  in  map ( int ,  input (). split ())] b . sort ( reverse  =   True ) s  =  sum ( a )   -  sum ( b ) for  i  in  b :  s  +=  s  if  i  <  s  else  i print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln kwd pln kwd pun pln pun,280 ms,2800 KB,415
6665717,2014-05-21 11:19:00,su_58,416C - Booking System,Python 3,Accepted,23,159,"n = int ( input ()) x =[] for  i  in  range ( n ):     c , p = map ( int ,  input (). split ())     x +=[( p , c , i )] k = int ( input ()) r = list ( map ( int ,  input (). split ())) s = 0 q =[] for   ( v , c , a )   in  reversed ( sorted ( x )):     p =- 1     u = 10000      for   ( j , z )   in  enumerate ( r ):          if  c <= z < u :             p = j             u = z      if  p >- 1 :         r [ p ]= 0         q +=[( a , p )]         s += v print ( len ( q ), s ) for   ( i , j )   in  q :      print ( i + 1 ,  j + 1 )",pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pln pun lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pln kwd pln pun lit pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln kwd pln pun pln kwd pun pln pun lit pun pln pun lit pun,249 ms,100 KB,416
6386357,2014-04-17 19:51:00,ZhouYuChen,418A - Football,Python 3,Accepted,23,159,"n = int ( input ()) x =[] for  i  in  range ( n ):     c , p = map ( int ,  input (). split ())     x +=[( p , c , i )] k = int ( input ()) r = list ( map ( int ,  input (). split ())) s = 0 q =[] for   ( v , c , a )   in  reversed ( sorted ( x )):     p =- 1     u = 10000      for   ( j , z )   in  enumerate ( r ):          if  c <= z < u :             p = j             u = z      if  p >- 1 :         r [ p ]= 0         q +=[( a , p )]         s += v print ( len ( q ), s ) for   ( i , j )   in  q :      print ( i + 1 ,  j + 1 )",pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pln pun lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pln kwd pln pun lit pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln kwd pln pun pln kwd pun pln pun lit pun pln pun lit pun,451 ms,31900 KB,417
55716777,2019-06-18 16:06:00,once_twice,424C - Magic Formulas,Python 3,Accepted,8,90,"n , a = int ( input ()), list ( map ( int , input (). split ())) x , s =[ 0 ]*( n + 1 ), 0 for  i  in  range ( 1 , n + 1 ): 	x [ i ]= i ^ x [ i - 1 ] 	 if   ( n // i )% 2 : s ^= x [ i - 1 ] 	s ^= x [ n % i ] 	s ^= a [ i - 1 ] print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun,1591 ms,71700 KB,424
6496444,2014-04-28 03:22:00,choice,425A - Sereja and Swaps,Python 3,Accepted,8,90,"n , a = int ( input ()), list ( map ( int , input (). split ())) x , s =[ 0 ]*( n + 1 ), 0 for  i  in  range ( 1 , n + 1 ): 	x [ i ]= i ^ x [ i - 1 ] 	 if   ( n // i )% 2 : s ^= x [ i - 1 ] 	s ^= x [ n % i ] 	s ^= a [ i - 1 ] print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun,811 ms,200 KB,426
56029213,2019-06-25 11:36:00,MajAK,427C - Checkposts,Python 3,Accepted,33,345,"n ,  m  =  int ( input ())   +   1 ,   1000000007 q ,  p  =   [[]   for  i  in  range ( n )],   [[]   for  i  in  range ( n )] w  =   [ 0 ]   +  list ( map ( int ,  input (). split ())) for  i  in  range ( int ( input ())):     u ,  v  =  map ( int ,  input (). split ())     p [ u ]. append ( v )     q [ v ]. append ( u ) r  =  set ( i  for  i  in  range ( 1 ,  n )   if   not  p [ i ]   or   not  q [ i ]) s ,  t  =   0 ,   1 while  r :     i  =  r . pop ()     s  +=  w [ i ]      for  j  in  p [ i ]:         q [ j ]. remove ( i )          if   not  q [ j ]:  r . add ( j )      for  j  in  q [ i ]:         p [ j ]. remove ( i )          if   not  p [ j ]:  r . add ( j ) r  =  set ( i  for  i  in  range ( 1 ,  n )   if  p [ i ]   and  q [ i ]) while  r :     i  =  r . pop ()     h  =  p [ i ]     d ,  k  =  w [ i ],   1      while  h :         i  =  h . pop ()          if   not  i  in  r :   continue         r . remove ( i )         h  +=  p [ i ]          if  w [ i ]   ==  d :  k  +=   1          elif  w [ i ]   <  d :  d ,  k  =  w [ i ],   1     s  +=  d     t  =   ( t  *  k )   %  m print ( s , t )",pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pun pln lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun,1138 ms,29300 KB,427
6621183,2014-05-15 17:41:00,yugle7,429A - Xor-tree,Python 3,Accepted,33,345,"n ,  m  =  int ( input ())   +   1 ,   1000000007 q ,  p  =   [[]   for  i  in  range ( n )],   [[]   for  i  in  range ( n )] w  =   [ 0 ]   +  list ( map ( int ,  input (). split ())) for  i  in  range ( int ( input ())):     u ,  v  =  map ( int ,  input (). split ())     p [ u ]. append ( v )     q [ v ]. append ( u ) r  =  set ( i  for  i  in  range ( 1 ,  n )   if   not  p [ i ]   or   not  q [ i ]) s ,  t  =   0 ,   1 while  r :     i  =  r . pop ()     s  +=  w [ i ]      for  j  in  p [ i ]:         q [ j ]. remove ( i )          if   not  q [ j ]:  r . add ( j )      for  j  in  q [ i ]:         p [ j ]. remove ( i )          if   not  p [ j ]:  r . add ( j ) r  =  set ( i  for  i  in  range ( 1 ,  n )   if  p [ i ]   and  q [ i ]) while  r :     i  =  r . pop ()     h  =  p [ i ]     d ,  k  =  w [ i ],   1      while  h :         i  =  h . pop ()          if   not  i  in  r :   continue         r . remove ( i )         h  +=  p [ i ]          if  w [ i ]   ==  d :  k  +=   1          elif  w [ i ]   <  d :  d ,  k  =  w [ i ],   1     s  +=  d     t  =   ( t  *  k )   %  m print ( s , t )",pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pun pln lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun,639 ms,13300 KB,430
47970093,2019-01-05 17:11:00,urishabh,431C - k-Tree,Python 3,Accepted,6,101,"n , k , d  =   [ int ( i )   for  i  in  input (). split ()] a  =   [[ 1 ],[ 1 ]] for  i  in  range ( 1 , n + 1 ):     a [ 0 ]. append ( sum ( a [ 0 ][ max ( i - d + 1 , 0 ):]))     a [ 1 ]. append ( sum ( a [ 1 ][ max ( i - k , 0 ):])) print (( a [ 1 ][- 1 ]- a [ 0 ][- 1 ])%( 10 ** 9 + 7 ))",pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun lit pun kwd pln kwd pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun kwd pun pln pun lit pun lit pun pln pun lit pun lit pun lit pun lit pun lit pun,109 ms,0 KB,431
6683510,2014-05-23 00:08:00,yugle7,432C - Prime Swaps,Python 3,Accepted,23,324,"def  prime ( n ):     n  +=   1     p  =   [ False ]   *  n      for  i  in  range ( 3 ,  int ( n  **   0.5 )   +   1 ,   2 ):         u ,  v  =  i  *  i ,   2   *  i          if   not  p [ i ]:  p [ u  ::  v ]   =   [ True ]   *   (( n  -  u  -   1 )   //  v  +   1 )     p [ 4   ::   2 ]   =   [ True ]   *   (( n  -   3 )   //   2 )      return  p n  =  int ( input ()) t  =  list ( enumerate ( list ( map ( int ,  input (). split ())),   1 )) t . sort ( key  =   lambda  x :  x [ 1 ]) t  =   [ x [ 0 ]   for  x  in  t ] u ,  v ,  q  =  list ( range ( n  +   1 )),  list ( range ( n  +   1 )),   [] p  =  prime ( n  +   1 ) for  i ,  j  in  enumerate ( t ,   1 ):      while  i  !=  u [ j ]:         k  =  i          while  p [ u [ j ]   -  k  +   1 ]:  k  +=   1         q . append ( str ( k )   +   ' '   +  str ( u [ j ]))         a ,  b  =  u [ j ],  v [ k ]         u [ b ],  u [ j ],  v [ a ],  v [ k ]   =  a ,  k ,  b ,  j print ( len ( q )) print ( '\n' . join ( q ))",kwd pln pun pln pun pln pun pln lit pln pun pln pun kwd pun pln pun pln pln kwd pln kwd pln pun lit pun pln pun pln pun pln lit pun pln pun pln lit pun pln lit pun pln pun pln pun pln pun pln pun pln lit pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun lit pln pun pln lit pun pln pun pln pun kwd pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pun kwd pln pun pln kwd pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun kwd pun str pun pln pun pln pun,1091 ms,28500 KB,432
14508361,2015-11-27 12:16:00,pjcuy,433C - Ryouko's Memory Note,Python 3,Accepted,2,17,"import  base64 , zlib exec ( zlib . decompress ( base64 . b85decode ( b 'c${@mOKt-p4Bc~z*PT)6B<(U%dJ)8eYDh&g5Poz2noK66M5-4c+wWsLDg+!6Y$6|<f{$r#B!`+N&%YE^Au(XDptZs2THqOkV&ku)h<AKSBN`(nUmN|aBgG3f;Df0L0S<pc)863i*#E9+mPU`H*P0n@N-mDn!SWgK)V!hZjtaS(x;O_{Y;%-0)4aLlp<W9Q`Y2p@rK~3xDNF2j_%e^y$gMgDvOkqPuW^?A^yIQ6-S^y0^Crh`Bfe1&sLUQkDtsndRo0oAf7|W#&dag7O_hH&R&{3' )))",kwd pln pun pln kwd pun pln pun pln pun pln pun pln pun pln str pun,483 ms,11700 KB,433
6756018,2014-05-31 12:51:00,yugle7,435C - Cardiogram,Python 3,Accepted,16,180,"n ,  a  =  int ( input ()),  list ( map ( int ,  input (). split ())) if  n  &   1 :  a . append ( 0 ) x ,  t  =   0 ,   [[ ' ' ]   *  sum ( a )   for  i  in  range ( 2001 )] y  =  u  =  v  =   1000 for  i  in  range ( 0 ,  n ,   2 ):      for  j  in  range ( a [ i ]):         t [ y ][ x ]   =   '/'         x  +=   1         y  +=   1     v  =  max ( v ,  y )      for  j  in  range ( a [ i  +   1 ]):         y  -=   1         t [ y ][ x ]   =   '\\'         x  +=   1     u  =  min ( u ,  y ) for  i  in  range ( v  -   1 ,  u  -   1 ,   - 1 ):   print ( '' . join ( t [ i ]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun pln lit pun pln pun str pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pln pun pln lit pln pun pln lit pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln str pln pun pln lit pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln lit pun pln pun pln lit pun pln pun lit pun pln kwd pun str pun pln pun pln pun pln pun,124 ms,8500 KB,435
79745129,2020-05-11 15:33:00,anjit_6294,437C - The Child and Toy,Python 3,Accepted,4,60,"l = lambda   : map ( int , input (). split ()) n , m = l () v =[ 0 ]+ list ( l ()) print ( sum ( min ( v [ x ], v [ y ])   for  x , y  in   ( l ()   for  _  in   ' ' * m )))",pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln kwd pln str pun pln pun,109 ms,6800 KB,437
25297246,2017-03-06 19:21:00,felipe17,439C - Devu and Partitioning of the Array,Python 3,Accepted,46,221,"  n , k , p  =  map ( int , input (). split ()) ar  =  list ( map ( int , input (). split ())); q  =  k - p zeros , ones  =   [],[] res  =   [] for  a  in  ar : 	 if  a % 2 : 		ones  +=   [ a ] 	 else : 		zeros  +=   [ a ]   while  p : 	 if  len ( zeros ): 		res  +=   [[ zeros . pop ()]] 	 elif  len ( ones )>= 2 : 		res  +=   [ ones [- 2 :]] 		 del  ones [- 2 :] 	 else : 		 print ( 'NO' ) 		exit ( 0 ) 	p  -=   1   while  q : 	 if  len ( ones ): 		res  +=   [[ ones . pop ()]] 	 else : 		 print ( 'NO' ) 		exit ( 0 ) 	q  -=   1   if  len ( zeros ): 	res [ 0 ]   +=  zeros   if  len ( ones )% 2 == 0 : 	res [ 0 ]   +=  ones else : 	 print ( 'NO' ) 	exit ( 0 )   print ( 'YES' ) for  s  in  res : 	 print ( len ( s ),* s )     #  C:\Users\Usuario\HOME2\Programacion\ACM",pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln kwd pln pun lit pun pln kwd pun pln kwd pun str pun pln pun lit pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pun str pun pln pun lit pun pln pun pln lit pln kwd pln pun pln pun pln pun lit pun pln pun pln pln kwd pln pun pln pun lit pun lit pun pln pun lit pun pln pun pln kwd pun pln kwd pun str pun pln pun lit pun pln kwd pun str pun kwd pln kwd pln pun pln kwd pun pln pun pln pun pln pun pln pln com,701 ms,13900 KB,439
7016272,2014-07-05 17:34:00,borls,440C - One-Based Arithmetic,Python 3,Accepted,12,138,"n  =  int ( input ()) d  =   { n :   0 } m  =  len ( str ( n ))   +   1 u  =  int ( '1'   *   ( m + 1 )) for  i  in  range ( m ,   0 ,   - 1 ):     d ,  e ,  u  =   {},  d ,  u  //   10      for  v ,  c  in  e . items ():         lim  =  v  //  u          for  x  in  range (- 1   -  lim ,   1   -  lim ):             t  =  v  +  x  *  u             d [ t ]   =  min ( c  +  i  *  abs ( x ),  d . get ( t ,   999 )) print ( d [ 0 ])",pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun str pln pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln kwd pln pun lit pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun kwd pun pln pun lit pun,77 ms,0 KB,440
54156037,2019-05-15 07:10:00,manuelflr,441C - Valera and Tubes,Python 3,Accepted,8,119,"a , b , c = map ( int , input (). split ()) l =[] for  i  in  range ( a ):      for  j  in  range ( b )[::[ 1 ,- 1 ][ i % 2 ]]:         l +=[ str ( i + 1 ), str ( j + 1 )] p = b * a // c for  i  in  range ( c - 1 ): print ( p , ' ' . join ( l [ 2 * p * i : 2 * p *( i + 1 )])) print ( b * a - p *( c - 1 ), ' ' . join ( l [ 2 * p *( c - 1 ):]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pun pln pun str pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun lit pun str pun pln pun pln pun lit pun pln pun pln pun lit pun,358 ms,9300 KB,441
9403986,2015-01-11 18:56:00,woyeshizuile,443E - Artem and Array,Python 3,Accepted,8,119,"a , b , c = map ( int , input (). split ()) l =[] for  i  in  range ( a ):      for  j  in  range ( b )[::[ 1 ,- 1 ][ i % 2 ]]:         l +=[ str ( i + 1 ), str ( j + 1 )] p = b * a // c for  i  in  range ( c - 1 ): print ( p , ' ' . join ( l [ 2 * p * i : 2 * p *( i + 1 )])) print ( b * a - p *( c - 1 ), ' ' . join ( l [ 2 * p *( c - 1 ):]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pun pln pun str pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun lit pun str pun pln pun pln pun lit pun pln pun pln pun lit pun,1076 ms,22800 KB,442
32713970,2017-11-27 15:05:00,yugle7,442A - Borya and Hanabi,Python 3,Accepted,8,119,"a , b , c = map ( int , input (). split ()) l =[] for  i  in  range ( a ):      for  j  in  range ( b )[::[ 1 ,- 1 ][ i % 2 ]]:         l +=[ str ( i + 1 ), str ( j + 1 )] p = b * a // c for  i  in  range ( c - 1 ): print ( p , ' ' . join ( l [ 2 * p * i : 2 * p *( i + 1 )])) print ( b * a - p *( c - 1 ), ' ' . join ( l [ 2 * p *( c - 1 ):]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pun pln pun str pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun lit pun str pun pln pun pln pun lit pun pln pun pln pun lit pun,77 ms,5400 KB,443
7061891,2014-07-11 10:02:00,cinderela,444A - DZY Loves Physics,Python 3,Accepted,8,119,"a , b , c = map ( int , input (). split ()) l =[] for  i  in  range ( a ):      for  j  in  range ( b )[::[ 1 ,- 1 ][ i % 2 ]]:         l +=[ str ( i + 1 ), str ( j + 1 )] p = b * a // c for  i  in  range ( c - 1 ): print ( p , ' ' . join ( l [ 2 * p * i : 2 * p *( i + 1 )])) print ( b * a - p *( c - 1 ), ' ' . join ( l [ 2 * p *( c - 1 ):]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pun pln pun str pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun lit pun str pun pln pun pln pun lit pun pln pun pln pun lit pun,529 ms,0 KB,445
24278757,2017-01-31 01:36:00,GShot,446A - DZY Loves Sequences,Python 3,Accepted,8,119,"a , b , c = map ( int , input (). split ()) l =[] for  i  in  range ( a ):      for  j  in  range ( b )[::[ 1 ,- 1 ][ i % 2 ]]:         l +=[ str ( i + 1 ), str ( j + 1 )] p = b * a // c for  i  in  range ( c - 1 ): print ( p , ' ' . join ( l [ 2 * p * i : 2 * p *( i + 1 )])) print ( b * a - p *( c - 1 ), ' ' . join ( l [ 2 * p *( c - 1 ):]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pun pln pun str pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun lit pun str pun pln pun pln pun lit pun pln pun pln pun lit pun,296 ms,12600 KB,447
53972820,2019-05-11 03:50:00,vjudge2,448C - Painting Fence,Python 3,Accepted,13,135,"import  sys oo = 1000000000000 ar =[] def  solve ( l ,  r ,  val ): 	 if ( r < l ):   return   0 	indx = l + ar [ l : r + 1 ]. index ( min ( ar [ l : r + 1 ])) 	tot = r - l + 1 	cur = ar [ indx ]- val + solve ( l ,  indx - 1 ,  ar [ indx ])+ solve ( indx + 1 ,  r ,  ar [ indx ]) 	 return  min ( tot ,  cur ) sys . setrecursionlimit ( 10000 ) n = int ( input ()) ar = list ( map ( int ,  input (). split ())) print ( solve ( 0 ,  n - 1 ,   0 ))",kwd pln pln pun lit pln pun kwd pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln kwd pln lit pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit pun pln pun lit pun pln lit pun,561 ms,4300 KB,448
23508688,2017-01-03 04:58:00,Yukimai,449C - Jzzhu and Apples,Python 3,Accepted,35,306,"#!/usr/bin/env python3 # -*- coding: utf-8 -*- from  math  import   * def  prm ( x ):     s  =  int ( sqrt ( x + 0.5 ))      for  i  in  range ( 2 ,  s + 1 ):          if   not   ( x % i ):   return   False      return   True def  ap ( a ):      while ( len ( a )   >=   2 ):          print ( a [- 1 ],  a [- 2 ])         a . pop ()         a . pop () n ,  cnt ,  ans ,  vis ,  ansl ,  ansr  =  int ( input ()),   0 ,   0 ,   [ False ]* 100100 ,   [],   [] prime  =  filter ( prm ,  range ( 3 ,  n // 2 + 1 )) for  x  in  prime :     tcnt ,  nlst  =   0 ,   []      for  i  in  range ( 1 ,  n // x + 1 ):          if   not  vis [ i * x ]:             vis [ i * x ]   =   True             nlst . append ( i )             tcnt  +=   1     ans  +=  tcnt  >>   1     cnt  +=  tcnt  &   1      if  tcnt  &   1   :         nlst  =  nlst [ 0 : 1 ]   +  nlst [ 2 :]         ansr . append ( x << 1 )     ansl  +=  list ( map ( lambda  k  :  x * k ,  nlst )) for  i  in  range ( 1 ,  n + 1 ):      if   not  vis [ i ]   and   not   ( i & 1 ):         ansr . append ( i )         cnt  +=   1 print ( ans +( cnt >> 1 )) ap ( ansl ) ap ( ansr )",com com kwd pln kwd pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln kwd pln kwd kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln lit pun pln kwd pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pun pln pun kwd pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit pun kwd pln kwd pln pun pln pun pln pun pln lit pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln lit pln pun pln pun pln lit pln kwd pln pun pln lit pln pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun,577 ms,7700 KB,449
69405982,2020-01-23 13:51:00,hotboy2703,449A - Jzzhu and Chocolate,Python 3,Accepted,35,306,"#!/usr/bin/env python3 # -*- coding: utf-8 -*- from  math  import   * def  prm ( x ):     s  =  int ( sqrt ( x + 0.5 ))      for  i  in  range ( 2 ,  s + 1 ):          if   not   ( x % i ):   return   False      return   True def  ap ( a ):      while ( len ( a )   >=   2 ):          print ( a [- 1 ],  a [- 2 ])         a . pop ()         a . pop () n ,  cnt ,  ans ,  vis ,  ansl ,  ansr  =  int ( input ()),   0 ,   0 ,   [ False ]* 100100 ,   [],   [] prime  =  filter ( prm ,  range ( 3 ,  n // 2 + 1 )) for  x  in  prime :     tcnt ,  nlst  =   0 ,   []      for  i  in  range ( 1 ,  n // x + 1 ):          if   not  vis [ i * x ]:             vis [ i * x ]   =   True             nlst . append ( i )             tcnt  +=   1     ans  +=  tcnt  >>   1     cnt  +=  tcnt  &   1      if  tcnt  &   1   :         nlst  =  nlst [ 0 : 1 ]   +  nlst [ 2 :]         ansr . append ( x << 1 )     ansl  +=  list ( map ( lambda  k  :  x * k ,  nlst )) for  i  in  range ( 1 ,  n + 1 ):      if   not  vis [ i ]   and   not   ( i & 1 ):         ansr . append ( i )         cnt  +=   1 print ( ans +( cnt >> 1 )) ap ( ansl ) ap ( ansr )",com com kwd pln kwd pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln kwd pln kwd kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln lit pun pln kwd pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pun pln pun kwd pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit pun kwd pln kwd pln pun pln pun pln pun pln lit pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln lit pln pun pln pun pln lit pln kwd pln pun pln lit pln pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun,124 ms,300 KB,450
7298140,2014-07-31 12:47:00,yugle7,451C - Predict Outcome of the Game,Python 3,Accepted,6,173,"def  f ( x ,  y ,  a ,  b ):   return  x  >  a  or  y  >  b  or   ( a  -  x )   %   3   or   ( b  -  y )   %   3 def  g ( x ,  y ,  a ,  b ):   return  f ( x ,  y ,  a ,  b )   and  f ( x ,  y ,  b ,  a ) for  i  in  range ( int ( input ())):     n ,  u ,  a ,  b  =  map ( int ,  input (). split ())     v ,  s ,  t  =  n  -  u ,  a  +  b ,   2   *  b  -  a  if  b  >  a  else   2   *  a  -  b      print ( 'no'   if  g ( s ,  t ,  u ,  v )   and  g ( s  +  a ,  s  +  b ,  u ,  v )   else   'yes' )",kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln kwd pln pun pln kwd pln lit pln pun pln pun pln pln kwd pun str pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln str pun,1669 ms,0 KB,451
7345717,2014-08-04 18:23:00,jebwizoscar,452C - Magic Trick,Python 3,Accepted,2,46,"n , m = map ( int , input (). split ()) print ( 1.0   if  n == m == 1   else   (( n * m - n - m + 1 )/( n * m - 1 )+ 1 )/ n )",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun lit pln kwd pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun pln pun,62 ms,0 KB,452
46821618,2018-12-09 18:38:00,jaaguptamme,453A - Little Pony and Expected Maximum,Python 3,Accepted,2,46,"n , m = map ( int , input (). split ()) print ( 1.0   if  n == m == 1   else   (( n * m - n - m + 1 )/( n * m - 1 )+ 1 )/ n )",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun lit pln kwd pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun pln pun,155 ms,0 KB,454
46979316,2018-12-13 21:38:00,khalil.247,455A - Boredom,Python 3,Accepted,2,46,"n , m = map ( int , input (). split ()) print ( 1.0   if  n == m == 1   else   (( n * m - n - m + 1 )/( n * m - 1 )+ 1 )/ n )",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun lit pln kwd pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun pln pun,202 ms,6400 KB,456
37321905,2018-04-14 13:02:00,barakraganosungam,459C - Pashmak and Buses,Python 3,Accepted,5,65,"n , k , d = map ( int , input (). split ()) if  n > k ** d : print (- 1 ); exit () K = 1 for  j  in  range ( d ):      print ( "" "" . join ([ str ( i // K % k  + 1 )   for  i  in  range ( n )])); K *= k",pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun kwd pun lit pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln,498 ms,7500 KB,459
7699275,2014-09-07 14:57:00,yugle7,460C - Present,Python 3,Accepted,24,163,"n ,  m ,  w  =  map ( int ,  input (). split ()) t  =  list ( map ( int ,  input (). split ()))   def  f ( x ):     p  =   [ 0 ]   *  w     d  =  s  =  j  =   0      for  i  in  t :         d  -=  p [ j ]         q  =  max ( 0 ,  x  -  i  -  d )         d  +=  q         s  +=  q         p [ j ]   =  q         j  +=   1          if  j  ==  w :  j  =   0      return  s   a  =  min ( t ) b  =  a  +  m  +   1 while  b  -  a  >   1 :     c  =   ( a  +  b )   //   2     p  =  f ( c )      if  p  >  m :  b  =  c      else :  a  =  c print ( a )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pln pun pln pln pun pln pun pln pun pln pln pun pln lit pln kwd pln pun pln pun pln pun pln lit pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pln kwd pun pln pun pln kwd pun pln pun,1184 ms,9700 KB,460
7690515,2014-09-06 01:59:00,vanadium,461C - Appleman and a Sheet of Paper,Python 3,Accepted,41,271,"from  itertools  import  starmap     def  main ():     n ,  q  =  map ( int ,  input (). split ())       a  =  list ( range ( n  +   1 ))     flipped  =   False     start  =   0     end  =  n        for  _  in  range ( q ):         cmd ,   * args  =  map ( int ,  input (). split ())            if  cmd  ==   1 :             p  =  args [ 0 ]              if  p  >  end - start - p :                 flipped  =   not  flipped                 p  =  end - start - p              if  flipped :                 a [ end - p : end - 2 * p :- 1 ]   =  starmap (                      lambda  a ,  b :  a + n - b ,                     zip ( a [ end - p : end - 2 * p :- 1 ],  a [ end - p : end ])                  )                 end  -=  p              else :                 start  +=  p                 a [ start : start + p ]   =  starmap (                      lambda  a ,  b :  a - b ,                     zip ( a [ start : start + p ],  a [ start : start - p :- 1 ])                  )          else :             l ,  r  =  args              if  flipped :                 l ,  r  =  end - start - r ,  end - start - l              print ( a [ start  +  r ]   -  a [ start  +  l ])     if  __name__  ==   '__main__' :     main ()  ",kwd pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pln pun pln lit pln pun pln pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln lit pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln str pun pln pun pln,1496 ms,2300 KB,461
12616644,2015-08-20 17:03:00,UnusedFever,461A - Appleman and Toastman,Python 3,Accepted,41,271,"from  itertools  import  starmap     def  main ():     n ,  q  =  map ( int ,  input (). split ())       a  =  list ( range ( n  +   1 ))     flipped  =   False     start  =   0     end  =  n        for  _  in  range ( q ):         cmd ,   * args  =  map ( int ,  input (). split ())            if  cmd  ==   1 :             p  =  args [ 0 ]              if  p  >  end - start - p :                 flipped  =   not  flipped                 p  =  end - start - p              if  flipped :                 a [ end - p : end - 2 * p :- 1 ]   =  starmap (                      lambda  a ,  b :  a + n - b ,                     zip ( a [ end - p : end - 2 * p :- 1 ],  a [ end - p : end ])                  )                 end  -=  p              else :                 start  +=  p                 a [ start : start + p ]   =  starmap (                      lambda  a ,  b :  a - b ,                     zip ( a [ start : start + p ],  a [ start : start - p :- 1 ])                  )          else :             l ,  r  =  args              if  flipped :                 l ,  r  =  end - start - r ,  end - start - l              print ( a [ start  +  r ]   -  a [ start  +  l ])     if  __name__  ==   '__main__' :     main ()  ",kwd pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pln pun pln lit pln pun pln pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln lit pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln str pun pln pun pln,389 ms,19200 KB,462
40567988,2018-07-20 09:37:00,yugle7,464C - Substitutes in Number,Python 3,Accepted,10,122,"m  =   1000000007 p  =   [( 0 ,  input ())]   +   [ input (). split ( '->' )   for  i  in  range ( int ( input ()))] s  =   [( 10 ,  i )   for  i  in  range ( 10 )] for  d ,  t  in  p [::- 1 ]:     a ,  b  =   1 ,   0      for  q  in  t :         x ,  y  =  s [ int ( q )]         a ,  b  =  a  *  x  %  m ,   ( b  *  x  +  y )   %  m     s [ int ( d )]   =  a ,  b print ( s [ 0 ][ 1 ])",pln pun pln lit pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun lit pun kwd pln pun pln kwd pln pun lit pun pln pun pln pun pln lit pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun lit pun lit pun,514 ms,11400 KB,464
28528071,2017-07-13 21:39:00,Sheemon7,464A - No to Palindromes!,Python 3,Accepted,10,122,"m  =   1000000007 p  =   [( 0 ,  input ())]   +   [ input (). split ( '->' )   for  i  in  range ( int ( input ()))] s  =   [( 10 ,  i )   for  i  in  range ( 10 )] for  d ,  t  in  p [::- 1 ]:     a ,  b  =   1 ,   0      for  q  in  t :         x ,  y  =  s [ int ( q )]         a ,  b  =  a  *  x  %  m ,   ( b  *  x  +  y )   %  m     s [ int ( d )]   =  a ,  b print ( s [ 0 ][ 1 ])",pln pun pln lit pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun lit pun kwd pln pun pln kwd pln pun lit pun pln pun pln pun pln lit pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun lit pun lit pun,77 ms,5400 KB,465
75070123,2020-04-01 13:55:00,thukrake_mera_pyaar,466C - Number of Ways,Python 3,Accepted,14,93,"n = int ( input ()) l = list ( map ( int , input (). split ())) if ( sum ( l )% 3 != 0 ): 	 print ( 0 ) else : 	k , b , s , c = 0 , 0 , 0 , 0 	k = sum ( l )// 3 	 for  i  in  l [:- 1 ]: 		s += i 		 if  s == 2 * k : 			b += c 		 if  s == k : 			c += 1 	 print ( b )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun lit pun lit pun pln kwd pun lit pun kwd pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun lit pln pun pln pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln pln kwd pln pun lit pun pln pun pln pun pln pln kwd pln pun pln pun pln pun lit pln kwd pun pln pun,483 ms,35300 KB,466
7892618,2014-09-21 12:21:00,vitux,468C - Hack it!,Python 3,Accepted,3,29,"a = int ( input ()) x = a -(( 10 ** 21 )* 9 )% a print ( x , 10 ** 20 + x - 1 )",pln pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun pln kwd pun pln pun lit pun lit pun pln pun lit pun,46 ms,0 KB,468
25207366,2017-03-04 13:08:00,YazanRi,468A - 24 Game,Python 3,Accepted,3,29,"a = int ( input ()) x = a -(( 10 ** 21 )* 9 )% a print ( x , 10 ** 20 + x - 1 )",pln pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun pln kwd pun pln pun lit pun lit pun pln pun lit pun,748 ms,4900 KB,469
7986450,2014-09-27 19:17:00,CountZero,471C - MUH and House of Cards,Python 3,Accepted,2,28,n  =  int ( input ()) print (( int ((( 24 * n + 1 )**. 5 - 1 )/ 6 )+ n % 3 )// 3 ),pln pun pln pun pln pun kwd pun pln pun lit pun pln pun lit pun lit pun lit pun lit pun pln pun lit pun lit pun,61 ms,0 KB,471
8228716,2014-10-14 18:32:00,merolish,472C - Design Tutorial: Make It Nondeterministic,Python 3,Accepted,12,98,n  =  int ( input ()) h  =   [] for  i  in  range ( n ):     h . append ( sorted ( input (). split ())) prev  =   '' for  i  in   ( int ( x )   -   1   for  x  in  input (). split ()):     cur  =  h [ i ][ 0 ]   if  h [ i ][ 0 ]   >  prev  else  h [ i ][ 1 ]      if  cur  <  prev :          print ( 'NO' )         exit ()     prev  =  cur print ( 'YES' ),pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str kwd pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun lit pun pln pun pln kwd pln pun pln pun lit pun pln kwd pln pun pln pun pln kwd pun str pun pln pun pln pun pln kwd pun str pun,498 ms,28900 KB,472
15087128,2015-12-29 18:56:00,_Luna,474C - Captain Marmot,Python 3,Accepted,23,412,"def  f ( x ,  y ,  a ,  b ,  n ):      return  a  +   ( x  -  a )   *  cos [ n ]   -   ( y  -  b )   *  sin [ n ],  b  +   ( x  -  a )   *  sin [ n ]   +   ( y  -  b )   *  cos [ n ]     def  check ( p ):     d  =   {}      for  i  in  range ( len ( p )   -   1 ):          for  j  in  range ( i  +   1 ,  len ( p )):             dist  =   ( p [ i ][ 0 ]   -  p [ j ][ 0 ])   **   2   +   ( p [ i ][ 1 ]   -  p [ j ][ 1 ])   **   2             d [ dist ]   =  d . get ( dist ,   0 )   +   1      if  len ( d )   !=   2 :          return   0     a ,  b  =  sorted ( d )      return   2   *  a  ==  b  and  d [ a ]   ==   4   and  d [ b ]   ==   2     cos ,  sin ,  variants  =   [ 1 ,   0 ,   - 1 ,   0 ],   [ 0 ,   1 ,   0 ,   - 1 ],   [[ x ,  y ,  z ,  a ]   for  x  in  range ( 4 )   for  y  in  range ( 4 )   for  z  in  range ( 4 )   for  a  in  range ( 4 )] for  t  in  range ( int ( input ())):     moles ,  ans  =   [ list ( map ( int ,  input (). split ()))   for  x  in  range ( 4 )],   13      for  a  in  variants :          if  check ([ f ( moles [ i ][ 0 ],  moles [ i ][ 1 ],  moles [ i ][ 2 ],  moles [ i ][ 3 ],  a [ i ])   for  i  in  range ( 4 )]):             ans  =  min ( ans ,  sum ( a ))      print ( ans  if  ans  !=   13   else   - 1 )",kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln kwd pln pun pln pun pln pun pln lit pun pln kwd pln lit pln pun pln pun pln pun pln pun pln kwd pln lit pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln lit pln pln pln pun pln pun pln pun pln pun lit pun pln lit pun pln pun lit pun pln lit pun pln pun lit pun pln lit pun pln lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln lit pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln lit pln kwd pln pun lit pun,452 ms,300 KB,474
22669427,2016-12-03 08:36:00,Mr.Hitch,476C - Dreamoon and Sums,Python 3,Accepted,2,38,"a , b = map ( int , input (). split ()) print ( b *( b - 1 )* a *( b * a + b + 2 )// 4 %( 10 ** 9 + 7 ))",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun lit pun lit pun,62 ms,0 KB,476
8270785,2014-10-16 22:07:00,tomlau,478C - Table Decorations,Python 3,Accepted,2,38,"r , g , b = map ( int , input (). split ()) print ( min ( r + g , r + b , b + g ,( r + b + g )// 3 ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun,77 ms,0 KB,478
18181430,2016-06-01 14:45:00,xidebixia,479C - Exams,Python 3,Accepted,3,42,"c = 0 for  x , y  in  sorted (( list ( map ( int , input (). split ())) for  _  in  range ( int ( input ())))): c = x  if  y < c  else  y print ( c )",pln pun lit kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln kwd pun pln pun,93 ms,5400 KB,479
8388681,2014-10-24 22:18:00,Vaghar,483C - Diverse Permutation,Python 3,Accepted,3,68,"n ,  k  =  map ( int ,  input (). split ())   print (*[ i  if  i  >  k  +   1   else   (( i  +   1 )   //   2   if  i  %   2   else  k  +   2   -  i  //   2 )   for  i  in  range ( 1 ,  n  +   1 )])",pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun pln lit pln pun pln pun pln lit pun pln kwd pln kwd pln pun lit pun pln pun pln lit pun,296 ms,3500 KB,483
15914476,2016-02-09 16:45:00,not_bot_but_POT,484A - Bits,Python 3,Accepted,3,68,"n ,  k  =  map ( int ,  input (). split ())   print (*[ i  if  i  >  k  +   1   else   (( i  +   1 )   //   2   if  i  %   2   else  k  +   2   -  i  //   2 )   for  i  in  range ( 1 ,  n  +   1 )])",pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun pln lit pln pun pln pun pln lit pun pln kwd pln kwd pln pun lit pun pln pun pln lit pun,374 ms,0 KB,485
54738333,2019-05-28 09:22:00,MajAK,486C - Palindrome Transformation,Python 3,Accepted,27,183,"n , p = map ( int , input (). split ()) l = list ( input ())   p -= 1 k = n // 2 d =[ 0 ]*( k + 1 )   for  i  in  range ( k ): 	d [ i ]= min ( abs ( ord ( l [ i ])- ord ( l [ n - i - 1 ])), 26 - abs ( ord ( l [ i ])- ord ( l [ n - i - 1 ])))   if  p >= k : 	p = n - 1 - p   if  sum ( d )== 0 : 	 print ( 0 ) 	exit () i = 0 j = k while  d [ i ]== 0 : 	i  +=   1 while  d [ j ]== 0 : 	j  -=   1 if  i > p : 	i = p if  j < p : 	j = p print ( sum ( d )+ min ( p - 2 * i + j , 2 * j - i - p ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit pln pun pln pun lit pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pln kwd pln pun pln pun lit pun pln kwd pun lit pun pln pun pln pun lit pln pun pln kwd pln pun pln pun lit pun pln pun pln lit kwd pln pun pln pun lit pun pln pun pln lit kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun,171 ms,800 KB,486
8856749,2014-11-26 10:20:00,alberist,487C - Prefix Product Sequence,Python 3,Accepted,7,87,"n  =  int ( input ()) if  n  ==   4 :      print   ( ""YES\n1 3 2 4"" ) elif   [ i  for  i  in  range ( 2 , n )   if  n % i == 0 ]:      print ( ""NO"" ) else :      print ( ""YES\n1 %s"" %( "" "" . join ( str (( pow ( x + 1 , n - 2 , n )*( x + 2 ))% n  or  n )   for  x  in  range ( n - 1 ))))",pln pun pln pun pln pun kwd pln pun pln lit pun pln kwd pln pun str pun kwd pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun lit pun pln kwd pun str pun kwd pun pln kwd pun str pun str pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln kwd pln pun pln kwd pln kwd pln pun pln pun lit pun,576 ms,4500 KB,487
15914480,2016-02-09 16:45:00,not_bot_but_POT,487A - Fight the Monster,Python 3,Accepted,7,87,"n  =  int ( input ()) if  n  ==   4 :      print   ( ""YES\n1 3 2 4"" ) elif   [ i  for  i  in  range ( 2 , n )   if  n % i == 0 ]:      print ( ""NO"" ) else :      print ( ""YES\n1 %s"" %( "" "" . join ( str (( pow ( x + 1 , n - 2 , n )*( x + 2 ))% n  or  n )   for  x  in  range ( n - 1 ))))",pln pun pln pun pln pun kwd pln pun pln lit pun pln kwd pln pun str pun kwd pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun lit pun pln kwd pun str pun kwd pun pln kwd pun str pun str pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln kwd pln pun pln kwd pln kwd pln pun pln pun lit pun,62 ms,0 KB,488
54340999,2019-05-18 13:19:00,vjudge5,489C - Given Length and Sum of Digits...,Python 3,Accepted,3,88,"m , s = map ( int , input (). split ()) if  s > 9 * m  or   ( s < 1and  m != 1 ): print (- 1 ,- 1 ) else : print ( int ( 10 **( m - 1 )+(( s - 1 )% 9 + 1 )* 10 **(( s - 1 )// 9 )- 1 ), 10 ** m - 10 **( m -( s - 1 )// 9 - 1 )*( 9 -( s - 1 )% 9 ))",pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun lit pun pln kwd pln pun pln pun lit pln pun lit pun kwd pun lit pun lit pun kwd pun kwd pun pln pun lit pun pln pun lit pun pln pun lit pun lit pun lit pun lit pun pln pun lit pun lit pun lit pun lit pun pln pun lit pun pln pun pln pun lit pun lit pun lit pun lit pun pln pun lit pun lit pun,108 ms,0 KB,489
73720863,2020-03-19 19:27:00,coder2610,492C - Vanya and Exams,Python 3,Accepted,17,115,"n , r , avg = map ( int , input (). split ()) s = 0 t = n * avg l =[] for  i  in  range ( n ): 	 	x , y = map ( int , input (). split ()) 	s += x 	l . append ([ x , y ]) l . sort ( key = lambda  x : x [ 1 ]) ans = 0 i = 0 while  t > s : 	p = min ( t - s , r - l [ i ][ 0 ]) 	ans += p * l [ i ][ 1 ] 	s += p 	i += 1 print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pln pun kwd pln kwd pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun lit pln pun lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun lit kwd pun pln pun,499 ms,8900 KB,492
8971553,2014-12-03 20:58:00,tomlau,493C - Vasya and Basketball,Python 3,Accepted,15,174,"n , _a = int ( input ()), list ( map ( int , input (). split ())) m , _b = int ( input ()), list ( map ( int , input (). split ())) p =[( ai , 0 )   for  ai  in  _a ]   +   [( bi , 1 )   for  bi  in  _b ] p . sort () i = 0 R =[ len ( _a )* 3 , len ( _b )* 3 ] r = list ( R ) while  i < len ( p ):   d  =  p [ i ][ 0 ]    while  i < len ( p )   and  p [ i ][ 0 ]== d :     r [ p [ i ][ 1 ]]   -=   1     i  +=   1    if   ( r [ 0 ]- r [ 1 ]   >  R [ 0 ]- R [ 1 ]):     R = list ( r ) print (* R , sep = ':' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun kwd pun pln pun pln pun str pun,1185 ms,31700 KB,493
9108355,2014-12-13 20:03:00,DiEvAl,495C - Treasure,Python 3,Accepted,29,167,"import  itertools import  math   def  main (): 	s  =  input () 	n  =  s . count ( ""#"" )   	d  =  s . count ( ""("" )   -  s . count ( "")"" )   -  n  +   1 	 if  d  <=   0 : 		 print (- 1 ) 		 return 	s  =  s . split ( ""#"" ) 	s  =   "")"" . join ( s [:- 1 ])   +   "")""   *  d  +  s [- 1 ] 	 	lvl  =   0 	 for  c  in  s : 		 if  c  ==   ""("" :  lvl  +=   1 		 if  c  ==   "")"" :  lvl  -=   1 		 if  lvl  <   0 : 			 print (- 1 ) 			 return   	 for  i  in  range ( n  -   1 ): 		 print ( 1 ) 	 print ( d )     if  __name__  ==   ""__main__"" : 	main ()",kwd pln kwd pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pln pun pln pun pln pun str pun pln pun pln pun pln pun str pun pln pun pln pun pln lit pln kwd pln pun pln lit pun pln kwd pun lit pun pln kwd pln pun pln pun pln pun str pun pln pun pln str pun pln pun pln pun lit pun pln pun pln str pln pun pln pun pln pun lit pun pln pln pun pln lit pln kwd pln kwd pln pun pln kwd pln pun pln str pun pln pun pln lit pln kwd pln pun pln str pun pln pun pln lit pln kwd pln pun pln lit pun pln kwd pun lit pun pln kwd pln pln kwd pln kwd pln pun pln pun pln lit pun pln kwd pun lit pun pln kwd pun pln pun pln pln kwd pln pun pln str pun pln pun,202 ms,1400 KB,495
78511122,2020-04-29 22:14:00,dubey07#,496C - Removing Columns,Python 3,Accepted,11,81,"n , m = map ( int , input (). split ()) ans = 0 st =[ input ()   for  i  in  range ( n )] new =[ '' ]* n for  i  in  range ( m ): 	newstr =[ new [ j ]+ st [ j ][ i ]   for  j  in  range ( n )] 	 if ( newstr == sorted ( newstr )): 		new = newstr 	 else : 		ans += 1 print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun str pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun lit kwd pun pln pun,109 ms,300 KB,496
49854302,2019-02-13 09:17:00,vjudge3,499C - Crazy Town,Python 3,Accepted,9,89,"x1 , y1 = map ( int ,  input (). split ()) x2 , y2 = map ( int ,  input (). split ()) n = int ( input ()) ans = 0 for  i  in  range ( n ):     a , b , c  =  map ( int ,  input (). split ())      if   ( a * x1 + b * y1 + c )*( a * x2 + b * y2 + c )< 0 :         ans = ans + 1 print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit kwd pun pln pun,109 ms,0 KB,499
9329816,2014-12-31 07:09:00,tomlau,500C - New Year Book Reading,Python 3,Accepted,12,106,"n , m = map ( int , input (). split ()) w = list ( map ( int , input (). split ())) b = list ( map ( int , input (). split ())) A = 0 for  i  in  range ( m ):  d , j ={}, i - 1   while  j >= 0   and  b [ j ]!= b [ i ]:    if   ( d . get ( b [ j ], 1 )):    A += w [ b [ j ]- 1 ]    d [ b [ j ]]= 0   j -= 1 print ( A )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun lit pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pln pun lit kwd pun pln pun,389 ms,100 KB,500
9418902,2015-01-12 20:31:00,puffingpup,501C - Misha and Forest,Python 3,Accepted,20,186,"n  =  int ( input ()) f  =   [ list ( map ( int , input (). split ()))   for  i  in  range ( n )] deg1  =   [] edges  =   [] for  i  in  range ( n ): 	 if  f [ i ][ 0 ]   ==   1 : 		deg1 . append ( i ) while  len ( deg1 ): 	i  =  deg1 . pop () 	 if  f [ i ][ 0 ]   ==   0 : 		 continue 	edges . append ([ i , f [ i ][ 1 ]]) 	f [ i ][ 0 ]   -=   1 	f [ f [ i ][ 1 ]][ 0 ]   -=   1 	f [ f [ i ][ 1 ]][ 1 ]   ^=  i 	 if  f [ f [ i ][ 1 ]][ 0 ]   ==   1 : 		deg1 . append ( f [ i ][ 1 ]) print ( len ( edges )) for  e  in  edges : 	 print ( e [ 0 ], e [ 1 ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln pun lit pun lit pun pln pun pln lit pln pun pln pun pln pun lit pun lit pun pln pun pln pln kwd pln pun pln pun pln pun lit pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun pln pun kwd pln kwd pln pun pln kwd pun pln pun lit pun pln pun lit pun,748 ms,11200 KB,501
31155193,2017-10-09 00:39:00,yugle7,507C - Guess Your Way Out!,Python 3,Accepted,7,80,"h ,  n  =  map ( int ,  input (). split ()) s ,  k  =  h ,   2 n  +=   ( 1   <<  h )   -   1 for  i  in  range ( h ):      if   ( n  &  k )   ^   (( n  <<   1 )   &  k )   ==   0 :  s  +=  k  -   1     k  <<=   1 print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun lit pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pln pun pln lit kwd pun pln pun,62 ms,0 KB,507
32143684,2017-11-08 20:50:00,yugle7,508C - Anya and Ghosts,Python 3,Accepted,9,88,"f  =   lambda :  list ( map ( int ,  input (). split ())) m ,  t ,  r  =  f () p ,  s  =   [],   0 for  w  in  f ():     p  =   [ q  for  q  in  p  if  q  >  w ]     d  =  r  -  len ( p )     p  +=   [ w  +  t  -  i  for  i  in  range ( d )]     s  +=  d print (- 1   if  t  <  r  else  s )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pun lit pln kwd pln pun pln kwd pln pun,62 ms,0 KB,508
33359285,2017-12-17 20:58:00,yugle7,509C - Sums of Digits,Python 3,Accepted,16,159,"t  =   [ 0 ]   *   400 x  =  k  =   0 for  q  in  range ( int ( input ())):     y  =  int ( input ())     d ,  x  =  y  -  x ,  y     j  =   0      while  d  <   1   or  t [ j ]   >  min ( 8 ,   9   *  j  +   9   -  d ):         d  +=  t [ j ]         t [ j ]   =   0         j  +=   1     t [ j ]   +=   1     k  =  max ( k ,  j )     a ,  b  =  divmod ( d  -   1 ,   9 )     t [: a ]   =   [ 9 ]   *  a     t [ a ]   +=  b      print ( '' . join ( map ( str ,  t [ k ::- 1 ])))",pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun pln pun pln pun pln pun lit pun pln lit pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun lit pun,77 ms,5500 KB,509
18454917,2016-06-14 18:41:00,mike_nzk,510C - Fox And Names,Python 3,Accepted,33,267,"n  =  int ( input ()) a  =   [[]   for  i  in  range ( 26 )] b  =   [ 0   for  i  in  range ( 26 )] ans  =   True for  i  in  range ( n ): 	t  =  input () 	 if  i  >   0 : 		ans  =  ans  and  s [: len ( t )]   !=  t 		 if   not  ans :   break 		 if  t [: len ( s )]   !=  s : 			x ,  y  =  next ( filter ( lambda  x :  x [ 0 ]   !=  x [ 1 ],  zip ( s ,  t ))) 			a [ ord ( x )- 97 ]. append ( ord ( y )- 97 ) 			b [ ord ( y )- 97 ]   +=   1 	s  =  t if  ans : 	ans  =   [] 	q  =   [] 	l  =   0 	 for  i  in  range ( 26 ): 		 if   not  b [ i ]: 			q . append ( i ) 	 while  l  <  len ( q ): 		x  =  q [ l ] 		ans . append ( chr ( x + 97 )) 		l  +=   1 		 for  y  in  a [ x ]: 			b [ y ]   -=   1 			 if   not  b [ y ]: 				q . append ( y ) if  ans  and  len ( ans )   ==   26 : 	 print ( '' . join ( ans )) else : 	 print ( 'Impossible' )",pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln kwd kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln lit pun pln kwd pun str pun pln pun pln pun kwd pun pln kwd pun str pun,77 ms,5000 KB,510
14782779,2015-12-13 12:34:00,saodem74,510E - Fox And Dinner,Python 3,Accepted,33,267,"n  =  int ( input ()) a  =   [[]   for  i  in  range ( 26 )] b  =   [ 0   for  i  in  range ( 26 )] ans  =   True for  i  in  range ( n ): 	t  =  input () 	 if  i  >   0 : 		ans  =  ans  and  s [: len ( t )]   !=  t 		 if   not  ans :   break 		 if  t [: len ( s )]   !=  s : 			x ,  y  =  next ( filter ( lambda  x :  x [ 0 ]   !=  x [ 1 ],  zip ( s ,  t ))) 			a [ ord ( x )- 97 ]. append ( ord ( y )- 97 ) 			b [ ord ( y )- 97 ]   +=   1 	s  =  t if  ans : 	ans  =   [] 	q  =   [] 	l  =   0 	 for  i  in  range ( 26 ): 		 if   not  b [ i ]: 			q . append ( i ) 	 while  l  <  len ( q ): 		x  =  q [ l ] 		ans . append ( chr ( x + 97 )) 		l  +=   1 		 for  y  in  a [ x ]: 			b [ y ]   -=   1 			 if   not  b [ y ]: 				q . append ( y ) if  ans  and  len ( ans )   ==   26 : 	 print ( '' . join ( ans )) else : 	 print ( 'Impossible' )",pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln kwd kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln lit pun pln kwd pun str pun pln pun pln pun kwd pun pln kwd pun str pun,171 ms,400 KB,512
34944627,2018-02-05 16:02:00,yugle7,513C - Second price auction,Python 3,Accepted,10,123,"d  =   [ list ( map ( int ,  input (). split ()))   for  i  in  range ( int ( input ()))] s  =   0 for  k  in  range ( 1 ,   10001 ):     p  =   [ min ( max (( k  -  l )   /   ( r  -  l  +   1 ),   1e-20 ),   1 )   for  l ,  r  in  d ]     u  =  v  =   1      for  r  in  p :  u  *=  r      for  r  in  p :         v  *=  r         s  +=   ( u  -  v )   *   ( r  -   1 )   /  r print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun lit pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pun pln lit pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pln kwd pln kwd pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pun pln pun,124 ms,5500 KB,513
17833883,2016-05-10 18:32:00,mike_nzk,514C - Watto and Mechanism,Python 3,Accepted,25,199,"n , m = map ( int , input (). split ()) M = 9999999999999983 v = set () for  i  in  range ( n ): 	s = input () 	l = len ( s ) 	pow = 1 	h = 0 	 for  i  in  range ( l ): 		h , pow =( h + ord ( s [ i ])* pow )% M ,( pow * 203 )% M 	pow = 1 	 for  i  in  range ( l ): 		 for  j  in  range ( 97 , 100 ): 			 if  ord ( s [ i ])!= j : 				v . add (( h +( j - ord ( s [ i ]))* pow )% M ) 		pow =( pow * 203 )% M ans =[] for  i  in  range ( m ): 	s = input () 	pow = 1 	h = 0 	 for  i  in  range ( len ( s )): 		h , pow =( h + ord ( s [ i ])* pow )% M ,( pow * 203 )% M 	ans . append ( 'YES'   if  h  in  v  else   'NO' ) print ( '\n' . join ( ans ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln pun lit pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun lit pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pln pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln pun pln pun str pln kwd pln kwd pln kwd pln str pun kwd pun str pun pln pun pln pun,2573 ms,28600 KB,514
40682239,2018-07-23 23:53:00,rumboalfuturo,515C - Drazil and Factorial,Python 3,Accepted,3,50,"L =[ """" , """" , ""2"" , ""3"" , ""223"" , ""5"" , ""35"" , ""7"" , ""2227"" , ""3327"" ] input () print ( """" . join ( sorted ( """" . join ([ L [ int ( k )]   for  k  in  input ()]))[::- 1 ]))",pln pun str pun str pun str pun str pun str pun str pun str pun str pun str pun str pun pln pun kwd pun str pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun,124 ms,0 KB,515
17291104,2016-04-12 17:35:00,mike_nzk,518C - Anya and Smartphone,Python 3,Accepted,12,122,"n ,  m ,  k  =  map ( int ,  input (). split ()) a  =  list ( map ( int ,  input (). split ())) rev  =  dict ( zip ( a ,  range ( 0 ,  n ))) sum  =   0 for  x  in  map ( int ,  input (). split ()): 	loc  =  rev [ x ] 	sum  +=  loc  //  k  +   1 	 if  loc  >   0 : 		y  =  a [ loc  -   1 ] 		a [ loc - 1 : loc + 1 ]   =   [ x ,  y ] 		rev [ x ],  rev [ y ]   =  loc - 1 ,  loc print ( sum )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun,327 ms,13600 KB,518
10091686,2015-03-01 07:57:00,sunhong,519C - A and B and Team Training,Python 3,Accepted,2,26,"n , m = map ( int , input (). split ()) print ( min ( m , n ,( m + n )// 3 ))",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun lit pun,62 ms,0 KB,519
30589090,2017-09-21 19:04:00,yugle7,520C - DNA Alignment,Python 3,Accepted,4,50,"input () s  =  input () k  =   [ s . count ( x )   for  x  in   'ACGT' ] print ( pow ( k . count ( max ( k )),  len ( s ),   10   **   9   +   7 ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln str pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln lit pun,61 ms,200 KB,520
30599427,2017-09-21 23:50:00,yugle7,520E - Pluses everywhere,Python 3,Accepted,4,50,"input () s  =  input () k  =   [ s . count ( x )   for  x  in   'ACGT' ] print ( pow ( k . count ( max ( k )),  len ( s ),   10   **   9   +   7 ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln str pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln lit pun,1466 ms,7200 KB,521
10298804,2015-03-16 13:53:00,master_j,522C - Chicken or Fish?,Python 3,Accepted,33,239,"def  ris ():      return  map ( int ,  input (). split ())     def  testCase ():     m ,  k  =  ris ()     q  =   0     a  =  list ( ris ())     some_is_out  =   False     tmp  =  set ()      for  i  in  range ( m  -   1 ):         t ,  r  =  ris ()         t  -=   1          if  r  ==   1   and   not  some_is_out :             some_is_out  =   True             tmp  =  tmp . union ( set ( filter ( lambda  x :  a [ x ]   <=  q ,  range ( k ))))          if  t  ==   - 1 :             q  +=   1          else :              if  t  in  tmp :                 tmp . remove ( t )             a [ t ]   -=   1              if  a [ t ]   <   0 :                 a [ t ]   =   0                 q  +=   1      if  tmp :         q  -=  min ( map ( lambda  x :  a [ x ],  tmp ))      print ( """" . join ( list ( map ( lambda  x :   'Y'   if  a [ x ]   -  q  <=   0   or  x  in  tmp  else   'N' ,  range ( len ( a ))))))     for  i  in  range ( int ( input ())):     input ()     testCase ()",kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln lit pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln lit pln kwd pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun kwd pln pun pln str pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln kwd pln str pun pln pun pln pun pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun,764 ms,6900 KB,522
29499087,2017-08-16 10:29:00,Qumeric,523C - Name Quest,Python 3,Accepted,20,140,"t  =  input () s  =  input () l_t   =  len ( t ) l_s  =  len ( s ) x  =   0 f  =  l_s + 1 for  i  in  range ( l_s ):      if  t [ x ]   ==  s [ i ]:  x  +=   1      if  x  ==   l_t :         f  =  i          break c  =   - 1 y  =   l_t - 1 for  i  in  range ( l_s - 1 ,- 1 ,- 1 ):      if  t [ y ]   ==  s [ i ]:  y  -=   1      if  y  ==   - 1 :         c  =  i          break if  c  -  f  <=   0 :   print ( 0 ) else :   print ( c  -  f )",pln pun pln pun pln pun pln pun typ pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun lit kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln typ pun pln pun pln pln kwd pln pun pln pun lit pln pun pln typ pun lit kwd pln kwd pln pun pln pun lit pun lit pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pln kwd kwd pln pun pln pun pln lit pun pln kwd pun lit pun kwd pun pln kwd pun pln pun pln pun,62 ms,7800 KB,523
32562495,2017-11-23 01:02:00,yugle7,529E - The Art of Dealing with ATM,Python 3,Accepted,20,140,"t  =  input () s  =  input () l_t   =  len ( t ) l_s  =  len ( s ) x  =   0 f  =  l_s + 1 for  i  in  range ( l_s ):      if  t [ x ]   ==  s [ i ]:  x  +=   1      if  x  ==   l_t :         f  =  i          break c  =   - 1 y  =   l_t - 1 for  i  in  range ( l_s - 1 ,- 1 ,- 1 ):      if  t [ y ]   ==  s [ i ]:  y  -=   1      if  y  ==   - 1 :         c  =  i          break if  c  -  f  <=   0 :   print ( 0 ) else :   print ( c  -  f )",pln pun pln pun pln pun pln pun typ pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun lit kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln typ pun pln pun pln pln kwd pln pun pln pun lit pln pun pln typ pun lit kwd pln kwd pln pun pln pun lit pun lit pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pln kwd kwd pln pun pln pun pln lit pun pln kwd pun lit pun kwd pun pln kwd pun pln pun pln pun,467 ms,7300 KB,524
10553237,2015-04-02 20:00:00,merolish,525C - Ilya and Sticks,Python 3,Accepted,9,94,"n ,  v ,  ps ,  pp  =  int ( input ()),   0 ,   0 ,   0 for  l  in  sorted ( map ( int ,  input (). split ()),  reverse = True ):      if  ps  ==   0   or  ps  >  l  +   1 :         ps  =  l      elif  pp  ==   0 :         pp ,  ps  =  l ,   0      else :         v ,  pp ,  ps  =  v  +  pp  *  l ,   0 ,   0 print ( v )",pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln kwd pln pun pln lit pln kwd pln pun pln pun pln lit pun pln pun pln pln kwd pln pun pln lit pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit kwd pun pln pun,156 ms,7500 KB,525
22649999,2016-12-02 03:23:00,vjudge4,526C - Om Nom and Candies,Python 3,Accepted,14,107,"import  math c , x , y , a , b  =  map ( int , input (). split ()) lim  =  int ( math . sqrt ( c )) ans  =   0 for  i  in  range ( lim ):      if ( c >= i * a ):         ans  =  max ( ans , x * i +( c - i * a )// b * y )      if ( c >= i * b ):         ans  =  max ( ans , y * i +( c - i * b )// a * x ) print ( ans )          			 	 		  		 	  	 		  		",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pln pln pln,109 ms,0 KB,526
31867080,2017-10-29 15:54:00,yugle7,533C - Board Game,Python 3,Accepted,14,107,"import  math c , x , y , a , b  =  map ( int , input (). split ()) lim  =  int ( math . sqrt ( c )) ans  =   0 for  i  in  range ( lim ):      if ( c >= i * a ):         ans  =  max ( ans , x * i +( c - i * a )// b * y )      if ( c >= i * b ):         ans  =  max ( ans , y * i +( c - i * b )// a * x ) print ( ans )          			 	 		  		 	  	 		  		",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pln pln pln,62 ms,0 KB,532
31867080,2017-10-29 15:54:00,yugle7,533C - Board Game,Python 3,Accepted,2,44,"x ,  y ,  a ,  b  =  map ( int ,  input (). split ()) print ( 'Vasiliy'   if  a  <  x  and  b  <  x  +  y  or  b  <  y  and  a  <  x  +  y  else   'Polycarp' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln str pun,62 ms,0 KB,533
32141715,2017-11-08 17:23:00,yugle7,534C - Polycarpus' Dice,Python 3,Accepted,5,71,"f  =   lambda :  map ( int ,  input (). split ()) n ,  s  =  f () d  =  list ( f ()) t  =  sum ( d ) for  q  in  d :   print ( q  -  max ( 0 ,  min ( q ,  s  -  n  +   1 )   -  max ( 0 ,  q  -  t  +  s  -   1 )))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun,998 ms,14300 KB,534
31255727,2017-10-12 19:53:00,yugle7,535C - Tavas and Karafs,Python 3,Accepted,9,113,"f  =   lambda :  map ( int ,  input (). split ()) A ,  B ,  n  =  f () k  =   0.5 for  i  in  range ( n ):     l ,  t ,  m  =  f ()     b  =  A  /  B  +  l  -  k     c  =  b  -  k  -   ( m  *  t )   /  B     r  =  min ( l  +  int (( b  *  b  -   2   *  c )   **  k  -  b ),   ( t  -  A )   //  B  +   1 )      print (- 1   if  r  <  l  else  r )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pun lit pln kwd pln pun pln kwd pln pun,1747 ms,0 KB,535
10914850,2015-04-28 06:40:00,jackowitzd2,538C - Tourist's Notes,Python 3,Accepted,12,140,"n ,  m  =  map ( int ,  input (). split ()) ld ,  lh  =  map ( int ,  input (). split ()) mh  =  lh  +   ( ld  -   1 )   # 1-indexed for  i  in  range ( 1 ,  m ): 	d ,  h  =  map ( int ,  input (). split ()) 	 if  abs ( h  -  lh )   >   ( d  -  ld ): 		 print ( 'IMPOSSIBLE' ) 		exit () 	mh  =  max ( mh ,  max ( h ,  lh )   +   (( d  -  ld )   -  abs ( h  -  lh ))   //   2 ) 	ld ,  lh  =  d ,  h mh  =  max ( mh ,  lh  +   ( n  -  ld )) print ( mh )  ",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln com kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln,436 ms,4600 KB,538
57129996,2019-07-16 09:42:00,lanvu,540C - Ice Cave,Python 3,Accepted,28,235,"from  collections  import  deque   n , m  =  map ( int ,  input (). split ( ' ' )) ice  =   [[]]   for  _  in  range ( n ):   ice . append ([ '' ]+  list ( input ()))   r1 , c1  =  map ( int ,  input (). split ( ' ' )) r2 , c2  =  map ( int ,  input (). split ( ' ' ))   q  =  deque () q . append (( r1 , c1 ))   while  q :   cur  =  q . popleft ()      for  x , y  in   ( 0 , 1 ),( 1 , 0 ),( 0 ,- 1 ),(- 1 , 0 ):     cx  =  cur [ 0 ]+ x     cy  =  cur [ 1 ]+ y      if   0 < cx <= n  and   0 < cy <= m  and   ( ice [ cx ][ cy ]   ==   '.'   or   ( cx , cy )   ==   ( r2 , c2 )):        if   ( cx , cy )   ==   ( r2 , c2 )   and  ice [ cx ][ cy ]   ==   'X' :          print ( 'YES' )         exit ()       ice [ cx ][ cy ]   =   'X'       q . append (( cx , cy ))        print ( 'NO' )",kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln pun pln kwd pln pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun pln pun pln pun lit pun pln pln pun pln pun lit pun pln pln kwd pln lit pun pln pun pln kwd pln lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln str pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun pln str pln pun pln pun pln pun pln pun pln kwd pun str pun,1169 ms,2000 KB,540
10996608,2015-05-04 17:10:00,alex_world#,542C - Idempotent functions,Python 3,Accepted,28,235,"from  collections  import  deque   n , m  =  map ( int ,  input (). split ( ' ' )) ice  =   [[]]   for  _  in  range ( n ):   ice . append ([ '' ]+  list ( input ()))   r1 , c1  =  map ( int ,  input (). split ( ' ' )) r2 , c2  =  map ( int ,  input (). split ( ' ' ))   q  =  deque () q . append (( r1 , c1 ))   while  q :   cur  =  q . popleft ()      for  x , y  in   ( 0 , 1 ),( 1 , 0 ),( 0 ,- 1 ),(- 1 , 0 ):     cx  =  cur [ 0 ]+ x     cy  =  cur [ 1 ]+ y      if   0 < cx <= n  and   0 < cy <= m  and   ( ice [ cx ][ cy ]   ==   '.'   or   ( cx , cy )   ==   ( r2 , c2 )):        if   ( cx , cy )   ==   ( r2 , c2 )   and  ice [ cx ][ cy ]   ==   'X' :          print ( 'YES' )         exit ()       ice [ cx ][ cy ]   =   'X'       q . append (( cx , cy ))        print ( 'NO' )",kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln pun pln kwd pln pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun pln pun pln pun lit pun pln pln pun pln pun lit pun pln pln kwd pln lit pun pln pun pln kwd pln lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln str pun pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun pln str pln pun pln pun pln pun pln pun pln kwd pun str pun,171 ms,6400 KB,541
10996608,2015-05-04 17:10:00,alex_world#,542C - Idempotent functions,Python 3,Accepted,27,176,"from  math  import   * from  random  import   * from  copy  import   * import  os import  sys import  fractions   n  =  int ( input ()) A  =   [ 0 ]   +  list ( map ( int ,  input (). split ())) X ,  Y  =   0 ,   1   for  i  in  range ( 1 ,  n  +   1 ):     cnt  =   [- 1 ]   *   ( n  +   1 )     now  =  i     x  =   0        while  cnt [ now ]   ==   - 1 :         cnt [ now ]   =  x         now  =  A [ now ]         x  +=   1       y  =  x  -  cnt [ now ]     x  -=  y     X  =  max ( X ,  x )     Y  =  Y  *  y  //  fractions . gcd ( Y ,  y )   print ( max ( Y ,   ( X  +  Y  -   1 )   //  Y  *  Y ))",kwd pln kwd pln pun kwd pln kwd pln pun kwd pln kwd pln pun kwd pln kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln pln pun pln lit pln pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun,171 ms,6400 KB,542
22720784,2016-12-06 02:28:00,Gribon,545C - Woodcutters,Python 3,Accepted,11,112,"n  =  int ( input ()) arr  =   [ list ( map ( int ,  input (). split ()))   for  i  in  range ( n )] s  =   2 for  i  in  range ( 1 ,  n  -   1 ): 	x ,  h  =  arr [ i ] 	 if  x  -  h  >  arr [ i  -   1 ][ 0 ]: 		s  +=   1 	 elif  x  +  h  <  arr [ i  +   1 ][ 0 ]: 		s  +=   1 		arr [ i ][ 0 ]   +=  h print ( s  if  n  >   1   else   1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pun lit pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit pun lit pun pln pun pln lit pln pun pln pun lit pun pln pun pln kwd pun pln kwd pln pun pln lit pln kwd pln lit pun,467 ms,11500 KB,545
20470719,2016-09-09 04:42:00,Amores,546C - Soldier and Cards,Python 3,Accepted,11,113,"I = lambda : list ( map ( int , input (). split ()))[ 1 :] I () a = I () b = I () t = 0 while  t < 10 ** 5   and  a  and  b :     t += 1      if  a [ 0 ]> b [ 0 ]: a +=[ b [ 0 ], a [ 0 ]]      else : b +=[ a [ 0 ], b [ 0 ]]     a = a [ 1 :]; b = b [ 1 :] print ([ str ( t )+ ' ' + str ( 1 + bool ( b )),- 1 ][ t == 10 ** 5 ])",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun lit pun lit pln kwd pln kwd pln pun pln pun lit pln kwd pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln kwd pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun kwd pun pln pun pln pun str pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun lit pun,187 ms,0 KB,546
31927701,2017-10-31 19:41:00,yugle7,549C - The Game Of Parity,Python 3,Accepted,7,102,"f  =   lambda :  map ( int ,  input (). split ()) n ,  k  =  f () d  =  sum ( q  &   1   for  q  in  f ()) s  =  n  -  k  >>   1 q  =  s  <  d  and   ( k  &   1   or  s  <  n  -  d )   if  n  -  k  &   1   else  k  &   1   and  s  >=  n  -  d if  n  ==  k :  q  =  d  &   1 print ([ 'Daenerys' ,   'Stannis' ][ q ])",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln lit kwd pun str pun pln str pun pln pun,155 ms,11400 KB,549
46029430,2018-11-21 15:56:00,Silky_Littleraisin,550C - Divisibility by Eight,Python 3,Accepted,5,50,"import  re n = input () for  i  in  range ( 0 , 993 , 8 ):      if  re . search ( '.*' . join ( str ( i )), n ): print ( 'YES' , i ); break      if  i > 991 : print ( 'NO' )",kwd pln pln pun pln pun kwd pln kwd pln pun lit pun lit pun lit pun pln kwd pln pun pln pun str pun pln pun pln pun pln pun pln pun kwd pun str pun pln pun kwd pln kwd pln pun lit pun kwd pun str pun,171 ms,700 KB,550
11686455,2015-06-20 23:11:00,Fekete,552C - Vanya and Scales,Python 3,Accepted,3,45,"w , m = map ( int , input (). split ()) for  i  in  range ( 33 ):  m = min ( m , abs ( w **( 32 - i )- m )) print ( ""NO""   if  m  else   ""YES"" )",pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun kwd pun str pln kwd pln kwd pln str pun,62 ms,0 KB,552
53717607,2019-05-03 22:53:00,sarh,553C - Love Triangles,Python 3,Accepted,47,336,"class  DSU ( object ):      def  __init__ ( self ,  n ):         self . father  =  list ( range ( n ))         self . size  =  n        def  union ( self ,  x ,  s ):         x  =  self . find ( x )         s  =  self . find ( s )          if  x  ==  s :              return         self . father [ s ]   =  x         self . size  -=   1        def  find ( self ,  x ):         xf  =  self . father [ x ]          if  xf  !=  x :             self . father [ x ]   =  self . find ( xf )          return  self . father [ x ]     def  is_invalid ( a ,  b ,  ds ):      return  ds . find ( a )   ==  ds . find ( b )     n ,  k  =  map ( int ,  input (). split ()) ds  =  DSU ( n  *   2 ) for  i  in  range ( k ):     first ,  second ,  color  =  map ( int ,  input (). split ())     first  -=   1     second  -=   1      if  color  ==   0 :          if  is_invalid ( first ,  second ,  ds ):              print ( 0 )             exit ()         ds . union ( first ,  second  +  n )         ds . union ( first  +  n ,  second )      else :          if  is_invalid ( first ,  second  +  n ,  ds ):              print ( 0 )             exit ()         ds . union ( first ,  second )         ds . union ( first  +  n ,  second  +  n )   sum  =   1 for  i  in  range ( ds . size  //   2   -   1 ):     sum  =   ( sum  *   2 )   %   ( 10   **   9   +   7 ) print ( sum )",kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln lit pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln kwd pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln kwd pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln lit pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun lit pln pun pln lit pln pun pln lit pun kwd pun pln pun,1232 ms,4200 KB,553
12293401,2015-07-31 18:12:00,Fekete,554C - Kyoya and Colored Balls,Python 3,Accepted,7,62,"from  math  import  factorial n , ans , s  =  int ( input ()), 1 , 0 for  i  in  range ( n )   :   a  =  int ( input ())   ans =( ans * factorial ( s + a - 1 )// factorial ( s )// factorial ( a - 1 ))% 1000000007   s += a print ( ans )",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun lit pln pun pln kwd pun pln pun,155 ms,100 KB,554
47010145,2018-12-14 19:01:00,Silky_Littleraisin,555A - Case of Matryoshkas,Python 3,Accepted,7,62,"from  math  import  factorial n , ans , s  =  int ( input ()), 1 , 0 for  i  in  range ( n )   :   a  =  int ( input ())   ans =( ans * factorial ( s + a - 1 )// factorial ( s )// factorial ( a - 1 ))% 1000000007   s += a print ( ans )",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun lit pln pun pln kwd pun pln pun,327 ms,6900 KB,556
31173326,2017-10-09 19:54:00,yugle7,557C - Arthur and Table,Python 3,Accepted,14,161,"f  =   lambda :  map ( int ,  input (). split ()) n ,  p ,  m ,  s  =  input (),   {},   0 ,  sorted ( zip ( f (),  f ()),  key = lambda  q :   - q [ 1 ]) for  L ,  d  in  s :     k ,  D  =  p . get ( L ,   (- 1 ,   0 ))     p [ L ]   =   ( k  +   1 ,  D  +  d ) for  L ,   ( k ,  D )   in  p . items ():      if  k :          for  l ,  d  in  s :              if  l  <  L :                 D  +=  d                 k  -=   1                  if  k  ==   0 :   break     m  =  max ( D ,  m ) print ( sum ( d  for  l ,  d  in  s )   -  m )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun lit pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pln pun pln lit pln kwd pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun kwd pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun,436 ms,14400 KB,557
52543179,2019-04-09 22:17:00,BiubiubiuYa,558C - Amr and Chemistry,Python 3,Accepted,30,207,"n  =  int ( input ()) s  =  list ( map ( int ,  input (). split ()))   l  =   [ bin ( i )[ 2 :]   for  i  in  s ] length  =   [ len ( i )   for  i  in  l ] maxLen  =  max ( length ) minLen  =  min ( length )   loc  =   0 flag  =   False for  j  in  range ( minLen ):      for  i  in  range ( n ):          if  l [ i ][ j ]   !=  l [ 0 ][ j ]:             flag  =   True              break           if  flag :          break     loc  +=   1      result  =  sum ( length )   -  loc  *  n best  =  result change  =  n *[- 1 ] for  j  in  range ( loc ,  maxLen ):      for  i  in  range ( n ):          if  j  >=  length [ i ]   or  l [ i ][ j ]   ==   '1' :             change [ i ]   =   1     result  +=  sum ( change )             if  result  >  best :          break     best  =  result print ( best )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln pun pln kwd kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pln kwd pln pun pln kwd pln pun pln lit pln pln pun pln pun pln pun pln pun pln pun pln pln pun pln pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln str pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pln kwd pln pun pln pun pln kwd pln pun pln kwd pun pln pun,670 ms,9600 KB,558
12263680,2015-07-29 14:28:00,SerVasilich,560C - Gerald's Hexagon,Python 3,Accepted,2,42,"a , b , c , d , e , f = map ( int , input (). split ()) print (( a + b + c )** 2 - a * a - c * c - e * e )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun,46 ms,0 KB,560
12399282,2015-08-07 11:23:00,SerVasilich,567C - Geometric Progression,Python 3,Accepted,11,95,"s = 0 m ={} o ={} n , k = map ( int , input (). split ()) l = list ( map ( int , input (). split ())) for  a  in  l :   if  a % k == 0 :   s += m . get ( a / k , 0 )   m [ a ]= m . get ( a , 0 )+ o . get ( a / k , 0 )  o [ a ]= o . get ( a , 0 )+ 1 print ( s )",pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pun pln pun,436 ms,21000 KB,567
31034631,2017-10-05 16:10:00,yugle7,568A - Primes or Palindromes?,Python 3,Accepted,11,95,"s = 0 m ={} o ={} n , k = map ( int , input (). split ()) l = list ( map ( int , input (). split ())) for  a  in  l :   if  a % k == 0 :   s += m . get ( a / k , 0 )   m [ a ]= m . get ( a , 0 )+ o . get ( a / k , 0 )  o [ a ]= o . get ( a , 0 )+ 1 print ( s )",pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pun pln pun,701 ms,4700 KB,569
16940429,2016-03-26 00:12:00,SilverVoo,570C - Replacement,Python 3,Accepted,10,162,"n ,  m  =  map ( int ,  input (). split ()) s  =   [ c  !=   '.'   for  c  in  input ()]+[ True ] k  =  sum ( s [ i ]   ==   0   and  s [ i  +   1 ]   !=   1   for  i  in  range ( n )) t  =   [ 0 ]   *  m for  i  in  range ( m ):     x ,  c  =  input (). split ()     x ,  c  =  int ( x )   -   1 ,  c  !=   '.'     k  +=   ( c  -  s [ x ])   *   ( s [ x  -   1 ]   +  s [ x  +   1 ]   -   2 )     s [ x ],  t [ i ]   =  c ,  k print ( '\n' . join ( map ( str ,  t )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln kwd pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun,1231 ms,28400 KB,570
24978146,2017-02-24 15:01:00,sina-ss,571A - Lengthening Sticks,Python 3,Accepted,10,162,"n ,  m  =  map ( int ,  input (). split ()) s  =   [ c  !=   '.'   for  c  in  input ()]+[ True ] k  =  sum ( s [ i ]   ==   0   and  s [ i  +   1 ]   !=   1   for  i  in  range ( n )) t  =   [ 0 ]   *  m for  i  in  range ( m ):     x ,  c  =  input (). split ()     x ,  c  =  int ( x )   -   1 ,  c  !=   '.'     k  +=   ( c  -  s [ x ])   *   ( s [ x  -   1 ]   +  s [ x  +   1 ]   -   2 )     s [ x ],  t [ i ]   =  c ,  k print ( '\n' . join ( map ( str ,  t )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln kwd pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun,701 ms,4500 KB,572
19951738,2016-08-18 21:24:00,Amores,573A - Bear and Poker,Python 3,Accepted,10,162,"n ,  m  =  map ( int ,  input (). split ()) s  =   [ c  !=   '.'   for  c  in  input ()]+[ True ] k  =  sum ( s [ i ]   ==   0   and  s [ i  +   1 ]   !=   1   for  i  in  range ( n )) t  =   [ 0 ]   *  m for  i  in  range ( m ):     x ,  c  =  input (). split ()     x ,  c  =  int ( x )   -   1 ,  c  !=   '.'     k  +=   ( c  -  s [ x ])   *   ( s [ x  -   1 ]   +  s [ x  +   1 ]   -   2 )     s [ x ],  t [ i ]   =  c ,  k print ( '\n' . join ( map ( str ,  t )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln kwd pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun,607 ms,11700 KB,574
46240365,2018-11-26 10:28:00,Silky_Littleraisin,576A - Vasya and Petya's Game,Python 3,Accepted,10,162,"n ,  m  =  map ( int ,  input (). split ()) s  =   [ c  !=   '.'   for  c  in  input ()]+[ True ] k  =  sum ( s [ i ]   ==   0   and  s [ i  +   1 ]   !=   1   for  i  in  range ( n )) t  =   [ 0 ]   *  m for  i  in  range ( m ):     x ,  c  =  input (). split ()     x ,  c  =  int ( x )   -   1 ,  c  !=   '.'     k  +=   ( c  -  s [ x ])   *   ( s [ x  -   1 ]   +  s [ x  +   1 ]   -   2 )     s [ x ],  t [ i ]   =  c ,  k print ( '\n' . join ( map ( str ,  t )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln kwd pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun,124 ms,0 KB,577
15914604,2016-02-09 16:48:00,not_bot_but_POT,578A - A Problem about Polyline,Python 3,Accepted,10,162,"n ,  m  =  map ( int ,  input (). split ()) s  =   [ c  !=   '.'   for  c  in  input ()]+[ True ] k  =  sum ( s [ i ]   ==   0   and  s [ i  +   1 ]   !=   1   for  i  in  range ( n )) t  =   [ 0 ]   *  m for  i  in  range ( m ):     x ,  c  =  input (). split ()     x ,  c  =  int ( x )   -   1 ,  c  !=   '.'     k  +=   ( c  -  s [ x ])   *   ( s [ x  -   1 ]   +  s [ x  +   1 ]   -   2 )     s [ x ],  t [ i ]   =  c ,  k print ( '\n' . join ( map ( str ,  t )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln kwd pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln lit pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun pln pun pln pun pln pun pln pun,62 ms,0 KB,579
46028965,2018-11-21 15:45:00,Silky_Littleraisin,580C - Kefa and Park,Python 3,Accepted,24,169,"M = lambda : map ( int , input (). split ()) n , m = M () * c ,= M () t =[[] for  i  in  range ( n )] v =[ 0 ]* n for  i  in  range ( n - 1 ):     x , y = M ()     t [ x - 1 ]. append ( y - 1 )     t [ y - 1 ]. append ( x - 1 ) a = i = 0 q =[( 0 , 0 )] while  i < len ( q ):     x , N = q [ i ]     v [ x ]= 1      if  c [ x ]+ N <= m :         L = 1          for  y  in  t [ x ]:              if   not  v [ y ]:                 L = 0                 q . append (( y , c [ x ]*( c [ x ]+ N )))          if  L :             a += 1     i += 1 print ( a )",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pln pun lit pun lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pln pun lit kwd pun pln pun,592 ms,14900 KB,580
19721803,2016-08-08 09:42:00,Amores,581C - Developing Skills,Python 3,Accepted,12,82,"I = lambda : map ( int , input (). split ()) n , k = I () r = 0 a =[] for  i  in  I ():     r += i // 10     a +=[ i % 10 ] for  i  in  sorted ( a , reverse = 1 ):      if  i + k > 9 :         k = k - 10 + i         r += 1 print ( min ( n * 10 , r + k // 10 ))",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun kwd pln kwd pln pun pln pun pln pun lit pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pln pun lit kwd pun pln pun pln pun lit pun pln pun pln pun lit pun,187 ms,9800 KB,581
15914609,2016-02-09 16:48:00,not_bot_but_POT,582A - GCD Table,Python 3,Accepted,12,82,"I = lambda : map ( int , input (). split ()) n , k = I () r = 0 a =[] for  i  in  I ():     r += i // 10     a +=[ i % 10 ] for  i  in  sorted ( a , reverse = 1 ):      if  i + k > 9 :         k = k - 10 + i         r += 1 print ( min ( n * 10 , r + k // 10 ))",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun kwd pln kwd pln pun pln pun pln pun lit pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pln pun lit kwd pun pln pun pln pun lit pun pln pun pln pun lit pun,670 ms,15700 KB,583
76742536,2020-04-15 01:13:00,thukrake_mera_pyaar,584C - Marina and Vasya,Python 3,Accepted,38,261,"n ,  t  =  map ( int ,  input (). split ()) a ,  b  =  input (),  input ()   ans  =   [] s  =  d  =   0 for  i ,  j  in  zip ( a ,  b ): 	 if  i  ==  j : 		s  +=   1 	 else : 		d  +=   1 if  t  <   ( d  +   1 )   //   2 : 	 print (- 1 ) 	exit ()   x  =  min ( n  -  t ,  s ) y  =  z  =  max ( n  -  t  -  s ,   0 )   def  f ( a ,  b ): 	 for  i  in  range ( 97 ,   123 ): 		 if  chr ( i )   not   in   [ a ,  b ]: 			 return  chr ( i )   for  i  in  range ( n ): 	 if  a [ i ]   ==  b [ i ]: 		 if  x : 			ans . append ( a [ i ]) 			x  -=   1 		 else : 			ans . append ( f ( a [ i ],  b [ i ])) 	 else : 		 if  y : 			ans . append ( a [ i ]) 			y  -=   1 		 elif  z : 			ans . append ( b [ i ]) 			z  -=   1 		 else : 			ans . append ( f ( a [ i ],  b [ i ])) print ( '' . join ( ans ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln lit kwd pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pun pln pun pln lit kwd pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pun lit pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln lit pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun,218 ms,1600 KB,584
13581529,2015-10-12 21:29:00,Thomas_Ahle,"585C - Alice, Bob, Oranges and Apples",Python 3,Accepted,18,131,"import  sys read  =   lambda :  list ( map ( int ,  sys . stdin . readline (). split ())) x ,  y  =  read ()   res  =   [] c  =   'A' while  x  *  y  >   1 :    k  =  min ( x  //  y ,  x  -   1 )     if  k  >   0 :       res . append ( '{}{}' . format ( k ,  c ))    x ,  y  =  y ,  x  -  k * y    c  =   'A'   if  c  ==   'B'   else   'B'   if  x  ==   0   or  y  ==   0 :     print ( 'Impossible' ) else :     print ( '' . join ( res ))  ",kwd pln pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln str kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln lit pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln str pln kwd pln pun pln str pln kwd pln str pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln kwd pun str pun kwd pun pln kwd pun str pun pln pun pln pun pln,62 ms,0 KB,585
13942210,2015-10-30 04:08:00,SteelRaven,587A - Duff and Weight Lifting,Python 3,Accepted,18,131,"import  sys read  =   lambda :  list ( map ( int ,  sys . stdin . readline (). split ())) x ,  y  =  read ()   res  =   [] c  =   'A' while  x  *  y  >   1 :    k  =  min ( x  //  y ,  x  -   1 )     if  k  >   0 :       res . append ( '{}{}' . format ( k ,  c ))    x ,  y  =  y ,  x  -  k * y    c  =   'A'   if  c  ==   'B'   else   'B'   if  x  ==   0   or  y  ==   0 :     print ( 'Impossible' ) else :     print ( '' . join ( res ))  ",kwd pln pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln str kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln lit pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln str pln kwd pln pun pln str pln kwd pln str pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln kwd pun str pun kwd pun pln kwd pun str pun pln pun pln pun pln,951 ms,61800 KB,588
76676828,2020-04-14 13:06:00,LeierKing,591C - Median Smoothing,Python 3,Accepted,18,151,"import  sys lines  =  sys . stdin . readlines () n  =  int ( lines [ 0 ]. strip ()) arr  =  list ( map ( int ,  lines [ 1 ]. strip (). split ( "" "" ))) arr . append ( arr [- 1 ]) res  =   [] maxChange  =   0   left  =   0 for  i  in  range ( 1 ,  n + 1 ):      if  arr [ i ]   ==  arr [ i - 1 ]:         L  =  i  -  left         res  +=   [ arr [ left ]]*( L // 2 )   +   [ arr [ i - 1 ]]*( L - L // 2 )         maxChange  =  max ( maxChange ,   ( L - 1 )// 2 )         left  =  i   print ( maxChange ) print ( "" "" . join ( map ( str ,  res )))",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun str pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pln pln pun pln lit kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pln kwd pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun,998 ms,26000 KB,591
14785123,2015-12-13 15:57:00,Teejay,592C - The Big Race,Python 3,Accepted,8,84,"from  fractions  import  gcd t , w , b = map ( int , input (). split ()) g = gcd ( w , b ) a =( w // g )* b cnt = t // a cnt  =  cnt *( min ( w , b ))+  min ( min ( w , b )- 1 , t - a * cnt ) g  =  gcd ( cnt , t ) print ( '%d/%d' %( cnt // g , t // g ))",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun,124 ms,1200 KB,592
42965307,2018-09-17 02:51:00,augurar,593C - Beautiful Function,Python 3,Accepted,33,178,"def  ex ( values ):     e  =   None      for  i ,  v  in  enumerate ( values ):         e_  =  f '({v//2}*((1-abs((t-{i})))+abs((1-abs((t-{i}))))))'          if  e  is   None :             e  =  e_          else :             e  =  f '({e}+{e_})'      return  e     def  solve ( circles ):     xs  =   [ c [ 0 ]   for  c  in  circles ]     ys  =   [ c [ 1 ]   for  c  in  circles ]      return  ex ( xs ),  ex ( ys )     def  pc ( line ):     t  =  tuple ( map ( int ,  line . split ()))      assert  len ( t )   ==   3 ,  f ""Invalid circle: {line}""      return  t     def  main ():     n  =  int ( input ())     circles  =   [ pc ( input ())   for  _  in  range ( n )]     f ,  g  =  solve ( circles )      print ( f )      print ( g )     if  __name__  ==   '__main__' :     main ()",kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln str pln kwd pln kwd pln kwd pun pln pun pln pln kwd pun pln pun pln str pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln str pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln kwd pun pln pun pln pln kwd pln pun pln str pun pln pun,124 ms,0 KB,593
14697441,2015-12-08 15:00:00,rickya,595E - Edo and Magnets,Python 3,Accepted,33,178,"def  ex ( values ):     e  =   None      for  i ,  v  in  enumerate ( values ):         e_  =  f '({v//2}*((1-abs((t-{i})))+abs((1-abs((t-{i}))))))'          if  e  is   None :             e  =  e_          else :             e  =  f '({e}+{e_})'      return  e     def  solve ( circles ):     xs  =   [ c [ 0 ]   for  c  in  circles ]     ys  =   [ c [ 1 ]   for  c  in  circles ]      return  ex ( xs ),  ex ( ys )     def  pc ( line ):     t  =  tuple ( map ( int ,  line . split ()))      assert  len ( t )   ==   3 ,  f ""Invalid circle: {line}""      return  t     def  main ():     n  =  int ( input ())     circles  =   [ pc ( input ())   for  _  in  range ( n )]     f ,  g  =  solve ( circles )      print ( f )      print ( g )     if  __name__  ==   '__main__' :     main ()",kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln str pln kwd pln kwd pln kwd pun pln pun pln pln kwd pun pln pun pln str pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln str pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln kwd pun pln pun pln pln kwd pln pun pln str pun pln pun,967 ms,16900 KB,594
14687957,2015-12-07 18:12:00,rickya#,595C - Warrior and Archer,Python 3,Accepted,3,50,"n  =  int ( input ()) x  =  sorted ( list ( map ( int ,  input (). split ()))) print ( min ([ x [ i  +  n  //   2 ]   -  x [ i ]   for  i  in  range ( n  //   2 )]))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun,233 ms,16400 KB,595
14347255,2015-11-19 20:37:00,Boterphile,596C - Wilbur and Points,Python 3,Accepted,27,225,"read  =   lambda :  map ( int ,  input (). split ()) n  =  int ( input ()) Max   =   {} for  i  in  range ( n ):     x ,  y  =  read ()     s  =  y  -  x      if  s  not   in   Max   or  y  >   Max [ s ]:          Max [ s ]   =  y   cur  =   { i :  max ( i ,   0 )   for  i  in   Max } ans  =   []   def  no ():      print ( 'NO' )     exit ()   for  i  in  read ():      if  i  not   in  cur :  no ()     y  =  cur [ i ]     f2  =  y  >   Max [ i ]     f3  =  i  +   1   in  cur  and  cur [ i  +   1 ]   !=  y  +   1     f4  =  i  -   1   in  cur  and  cur [ i  -   1 ]   !=  y      if  f2  or  f3  or  f4 :  no ()     ans . append ( '%d %d'   %   ( y  -  i ,  y ))     cur [ i ]   =  y  +   1   print ( 'YES\n'   +   '\n' . join ( ans ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun typ pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln kwd pln kwd pln typ pln kwd pln pun pln typ pun pln pun pln typ pun pln pun pln pun pln pln pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln typ pun pln pun pln pun pln kwd pln pun pln kwd pun str pun pln pun pln kwd pln kwd pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln typ pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun pln lit pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun str pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pun str pln pun pln str pun pln pun pln pun,592 ms,19600 KB,596
32083601,2017-11-05 23:46:00,yugle7,598C - Nearest vectors,Python 3,Accepted,18,216,"from  math  import  atan2   s  =   lambda  a ,  b :  a [ 0 ]   *  b [ 0 ]   +  a [ 1 ]   *  b [ 1 ] v  =   lambda  a ,  b :  a [ 0 ]   *  b [ 1 ]   -  a [ 1 ]   *  b [ 0 ]   p  =   [] for  i  in  range ( int ( input ())):     x ,  y  =  map ( int ,  input (). split ())     p . append (( atan2 ( x ,  y ),   ( x ,  y ),  i  +   1 )) p . sort ()   d  =   [( s ( a ,  b ),  abs ( v ( a ,  b )),  i ,  j )   for   ( x ,  a ,  i ),   ( y ,  b ,  j )   in  zip ( p ,  p [ 1 :]   +  p [: 1 ])] x  =  d [ 0 ]   for  y  in  d :      if  v ( y [: 2 ],  x [: 2 ])   >   0 :  x  =  y   print ( x [ 2 ],  x [ 3 ])",kwd pln kwd pln pln pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln kwd pln pun pln pun lit pun pln pun lit pun pln pun pln lit pun pln pun pln pln kwd pun pln pun lit pun pln pun lit pun,779 ms,25700 KB,598
51044568,2019-03-08 21:14:00,Shubham2227,599C - Day at the Beach,Python 3,Accepted,9,51,"n = int ( input ()) s = 0 v = 0 a = list ( map ( int , input (). split ())) for  i , j  in  zip ( a , sorted ( a )):     s += i - j     v += not  s print ( v )  ",pln pun pln pun pln pun pln pun lit pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun kwd pln kwd pun pln pun pln,186 ms,9000 KB,599
20040714,2016-08-22 10:35:00,DimPas,600C - Make Palindrome,Python 3,Accepted,13,170,"s  =  input () ss  =  dict () for  c  in  s :     ss [ c ]   =  ss . get ( c ,   0 )    +   1 w  =  list ( ss . keys ()) w . sort () wo  =   [ a  for  a  in  w  if  ss [ a ]   %   2   !=   0 ] for  a ,  b  in  zip ( wo [: len ( wo )// 2 ],  wo [::- 1 ][: len ( wo )// 2 ]):     ss [ a ]   +=   1     ss [ b ]   -=   1 sr  =   """" . join ([( ss [ c ]   //   2 )* c  for  c  in  w ]) p  =   [ c  for  c  in  w  if  ss [ c ]   %   2   !=   0 ] print ( sr  +   """" . join ( p )   +  sr [::- 1 ])",pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln lit pln pun pln lit pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln lit pln pun pln str pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln lit pln pun pln lit pun kwd pun pln pun pln str pun pln pun pln pun pln pun pln pun lit pun,124 ms,5700 KB,600
68154193,2020-01-04 11:16:00,ERIWUG,601A - The Two Routes,Python 3,Accepted,13,170,"s  =  input () ss  =  dict () for  c  in  s :     ss [ c ]   =  ss . get ( c ,   0 )    +   1 w  =  list ( ss . keys ()) w . sort () wo  =   [ a  for  a  in  w  if  ss [ a ]   %   2   !=   0 ] for  a ,  b  in  zip ( wo [: len ( wo )// 2 ],  wo [::- 1 ][: len ( wo )// 2 ]):     ss [ a ]   +=   1     ss [ b ]   -=   1 sr  =   """" . join ([( ss [ c ]   //   2 )* c  for  c  in  w ]) p  =   [ c  for  c  in  w  if  ss [ c ]   %   2   !=   0 ] print ( sr  +   """" . join ( p )   +  sr [::- 1 ])",pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln lit pln pun pln lit pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln lit pln pun pln str pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln lit pln pun pln lit pun kwd pun pln pun pln str pun pln pun pln pun pln pun pln pun lit pun,358 ms,900 KB,602
35522141,2018-02-20 16:18:00,yugle7,603C - Lieges of Legendre,Python 3,Accepted,10,142,"f  =   lambda :  map ( int ,  input (). split ()) n ,  k  =  f () s  =   0 for  a  in  f ():     d  =   0      while  a  %   ( 2   <<  d )   ==   0 :  d  +=   1     x  =  a  &   1   if  a  <   4   else   0   if  a  &   1   else   1   if   ( a  ==   3   <<  d )   ^   ( d  &   1 )   else   2     y  =  a  if  a  <   3   else  a  &   1   ^   1     s  ^=  x  if  k  &   1   else  y print ( 'Kevin'   if  s  else   'Nicky' )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln lit pln kwd pln pun pln pun lit pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln lit pln kwd pln pun pln lit pln kwd pln lit pln kwd pln pun pln lit pln kwd pln lit pln kwd pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln lit pln pun pln kwd pln pun pln lit pln kwd pln pun pln lit pln pun pln lit pln pun pln kwd pln pun pln lit pln kwd pln kwd pun str pln kwd pln kwd pln str pun,234 ms,12700 KB,603
27599112,2017-06-05 22:01:00,YazanRi,604C - Alternative Thinking,Python 3,Accepted,2,30,"n , s = int ( input ()), input () print ( min ( n , s . count ( '01' )+ s . count ( '10' )+ 3 ))",pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun str pun pln pun pln pun str pun lit pun,62 ms,200 KB,604
23080908,2016-12-18 12:30:00,augurar,606E - Freelancer's Dreams,Python 3,Accepted,2,30,"n , s = int ( input ()), input () print ( min ( n , s . count ( '01' )+ s . count ( '10' )+ 3 ))",pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun str pun pln pun pln pun str pun lit pun,873 ms,15900 KB,605
14844098,2015-12-17 12:50:00,Nymphet,605A - Sorting Railway Cars,Python 3,Accepted,2,30,"n , s = int ( input ()), input () print ( min ( n , s . count ( '01' )+ s . count ( '10' )+ 3 ))",pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun str pun pln pun pln pun str pun lit pun,109 ms,6800 KB,606
15929969,2016-02-10 16:57:00,surokpro,608E - Marbles,Python 3,Accepted,2,30,"n , s = int ( input ()), input () print ( min ( n , s . count ( '01' )+ s . count ( '10' )+ 3 ))",pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun str pun pln pun pln pun str pun lit pun,1575 ms,34800 KB,607
61037011,2019-09-21 23:27:00,gosaindhruv,607A - Chain Reaction,Python 3,Accepted,2,30,"n , s = int ( input ()), input () print ( min ( n , s . count ( '01' )+ s . count ( '10' )+ 3 ))",pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun str pun pln pun pln pun str pun lit pun,592 ms,6000 KB,608
14884066,2015-12-19 18:59:00,merolish,609C - Load Balancing,Python 3,Accepted,3,78,"n ,  m  =  int ( input ()),  list ( map ( int ,  input (). split ())) a ,  b  =  sum ( m )   //  n ,   ( sum ( m )   +  n  -   1 )   //  n print ( max ( sum ( a  -  x  for  x  in  m  if  x  <  a ),  sum ( x  -  b  for  x  in  m  if  x  >  b )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun,108 ms,7200 KB,609
32319341,2017-11-14 22:54:00,yugle7,610C - Harmony Analysis,Python 3,Accepted,4,70,p  =   [[ 0 ]] for  i  in  range ( int ( input ())):     p  =   [ t  +  t  for  t  in  p ]   +   [[ 1   -  q  for  q  in  t ]   +  t  for  t  in  p ] for  t  in  p :   print ( '' . join ( '+*' [ q ]   for  q  in  t )),pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun kwd pln kwd pln pun pln kwd pun str pun pln pun str pun pln pun pln kwd pln kwd pln pun,93 ms,1300 KB,610
46907471,2018-12-11 18:01:00,Silky_Littleraisin,611C - New Year and Domino,Python 3,Accepted,11,285,"n , m = map ( int , input (). split ()) r , c =[[ 0   for  i  in  range ( m + 1 )] for  j  in  range ( n + 1 )],[[ 0   for  i  in  range ( m + 1 )] for  j  in  range ( n + 1 )] g =[ ' ' *( m + 1 )]+[ ' ' + input ()   for  _  in  range ( n )] for  i  in  range ( 1 , n + 1 ):      for  j  in  range ( 1 , m + 1 ):           r [ i ][ j ]= r [ i ][ j - 1 ]+ r [ i - 1 ][ j ]- r [ i - 1 ][ j - 1 ]+( g [ i ][ j ]== g [ i ][ j - 1 ]== '.' )         c [ i ][ j ]= c [ i ][ j - 1 ]+ c [ i - 1 ][ j ]- c [ i - 1 ][ j - 1 ]+( g [ i ][ j ]== g [ i - 1 ][ j ]== '.' ) q = int ( input ()) for  _  in   ' ' * q :     r1 , c1 , r2 , c2 = map ( int , input (). split ())      print ( r [ r2 ][ c2 ]- r [ r1 - 1 ][ c2 ]- r [ r2 ][ c1 ]+ r [ r1 - 1 ][ c1 ]+ c [ r2 ][ c2 ]- c [ r1 ][ c2 ]- c [ r2 ][ c1 - 1 ]+ c [ r1 ][ c1 - 1 ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun lit pun kwd pln kwd pln pun pln pun lit pun lit pln kwd pln kwd pln pun pln pun lit pun kwd pln kwd pln pun pln pun lit pun pln pun str pun pln pun lit pun str pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun str pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun str pun pln pun pln pun pln pun kwd pln kwd pln str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun,1777 ms,13400 KB,611
33033041,2017-12-08 22:14:00,yugle7,612C - Replace To Make Regular Bracket Sequence,Python 3,Accepted,10,77,"k ,  s  =   0 ,   [] for  q  in  input ():     i  =   '[{<(]}>)' . find ( q )      if  i  >   3 :          if   not  s :             s  =   1              break          if  s . pop ()   !=  i  -   4 :  k  +=   1      else :  s  +=   [ i ] print ( 'Impossible'   if  s  else  k )",pln pun pln pun pln lit pun pln pun kwd pln kwd pln pun pln pun pln str pun pln pun pln pun pln kwd pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln kwd pun pln pun pln pun pln pun kwd pun str pln kwd pln kwd pln pun,670 ms,15800 KB,612
15373895,2016-01-14 22:12:00,cugel,613C - Necklace,Python 3,Accepted,26,255,"import  math #import fractions from  functools  import  reduce   n  =  int ( input ()) odd  =   - 1 beads  =   [ int ( x )   for  x  in  input (). split ()] for  i  in  range ( n ):      if  beads [ i ]% 2 :          if  odd  >=   0 :              print ( 0 )              print ( '' . join ( chr ( ord ( 'a' )   +  i )* beads [ i ]   for  i  in  range ( n )))              break          else :             odd  =  i else :     gcd  =  reduce ( lambda  x , y :  math . gcd ( x , y ),  beads )      print ( gcd )      if  odd  >=   0 :         s  =   '' . join ( chr ( ord ( 'a' )   +  i )*( beads [ i ]//( 2 * gcd ))   for  i  in  range ( n )   if  i  !=  odd )         p  =  s  +  chr ( ord ( 'a' )   +  odd )*( beads [ odd ]// gcd )   +  s [::- 1 ]          print ( p * gcd )      else :         s  =   '' . join ( chr ( ord ( 'a' )   +  i )*( beads [ i ]// gcd )   for  i  in  range ( n ))         p  =  s  +  s [::- 1 ]          print ( p *( gcd // 2 ))",kwd pln com kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln pun lit pun pln kwd pln pun pln lit pun pln kwd pun lit pun pln kwd pun str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pun pln pun pln kwd pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln kwd pln pun pln lit pun pln pun pln str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun pln pun pln kwd pun pln pun pln str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun pln pun lit pun,62 ms,1200 KB,613
36276845,2018-03-14 16:17:00,MarcoXerox,613A - Peter and Snow Blower,Python 3,Accepted,26,255,"import  math #import fractions from  functools  import  reduce   n  =  int ( input ()) odd  =   - 1 beads  =   [ int ( x )   for  x  in  input (). split ()] for  i  in  range ( n ):      if  beads [ i ]% 2 :          if  odd  >=   0 :              print ( 0 )              print ( '' . join ( chr ( ord ( 'a' )   +  i )* beads [ i ]   for  i  in  range ( n )))              break          else :             odd  =  i else :     gcd  =  reduce ( lambda  x , y :  math . gcd ( x , y ),  beads )      print ( gcd )      if  odd  >=   0 :         s  =   '' . join ( chr ( ord ( 'a' )   +  i )*( beads [ i ]//( 2 * gcd ))   for  i  in  range ( n )   if  i  !=  odd )         p  =  s  +  chr ( ord ( 'a' )   +  odd )*( beads [ odd ]// gcd )   +  s [::- 1 ]          print ( p * gcd )      else :         s  =   '' . join ( chr ( ord ( 'a' )   +  i )*( beads [ i ]// gcd )   for  i  in  range ( n ))         p  =  s  +  s [::- 1 ]          print ( p *( gcd // 2 ))",kwd pln com kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln pun lit pun pln kwd pln pun pln lit pun pln kwd pun lit pun pln kwd pun str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pun pln pun pln kwd pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln kwd pln pun pln lit pun pln pun pln str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun pln pun pln kwd pun pln pun pln str pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun pln pun lit pun,545 ms,15000 KB,614
68854121,2020-01-15 13:03:00,tushartyagi8750#,615C - Running Track,Python 3,Accepted,27,164,"s1  =  input () s =  input ()+ '.' s2 = s1 [::- 1 ] l = len ( s ) ll = len ( s1 ) a = '' lis =[] for  i  in  range ( l ):     v = a + s [ i ]      if  v  in  s1  or  v  in  s2 :          a = a + s [ i ]      else :          if  a  in  s1 :             k = s1 . index ( a )+ 1             lis . append ([ k , k + len ( a )- 1 ]) #            print(s1.index(a),a)          elif  a  in  s2 :             k = s2 . index ( a )             lis . append ([ ll - k , ll - k -( len ( a )- 1 )]) #            print(k)          else :              print (- 1 )             exit ()         a = s [ i ] print ( len ( lis ))                      for  i  in  lis :      print (* i )",pln pun pln pun pln pun pln pun str pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun lit pun com pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun com pln kwd pun pln kwd pun lit pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pun pln pun,124 ms,1100 KB,615
32228645,2017-11-11 22:03:00,yugle7,617C - Watering Flowers,Python 3,Accepted,13,137,"f  =   lambda :  map ( int ,  input (). split ()) n ,  a ,  b ,  c ,  d  =  f () t  =   [] for  i  in  range ( n ):     x ,  y  =  f ()     t . append ((( x  -  a )   **   2   +   ( y  -  b )   **   2 ,   ( x  -  c )   **   2   +   ( y  -  d )   **   2 )) t . sort () s  =   8e14 q  =   0 for  u ,  v  in  reversed ( t ):     s  =  min ( s ,  u  +  q )     q  =  max ( q ,  v ) print ( min ( s ,  q ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pln pun pln lit kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun,78 ms,100 KB,617
31094326,2017-10-07 01:13:00,yugle7,618C - Constellation,Python 3,Accepted,7,110,"t  =   [( list ( map ( int ,  input (). split ()))   +   [ i  +   1 ])   for  i  in  range ( int ( input ()))] t . sort () x ,  y ,  i  =  t [ 0 ] u ,  v ,  j  =  t [ 1 ] for  a ,  b ,  k  in  t [ 2 :]:      if   ( u  -  x )   *   ( b  -  y )   -   ( v  -  y )   *   ( a  -  x ):   break print ( i ,  j ,  k )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun kwd pln pun pln pun pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd kwd pun pln pun pln pun pln pun,608 ms,13200 KB,618
43452860,2018-09-26 16:52:00,rithwik27,620C - Pearls in a Row,Python 3,Accepted,20,122,"n = int ( input ()) d ={} b =[] e = 1 a = list ( map ( int , input (). split ())) for  i  in  range ( n ): 	 if  a [ i ]   in  d : 		b . append ([ e , i + 1 ]) 		e = i + 2 		d . clear () 	 else : 		d [ a [ i ]]= i + 1 	  if  len ( b )== 0 : 	 print (- 1 ) 	exit () 		 print ( len ( b )) k = b [- 1 ] b [- 1 ]=[ k [ 0 ], n ] for  i  in  b : 	 print (* i ) 		",pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun lit pun pln kwd pun lit pun pln pun pln kwd pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun kwd pln kwd pln pun pln kwd pun pln pun pln,1232 ms,22800 KB,620
30332082,2017-09-14 18:26:00,yugle7,621C - Wet Shark and Flowers,Python 3,Accepted,4,100,"f  =   lambda :  map ( int ,  input (). split ()) n ,  p  =  f () t  =   [( r  //  p  -   ( l  -   1 )   //  p )   /   ( r  -  l  +   1 )   for  l ,  r  in   [ f ()   for  i  in  range ( n )]] print ( 2000   *  sum ( t [ i ]   *   ( 2   -  t [ i  -   1 ])   for  i  in  range ( n )))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pun lit pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun,452 ms,28600 KB,621
17975773,2016-05-18 09:54:00,darkria,622C - Not Equal on a Segment,Python 3,Accepted,20,0,,,982 ms,27100 KB,622
31039916,2017-10-05 18:55:00,yugle7,623A - Graph and String,Python 3,Accepted,20,0,,,483 ms,300 KB,624
28187775,2017-07-01 11:48:00,frankbozar,625C - K-special Tables,Python 3,Accepted,10,87,"n ,  k = map ( int ,  input (). split ()) a =[ i + 1   for  i  in  range ( n * n )] b =[[ 0 ]] k -= 1 for  _  in  range ( n ): 	b +=[  a [: k ]+ a [ k - n :]   ] 	a = a [ k : k - n ] 	b [ 0 ][ 0 ]+= b [- 1 ][ k ] for  _  in  b : 	 print (* _ )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun lit pun pln pun kwd pln kwd pln pun pln kwd pun pln pun,841 ms,13900 KB,625
16065572,2016-02-17 07:37:00,ving.xia,626C - Block Towers,Python 3,Accepted,20,0,,,405 ms,0 KB,626
31162555,2017-10-09 11:37:00,yugle7,628C - Bear and String Distance,Python 3,Accepted,7,75,"n ,  k  =  map ( int ,  input (). split ()) t  =   '' for  i  in  map ( ord ,  input ()):     d  =  min ( k ,  max ( 122   -  i ,  i  -   97 ))     t  +=  chr ( i  +  d  if  i  +  d  <   123   else  i  -  d )     k  -=  d print (- 1   if  k  else  t )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pun lit pln kwd pln kwd pln pun,202 ms,300 KB,628
16184301,2016-02-18 21:50:00,romanasa,630C - Lucky Numbers,Python 3,Accepted,1,12,print ( 2 ** int ( input ())* 2 - 2 ),kwd pun lit pun pln pun pln pun lit pun lit pun,77 ms,0 KB,630
16501304,2016-03-03 22:32:00,xfce8888,631C - Report,Python 3,Accepted,25,234,"n ,  m  =  map ( int , input (). split ()) a  =  list ( map ( int , input (). split ())) t  =  list () b  =  list ()   for  i  in  range ( m ): 	x ,  y  =  map ( int , input (). split ()) 	 while  len ( t )   >   0   and  y  >=  t [- 1 ][ 1 ]:   		t . pop () 	t . append ([ x ,  y ])   x ,  y  =   0 ,  t [ 0 ][ 1 ]   -   1 t . append ([ 0 ,   0 ]) b  =  sorted ( a [:  y  +   1 ])   for  i  in  range ( 1 ,  len ( t )): 		 for  j  in  range ( t [ i  -   1 ][ 1 ],  t [ i ][ 1 ],   - 1 ): 			 if  t [ i  -   1 ][ 0 ]   ==   1 : 				a [ j  -   1 ]   =  b [ y ] 				y  -=   1   			 else : 				a [ j  -   1 ]   =  b [ x ] 				x  +=   1   print   ( "" "" . join ( list ( str ( i )   for  i  in  a )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun lit pun lit pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln lit pun pln pun lit pun lit pun pln pun pln lit pln pun pln pun lit pun pln lit pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln lit pun lit pun pln pun pln pun lit pun pln pun lit pun pln kwd pln pun pln pun pln lit pun lit pun pln pun pln lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pln pln kwd pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun str pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun,1216 ms,32100 KB,631
18180690,2016-06-01 13:48:00,xidebixia,632C - The Smallest String Concatenation,Python 3,Accepted,2,47,"from  functools  import  cmp_to_key print ( '' . join ( sorted ([ input ()   for  _  in  range ( int ( input ()))], key = cmp_to_key ( lambda  x , y : 1   if  x + y > y + x  else - 1 ))))",kwd pln kwd pln kwd pun str pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pln kwd pln pun pln pun pln pun pln kwd pun lit pun,265 ms,6700 KB,632
33363209,2017-12-17 23:40:00,yugle7,633C - Spy Syndrome 2,Python 3,Accepted,14,157,"import  sys p  =  sys . stdin . read (). split () n ,  t  =  int ( p [ 0 ]),  p [ 1 ][::- 1 ] d  =   { q . lower ():  q  for  q  in  p [ 3 :]} k ,  s  =   0 ,   [] l  =  sorted ( set ( map ( len ,  d ))) while  n :     k  -=   1      if  len ( l )   +  k  <   0 :  k ,  n  =  s . pop ()      elif  n  >=  l [ k ]   and  t [ n  -  l [ k ]: n ]   in  d :         s . append (( k ,  n ))         n  -=  l [ k ]         k  =   0 print (*[ d [ t [ n  -  l [ i ]: n ]]   for  i ,  n  in  s ])",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun,140 ms,18900 KB,633
51968185,2019-03-29 14:07:00,r57shell,627B - Factory Repairs,Python 3,Accepted,14,157,"import  sys p  =  sys . stdin . read (). split () n ,  t  =  int ( p [ 0 ]),  p [ 1 ][::- 1 ] d  =   { q . lower ():  q  for  q  in  p [ 3 :]} k ,  s  =   0 ,   [] l  =  sorted ( set ( map ( len ,  d ))) while  n :     k  -=   1      if  len ( l )   +  k  <   0 :  k ,  n  =  s . pop ()      elif  n  >=  l [ k ]   and  t [ n  -  l [ k ]: n ]   in  d :         s . append (( k ,  n ))         n  -=  l [ k ]         k  =   0 print (*[ d [ t [ n  -  l [ i ]: n ]]   for  i ,  n  in  s ])",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun,2495 ms,8500 KB,634
31561440,2017-10-21 12:23:00,yugle7,627A - XOR Equation,Python 3,Accepted,14,157,"import  sys p  =  sys . stdin . read (). split () n ,  t  =  int ( p [ 0 ]),  p [ 1 ][::- 1 ] d  =   { q . lower ():  q  for  q  in  p [ 3 :]} k ,  s  =   0 ,   [] l  =  sorted ( set ( map ( len ,  d ))) while  n :     k  -=   1      if  len ( l )   +  k  <   0 :  k ,  n  =  s . pop ()      elif  n  >=  l [ k ]   and  t [ n  -  l [ k ]: n ]   in  d :         s . append (( k ,  n ))         n  -=  l [ k ]         k  =   0 print (*[ d [ t [ n  -  l [ i ]: n ]]   for  i ,  n  in  s ])",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun,62 ms,5400 KB,635
16798375,2016-03-19 02:39:00,SerVasilich,637C - Promocodes with Mistakes,Python 3,Accepted,6,57,"l =[]; s = 12 for  i  in  range ( int ( input ())):  y = input ()  s = min ({ sum ( a != b  for  a , b  in  zip ( x , y ))- 1   for  x  in  l }|{ s })  l +=[ y ] print ( s // 2 )",pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun kwd pun pln pun lit pun,841 ms,0 KB,637
16779679,2016-03-18 13:33:00,SerVasilich,644C - Hostname Aliases,Python 3,Accepted,7,113,"n = int ( input ()) d ={};  D ={};  ans =[] for  _  in  range ( n ):  s = input ()+ '/' ;  t = s . find ( '/' , 7 );  d . setdefault ( s [: t ], set ()). add ( s [ t :]) for  k  in  d :  D . setdefault ( frozenset ( d [ k ]),[]). append ( k ) [ ans . append ( D [ k ])   for  k  in  D  if  len ( D [ k ])> 1 ] print ( len ( ans )) print ( '\n' . join ( map ( ' ' . join , ans )))",pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun str pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun lit pun kwd pun pln pun pln pun kwd pun str pun pln pun pln pun str pun pln pun pln pun,794 ms,45800 KB,644
31543231,2017-10-20 21:43:00,yugle7,645C - Enduring Exodus,Python 3,Accepted,8,109,"n ,  k  =  map ( int ,  input (). split ()) t  =   [ i  for  i ,  v  in  enumerate ( input ())   if  v  ==   '0' ] s ,  m  =  n ,   0 f  =   lambda  m :  max ( r  -  t [ m ],  t [ m ]   -  l ) for  l ,  r  in  zip ( t ,  t [ k :]):      while  f ( m )   >  f ( m  +   1 ):  m  +=   1     s  =  min ( s ,  f ( m )) print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln str pun pln pun pln pun pln pun pln lit pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,358 ms,8000 KB,645
16890409,2016-03-23 18:47:00,Aphanasiy,648C - Путь Робота,Python 3,Accepted,23,274,"import  sys sys . setrecursionlimit ( 1000000 )     def  dfs ( y ,  x ,  k ,  dr = None ):      if  k [ y ][ x ]   ==   'S'   and  dr  !=   None :          return   1 ,   ' '      for  a ,  b ,  d ,  d2  in   (( 0 ,   1 ,   'D' ,   'U' ),   ( 1 ,   0 ,   'R' ,   'L' ),   ( 0 ,   - 1 ,   'U' ,   'D' ),   (- 1 ,   0 ,   'L' ,   'R' )):          if  k [ y  +  b ][ x  +  a ]   in   '*S'   and  dr  !=  d2 :             bl ,  w  =  dfs ( y  +  b ,  x  +  a ,  k ,  d )              if  bl :                  return   1 ,  d  +  w     h ,  w  =  map ( int ,  input (). split ()) k  =   [ '.'   *   ( w  +   2 )] for  i  in  range ( 1 ,  h  +   1 ):     k . append ( '.'   +  input ()   +   '.' )     u  =  k [- 1 ]. find ( 'S' )      if  u  !=   - 1 :         pos  =   [ i ,  u ] k . append ( '.'   *   ( w  +   2 )) print ( dfs ( pos [ 0 ],  pos [ 1 ],  k )[ 1 ])",kwd pln pln pun pln pun lit pun pln pln kwd pln pun pln pun pln pun pln pun pln pun kwd pun pln kwd pln pun pln pun pln pun pln pun pln str pln kwd pln pun pln kwd pun pln kwd pln lit pun pln str pln kwd pln pun pln pun pln pun pln kwd pln pun lit pun pln lit pun pln str pun pln str pun pln pun lit pun pln lit pun pln str pun pln str pun pln pun lit pun pln pun lit pun pln str pun pln str pun pln pun lit pun pln lit pun pln str pun pln str pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln str pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln lit pun pln pun pln pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pln pun pln pun pln pun pln lit pun kwd pln kwd pln pun lit pun pln pun pln lit pun pln pun pln pun str pln pun pln pun pln pun pln str pun pln pun pln pun lit pun pln pun str pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun str pln pun pln pun pln pun pln lit pun kwd pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun,62 ms,8500 KB,648
16948143,2016-03-26 11:05:00,habibulka,649C - Печать условий,Python 3,Accepted,19,131,"[ n , x , y ]=[ int ( i )   for  i  in  input (). split ()] a =[ int ( i )   for  i  in  input (). split ()] a . sort () c = 0 for  i  in  a :     chislo = i      if  chislo // 2 <= x : ax = i // 2      else :  ax = x     x -= ax     chislo = chislo - ax * 2     ay = min ( chislo , y )     y -= ay     chislo = chislo - ay      if ( chislo != 0   and  x != 0 ):         x -= 1         chislo -= 1      if   ( chislo == 0 ):  c += 1      else :   break print ( c )",pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pln kwd pln pun lit pun pln pun pln pun pln pun lit pln kwd pun pln pun pln pln pun pln pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pln kwd pun pln pun lit pln kwd pln pun lit pun pln pun lit pln pun lit pln kwd pln pun pln pun lit pun pln pun lit pln kwd pun pln kwd kwd pun pln pun,498 ms,17900 KB,649
16847855,2016-03-21 01:59:00,jackowitzd2,650A - Watchmen,Python 3,Accepted,20,0,,,1559 ms,33200 KB,651
17154503,2016-04-04 10:42:00,lioasdfghjkl,652C - Foe Pairs,Python 3,Accepted,20,180,"from  sys  import  stdin def  main ():     n ,  m  =  map ( int ,  input (). split ())     pos ,  left  =   [ 0 ]   *  n ,   [ 0 ]   *  n      for  i ,  a  in  enumerate ( map ( int ,  input (). split ())):         pos [ a  -   1 ]   =  i      for  s  in  stdin . read (). splitlines ():         l ,  r  =  map ( int ,  s . split ())         l ,  r  =  pos [ l  -   1 ],  pos [ r  -   1 ]          if  l  >  r :             l ,  r  =  r ,  l          if  l  >=  left [ r ]:             left [ r ]   =  l  +   1     ans  =  l  =   0      for  i  in  range ( n ):          if  left [ i ]   >  l :             l  =  left [ i ]         ans  +=  i  -  l  +   1      print ( ans ) main ()",kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun,842 ms,32700 KB,652
16856909,2016-03-21 16:31:00,orailly,653C - Bear and Up-Down,Python 3,Accepted,35,323,"def  main ():     n ,  l  =  int ( input ()),  list ( map ( int ,  input (). split ()))      if   not   ( n  &   1 ):         l . append ( 0 )     l . append ( 150001 )     a ,  b ,  fails ,  res  =   0 ,   150001 ,   [],   0      for  i ,  c  in  enumerate ( l ,   - 1 ):          if  i  &   1 :              if  a  >=  b  or  b  <=  c :                  if  len ( fails )   >   5 :                      print ( 0 )                      return                 fails . append ( i )          else :              if  a  <=  b  or  b  >=  c :                  if  len ( fails )   >   5 :                      print ( 0 )                      return                 fails . append ( i )         a ,  b  =  b ,  c     ff  =  fails  +   [ 0 ]      for  i  in  fails :         a  =  l [ i ]          for  j  in  range ( n ):             l [ i ],  l [ j ],  ff [- 1 ]   =  l [ j ],  a ,  j              if   ( all (( l [ b  -   1 ]   <  l [ b ]   >  l [ b  +   1 ])   if  b  &   1   else                      ( l [ b  -   1 ]   >  l [ b ]   <  l [ b  +   1 ])   for  b  in  ff )):                 res  +=   1   if  j  in  fails  else   2             l [ j ]   =  l [ i ]         l [ i ]   =  a      print ( res  //   2 )     if  __name__  ==   '__main__' :     main ()",kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pun pln lit pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln lit pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln kwd pun lit pun pln kwd pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln kwd pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln lit pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln lit pln kwd pln kwd pln kwd pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln lit pun pln pln kwd pln pun pln str pun pln pun,1404 ms,14400 KB,653
31543231,2017-10-20 21:43:00,yugle7,645C - Enduring Exodus,Python 3,Accepted,35,323,"def  main ():     n ,  l  =  int ( input ()),  list ( map ( int ,  input (). split ()))      if   not   ( n  &   1 ):         l . append ( 0 )     l . append ( 150001 )     a ,  b ,  fails ,  res  =   0 ,   150001 ,   [],   0      for  i ,  c  in  enumerate ( l ,   - 1 ):          if  i  &   1 :              if  a  >=  b  or  b  <=  c :                  if  len ( fails )   >   5 :                      print ( 0 )                      return                 fails . append ( i )          else :              if  a  <=  b  or  b  >=  c :                  if  len ( fails )   >   5 :                      print ( 0 )                      return                 fails . append ( i )         a ,  b  =  b ,  c     ff  =  fails  +   [ 0 ]      for  i  in  fails :         a  =  l [ i ]          for  j  in  range ( n ):             l [ i ],  l [ j ],  ff [- 1 ]   =  l [ j ],  a ,  j              if   ( all (( l [ b  -   1 ]   <  l [ b ]   >  l [ b  +   1 ])   if  b  &   1   else                      ( l [ b  -   1 ]   >  l [ b ]   <  l [ b  +   1 ])   for  b  in  ff )):                 res  +=   1   if  j  in  fails  else   2             l [ j ]   =  l [ i ]         l [ i ]   =  a      print ( res  //   2 )     if  __name__  ==   '__main__' :     main ()",kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pun pln lit pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln lit pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln kwd pun lit pun pln kwd pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln kwd pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln lit pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln lit pln kwd pln kwd pln kwd pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln lit pun pln pln kwd pln pun pln str pun pln pun,358 ms,8000 KB,655
17153635,2016-04-04 08:57:00,jebwizoscar,656C - Without Text,Python 3,Accepted,1,34,"print ( sum ( map ( lambda  x : 96 - x  if  x > 96   else  x - 64 , map ( ord , filter ( str . isalpha , input ())))))",kwd pun pln pun pln pun kwd pln pun lit pun pln kwd pln pun lit pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun,62 ms,4700 KB,656
33008442,2017-12-07 22:05:00,YazanRi,639B - Bear and Forgotten Tree 3,Python 3,Accepted,1,34,"print ( sum ( map ( lambda  x : 96 - x  if  x > 96   else  x - 64 , map ( ord , filter ( str . isalpha , input ())))))",kwd pun pln pun pln pun kwd pln pun lit pun pln kwd pln pun lit pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun,592 ms,5700 KB,658
20409834,2016-09-06 03:31:00,Amores,659C - Tanya and Toys,Python 3,Accepted,9,70,"I = lambda : map ( int , input (). split ()) n , m = I () a = set ( I ()) b =[] i = 1 while  i <= m :      if  i  not   in  a : b . append ( str ( i )); m -= i     i += 1 print ( len ( b ), '\n' + ' ' . join ( b ))",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit kwd pun pln pun pln pun str pun str pun pln pun pln pun,155 ms,10400 KB,659
19229343,2016-07-19 13:09:00,Yash_,660C - Hard Process,Python 3,Accepted,10,120,"n , k = map ( int , input (). split ()) l = list ( map ( int , input (). split ())) ki = i = s = 0 ;  po = 1 for  j  in  range ( n ):   s +=( l [ j ]== 0 )    while  s > k :  s -=( l [ i ]== 0 );  i += 1    if  j - i > ki - po :  po , ki = i , j print ( ki - po + 1 ) l [ po : ki + 1 ]=[ 1 ]*( ki - po + 1 ) print ( ' ' . join ( map ( str , l )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun kwd pun str pun pln pun pln pun pln pun pln pun,451 ms,14100 KB,660
33707242,2017-12-28 13:53:00,yugle7,664C - International Olympiad,Python 3,Accepted,5,52,"for  i  in  range ( int ( input ())):     t  =  input ()[ 4 :]     q ,  d  =  int ( t ),   10   **  len ( t )      while  q  <   1988   +  d  //   9 :  q  +=  d      print ( q )",kwd pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln kwd pln pun pln lit pln pun pln pun pln lit pun pln pun pln pln kwd pun pln pun,93 ms,5500 KB,664
31037493,2017-10-05 17:39:00,yugle7,665C - Simple Strings,Python 3,Accepted,10,65,"t  =  input ()   +   ' ' s  =   ' ' for  a ,  b  in  zip ( t ,  t [ 1 :]):      if  a  ==  s [- 1 ]:          for  q  in   'abc' :              if  a  !=  q  !=  b :                 s  +=  q                  break      else :  s  +=  a print ( s [ 1 :])",pln pun pln pun pln pun pln str pln pun pln str kwd pln pun pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun lit pun pln kwd pln kwd pln str pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pln kwd pun pln pun pln kwd pun pln pun lit pun,156 ms,1300 KB,665
31432198,2017-10-16 23:05:00,yugle7,666A - Reberland Linguistics,Python 3,Accepted,20,0,,,93 ms,6800 KB,667
17496444,2016-04-24 21:24:00,"inventio: Lipin, merrychap",641D - Little Artem and Random Variable,Python 3,Accepted,20,0,,,1418 ms,18600 KB,668
34251994,2018-01-17 15:49:00,yugle7,641B - Little Artem and Matrix,Python 3,Accepted,20,0,,,217 ms,6500 KB,669
19124056,2016-07-14 20:35:00,bazyar.sepehr,670C - Cinema,Python 3,Accepted,5,74,"from  collections  import   * n = int ( input ()) b = Counter ( map ( int , input (). split ())) m = int ( input ()) print ( sorted (( b [ int ( l [ 0 ])], b [ int ( l [ 1 ])], z + 1 ) for  z , l  in  enumerate ( zip ( input (). split (), input (). split ())))[- 1 ][ 2 ])",kwd pln kwd pln pun pln pun pln pun pln pun pln pun typ pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun,748 ms,43300 KB,670
18235429,2016-06-03 21:02:00,Vasiliy_48,672C - Recycling Bottles,Python 3,Accepted,22,266,"ax , ay , bx , by , tx , ty = map ( int , input (). split ()) n = int ( input ()) a , b =[],[] res = 0 for  i  in  range ( n ):     x ,  y = map ( int ,  input (). split ())     lt =(( tx - x )*( tx - x )+( ty - y )*( ty - y ))** 0.5     la =(( ax - x )*( ax - x )+( ay - y )*( ay - y ))** 0.5     lb =(( bx - x )*( bx - x )+( by - y )*( by - y ))** 0.5     a +=[( la - lt , i )]     b +=[( lb - lt , i )]     res += lt a . sort (); b . sort () res *= 2 if  a [ 0 ][ 1 ]== b [ 0 ][ 1 ]   and  n > 1 :     res += min ( a [ 0 ][ 0 ], b [ 0 ][ 0 ], a [ 0 ][ 0 ]+ b [ 1 ][ 0 ], a [ 1 ][ 0 ]+ b [ 0 ][ 0 ]) else :        if  a [ 0 ][ 1 ]== b [ 0 ][ 1 ]:         res += min ( a [ 0 ][ 0 ], b [ 0 ][ 0 ])      else :         res += min ( a [ 0 ][ 0 ], b [ 0 ][ 0 ], a [ 0 ][ 0 ]+ b [ 0 ][ 0 ]) print ( res )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit kwd pln pun lit pun lit pun pln pun lit pun lit pun pln kwd pln pun lit pun pln pun pln pun pln pun lit pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun kwd pun pln pln kwd pln pun lit pun lit pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun lit pun pln pun lit pun lit pun pln kwd pun pln pun pln pun pln pun lit pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun kwd pun pln pun,1278 ms,19100 KB,672
26412739,2017-04-16 15:34:00,YazanRi,675C - Money Transfers,Python 3,Accepted,8,64,"n = int ( input ()) a = list ( map ( int , input (). split ())) d , s ={}, 0 for  i  in  range ( n ):   s += a [ i ]    if  s  not   in  d : d [ s ]= 0   d [ s ]+= 1 print ( n - max ( d . values ()))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun lit pln pun pln pun lit kwd pun pln pun pln pun pln pun pln pun,155 ms,16000 KB,675
46273627,2018-11-27 12:59:00,Silky_Littleraisin,676C - Vasya and String,Python 3,Accepted,13,89,"I = input n , k = map ( int , I (). split ()) s = I () a = b = j = x = 0 for  i  in  s :      if  i < 'b' : a += 1      else : b += 1      if  min ( a , b )> k :          if  s [ j ]< 'b' : a -= 1          else : b -= 1         j += 1      else : x += 1 print ( x )    ",pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln kwd pln pun str pun pln pun lit pln kwd pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun str pun pln pun lit pln kwd pun pln pun lit pln pun lit pln kwd pun pln pun lit kwd pun pln pun pln,171 ms,200 KB,676
18205388,2016-06-01 23:05:00,johannesk,677C - Vanya and Label,Python 3,Accepted,1,52,"print ( 3 ** sum ( 6 - bin ({ '-' : 62 , '_' : 63 }. get ( c , ord ( c )- 7 *( c > '9' )- 6 *( c > 'Z' )- 48 )). count ( '1' )   for  c  in  input ())% 1000000007 )",kwd pun lit pun pln pun lit pun pln pun str pun lit pun str pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun str pun lit pun pln pun str pun lit pun pln pun str pun pln kwd pln kwd pln pun lit pun,280 ms,5200 KB,677
36690255,2018-03-28 14:17:00,Bamal,678C - Joty and Chocolate,Python 3,Accepted,3,54,"from  math  import  gcd n , a , b , p , q = map ( int , input (). split ()) print (( n // a )* p +( n // b )* q -( n //( a * b // gcd ( a , b )))*( min ( p , q )))",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,93 ms,7200 KB,678
18331425,2016-06-09 00:45:00,SerVasilich,680C - Bear and Prime 100,Python 3,Accepted,1,69,"print ( ""composite""   if  sum ( input ()== 'yes'   for  i  in   [ 2 , 3 , 4 , 5 , 7 , 9 , 11 , 13 , 17 , 19 , 23 , 25 , 29 , 31 , 37 , 41 , 43 , 47 , 49 ]   if   not   print ( i ))> 1   else   ""prime"" )",kwd pun str pln kwd pln pun pln pun str pln kwd pln kwd pln pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun lit pun pln kwd pln kwd pln kwd pun pln pun lit pln kwd pln str pun,77 ms,4700 KB,680
37694143,2018-04-28 22:34:00,petiteteaparty,681C - Heap Operations,Python 3,Accepted,31,197,"from  heapq  import  heappop ,  heappush   n  =  int ( input ()) ans  =   [] q  =   []   for  i  in  range ( n ):     s  =  input ()     op  =  s . split ()        if  op [ 0 ]   ==   ""insert"" :         heappush ( q ,  int ( op [ 1 ]))      elif  op [ 0 ]   ==   ""removeMin"" :          if  len ( q )   >   0 :             heappop ( q )          else :             ans . append ( ""insert 1"" )      else :         val  =  int ( op [ 1 ])          while  len ( q )   >   0   and  q [ 0 ]   <  val :             ans . append ( ""removeMin"" )             heappop ( q )            if  len ( q )   ==   0   or  q [ 0 ]   >  val :             ans . append ( ""insert ""   +  op [ 1 ])             heappush ( q ,  val )       ans . append ( s )   print ( len ( ans )) print ( ""\n"" . join ( ans ))",kwd pln kwd pln pun pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun lit pun pln pun pln str pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun lit pun pln pun pln str pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln kwd pun pln pun pln pun str pun pln kwd pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun lit pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln lit pln kwd pln pun lit pun pln pun pln pun pln pun pln pun str pln pun pln pun lit pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln kwd pun pln pun pln pun kwd pun str pun pln pun pln pun,561 ms,32500 KB,681
18578760,2016-06-18 15:14:00,UnusedFever,682C - Alyona and the Tree,Python 3,Accepted,17,147,"n = int ( input ()) a =[ 0 ]+ list ( map ( int , input (). split ())) E =[[]   for  _  in  range ( n + 1 )] for  i  in  range ( n - 1 ):     p , c = map ( int , input (). split ())     E [ i + 2 ]+=[( p , c )]     E [ p ]+=[( i + 2 , c )]   ans = 0 ch =[( 1 , 0 , 0 )] while  ch :     nom , pre , l = ch . pop ()      if  l > a [ nom ]:   continue     ans += 1      for  x , c  in  E [ nom ]:          if  x != pre :  ch +=[( x , nom , max ( l + c , c ))] print ( n - ans )",pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun lit pln pun lit pun lit pun lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun lit pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun,701 ms,29000 KB,682
30570776,2017-09-21 11:15:00,yugle7,685A - Robbers' watch,Python 3,Accepted,17,147,"n = int ( input ()) a =[ 0 ]+ list ( map ( int , input (). split ())) E =[[]   for  _  in  range ( n + 1 )] for  i  in  range ( n - 1 ):     p , c = map ( int , input (). split ())     E [ i + 2 ]+=[( p , c )]     E [ p ]+=[( i + 2 , c )]   ans = 0 ch =[( 1 , 0 , 0 )] while  ch :     nom , pre , l = ch . pop ()      if  l > a [ nom ]:   continue     ans += 1      for  x , c  in  E [ nom ]:          if  x != pre :  ch +=[( x , nom , max ( l + c , c ))] print ( n - ans )",pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun lit pln pun lit pun lit pun lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun lit pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun,77 ms,300 KB,686
18818484,2016-06-30 10:13:00,Vosatorp,688E - The Values You Can Make,Python 3,Accepted,17,147,"n = int ( input ()) a =[ 0 ]+ list ( map ( int , input (). split ())) E =[[]   for  _  in  range ( n + 1 )] for  i  in  range ( n - 1 ):     p , c = map ( int , input (). split ())     E [ i + 2 ]+=[( p , c )]     E [ p ]+=[( i + 2 , c )]   ans = 0 ch =[( 1 , 0 , 0 )] while  ch :     nom , pre , l = ch . pop ()      if  l > a [ nom ]:   continue     ans += 1      for  x , c  in  E [ nom ]:          if  x != pre :  ch +=[( x , nom , max ( l + c , c ))] print ( n - ans )",pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun lit pln pun lit pun lit pun lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun lit pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun,233 ms,300 KB,687
47492637,2018-12-25 16:07:00,vjudge1,687A - NP-Hard Problem,Python 3,Accepted,17,147,"n = int ( input ()) a =[ 0 ]+ list ( map ( int , input (). split ())) E =[[]   for  _  in  range ( n + 1 )] for  i  in  range ( n - 1 ):     p , c = map ( int , input (). split ())     E [ i + 2 ]+=[( p , c )]     E [ p ]+=[( i + 2 , c )]   ans = 0 ch =[( 1 , 0 , 0 )] while  ch :     nom , pre , l = ch . pop ()      if  l > a [ nom ]:   continue     ans += 1      for  x , c  in  E [ nom ]:          if  x != pre :  ch +=[( x , nom , max ( l + c , c ))] print ( n - ans )",pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun lit pln pun lit pun lit pun lit pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun lit pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun,561 ms,15300 KB,688
34524170,2018-01-24 20:18:00,yugle7,691C - Exponential notation,Python 3,Accepted,11,160,"t  =   '0'   +  input ()   +   '.' n  =  t . find ( '.' ) s  =  t [: n ]   +  t [ n  +   1 :- 1 ] l ,  r  =   0 ,  len ( s ) while  l  <  r  and  s [ l ]   ==   '0' :  l  +=   1 while  l  <  r  and  s [ r  -   1 ]   ==   '0' :  r  -=   1 if  l  ==  r :  exit ( print ( 0 )) e  =  n  -  l  -   1 s  =  s [ l ]   +   '.'   +  s [ l  +   1 : r ]   if  r  -  l  >   1   else  s [ l : r ] if  e :  s  +=   'E'   +  str ( e ) print ( s )",pln pun pln str pln pun pln pun pln pun pln str pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun lit pun pln pun pln pun pln lit pun pln pun pln pun kwd pln pun pln kwd pln pun pln pun pln pun pln str pun pln pun pln lit kwd pln pun pln kwd pln pun pln pun pln lit pun pln pun pln str pun pln pun pln lit kwd pln pun pln pun pln pun kwd pun lit pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln str pln pun pln pun pln pun pln lit pun pln pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln pun kwd pln pun pln pun pln str pln pun pln pun pln pun kwd pun pln pun,373 ms,10500 KB,691
36739588,2018-03-30 10:00:00,rprtr258,696C - PLEASE,Python 3,Accepted,13,135,"from  functools  import  reduce MOD  =   10   **   9   +   7 n ,  a  =  int ( input ()),  map ( int ,  input (). split ()) n  =  reduce ( lambda  x , y :( x * y )%( MOD - 1 ),  a ,   1 ) # 333333336 * 3 = 1 # 500000004 * 2 = 1 k  =  n  %   2 q  =   ( pow ( 2 ,  n ,  MOD )   *   500000004 )   %  MOD if  k  ==   0 :  p  =   (( q  +   1 )   *   333333336 )   %  MOD else :  p  =   (( q  -   1 )   *   333333336 )   %  MOD print ( ""%d/%d""   %   ( p ,  q ))",kwd pln kwd pln pln pun pln lit pln pun pln lit pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pun com com pln pun pln pun pln lit pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln kwd pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln kwd pun str pln pun pln pun pln pun pln pun,186 ms,15500 KB,696
19152706,2016-07-15 15:13:00,newpie,697C - Lorenzo Von Matterhorn,Python 3,Accepted,17,124,"d ={} def  pro ( x , y , w ): 	res = 0 	 while  x != y : 		 if  x < y :  x , y = y , x 		d [ x ]= d . get ( x , 0 )+ w 		res += d [ x ]; 		x //= 2 	 return  res q = int ( input ()) while  q > 0 : 	q -= 1 	s = list ( map ( int , input (). split ())) 	 if  s [ 0 ]== 1 : 		pro ( s [ 1 ], s [ 2 ], s [ 3 ]) 	 else : 		 print ( pro ( s [ 1 ], s [ 2 ], 0 ))",pln pun kwd pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit pun pln pln pun pln pun pln pun pln pun lit pln kwd pln pln pun pln pun pln pun kwd pln pun lit pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun lit pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln kwd pun pln kwd pun pln pun pln pun lit pun pln pun lit pun lit pun,187 ms,7800 KB,697
24334187,2017-02-01 09:18:00,vikkram,698A - Vacations,Python 3,Accepted,20,0,,,93 ms,4500 KB,699
78662167,2020-05-01 17:32:00,thukrake_mera_pyaar,701C - They Are Everywhere,Python 3,Accepted,18,127,"n  =  int ( input ()) s  =  input () q  =  len ( set ( s )) d  =  dict () count  =   0 ans  =   999999999 j  =   0 for  i  in  range ( n ): 	 if  s [ i ]   not   in  d : 		d [ s [ i ]]   =   0 		count  +=   1 	d [ s [ i ]]   +=   1 	 if  count  ==  q : 		 while  d [ s [ j ]]   >   1 : 			d [ s [ j ]]   -=   1 			j  +=   1 		ans  =  min ( ans ,  i  -  j  +   1 ) print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln lit kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln lit pun kwd pun pln pun,217 ms,600 KB,701
20559372,2016-09-13 06:10:00,Amores,702C - Cellular Network,Python 3,Accepted,9,83,"import  bisect I = lambda : list ( map ( int , input (). split ())) N = 10 ** 10 n , m = I () a = I () b =[- N ]+ I ()+[ N ] z = 0 for  i  in  a : t = bisect . bisect ( b , i ); z = max ( z , min ( b [ t ]- i , i - b [ t - 1 ])) print ( z )",kwd pln pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun,265 ms,10500 KB,702
32114260,2017-11-07 12:59:00,yugle7,703C - Chris and Road,Python 3,Accepted,11,78,"f  =   lambda :  map ( int ,  input (). split ()) n ,  w ,  v ,  u  =  f () k  =  t  =   0 v  /=  u for  i  in  range ( n ):     x ,  y  =  f ()     d  =  x  /  v  -  y     k  |=  d  <   0     t  =  max ( t ,  d ) if  k :  w  +=  t print ( w  /  u )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln lit pln pun pln pun pln pun pln pun kwd pln pun pln pun pln kwd pun pln pun pln pun,93 ms,0 KB,703
19751637,2016-08-09 20:23:00,rpk74m,704A - Thor,Python 3,Accepted,11,78,"f  =   lambda :  map ( int ,  input (). split ()) n ,  w ,  v ,  u  =  f () k  =  t  =   0 v  /=  u for  i  in  range ( n ):     x ,  y  =  f ()     d  =  x  /  v  -  y     k  |=  d  <   0     t  =  max ( t ,  d ) if  k :  w  +=  t print ( w  /  u )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln lit pln pun pln pun pln pun pln pun kwd pln pun pln pun pln kwd pun pln pun pln pun,1482 ms,30700 KB,705
52518570,2019-04-09 10:20:00,vjudge5,706C - Hard problem,Python 3,Accepted,15,147,"I = input n = int ( I ()) c = list ( map ( int , I (). split ())) l = r = '' a = b = 0 for  i  in  range ( n ): 	s = I (); t = s [::- 1 ]; x = y = 10 ** 16 	 if  s >= l : x = a 	 if  s >= r : x = min ( x , b ) 	 if  t >= l : y = a + c [ i ] 	 if  t >= r : y = min ( y , b + c [ i ]) 	l = s ; r = t ; a = x ; b = y a = min ( a , b ) if  a == 10 ** 16 : a =- 1 print ( a )",pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun lit pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun kwd pln pun lit pun lit pun pln pun lit kwd pun pln pun,404 ms,4300 KB,706
27933573,2017-06-21 02:19:00,Shravanthi_Reddy,707C - Pythagorean Triples,Python 3,Accepted,7,62,"n = int ( input ()) if  n < 3 :    print   ( ""-1"" ) elif  n * n % 4 :    print ( n * n // 2 , n * n // 2 + 1 ) else :    print ( n * n // 4 - 1 , n * n // 4 + 1 )",pln pun pln pun pln pun kwd pln pun lit pun pln kwd pln pun str pun kwd pln pun pln pun lit pun pln kwd pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun kwd pun pln kwd pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun,92 ms,5400 KB,707
20662752,2016-09-16 18:04:00,karan_lal2015,708A - Letters Cyclic Shift,Python 3,Accepted,7,62,"n = int ( input ()) if  n < 3 :    print   ( ""-1"" ) elif  n * n % 4 :    print ( n * n // 2 , n * n // 2 + 1 ) else :    print ( n * n // 4 - 1 , n * n // 4 + 1 )",pln pun pln pun pln pun kwd pln pun lit pun pln kwd pln pun str pun kwd pln pun pln pun lit pun pln kwd pun pln pun pln pun lit pun pln pun pln pun lit pun lit pun kwd pun pln kwd pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun,140 ms,600 KB,709
32844145,2017-12-02 03:15:00,yugle7,710C - Magic Odd Square,Python 3,Accepted,8,81,"d ,  n  =   [- 1 ,   0 ],  int ( input ()) for  x  in  range ( n ):     t  =   []      for  y  in  range ( n ):         s  =  min ( abs ( x  -  n  //   2 ),  abs ( y  -  n  //   2 ))   &   1         d [ s ]   +=   2         t  +=   [ d [ s ]]      print (* t )",pln pun pln pun pln pun lit pun pln lit pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln kwd pun pln pun,77 ms,5600 KB,710
20519973,2016-09-11 07:44:00,Amores,712C - Memory and De-Evolution,Python 3,Accepted,5,60,"x , y = map ( int , input (). split ()) a , b , c = y , y , y k = 0 while  a != x : a , b , c = sorted ([ min ( x , b + c - 1 ), b , c ]); k += 1 print ( k )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit kwd pun pln pun,77 ms,0 KB,712
53112964,2019-04-22 08:30:00,SamuelLH,713C - Sonya and Problem Wihtout a Legend,Python 3,Accepted,13,105,"import  heapq n  =  int ( input ()) d  =  list ( map ( int , input (). split ())) pq  =   [- d [ 0 ]] heapq . heapify ( pq ) ans  =   0 for  i  in  range ( 1 , n ):     temp  =  i  -  d [ i ]     heapq . heappush ( pq , temp )      if  heapq . nsmallest ( 1 , pq )[ 0 ]   <  temp :         ans  +=  temp  -  heapq . nsmallest ( 1 , pq )[ 0 ]         heapq . heappushpop ( pq , temp ) print ( ans )",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun kwd pun pln pun,311 ms,400 KB,713
46654867,2018-12-05 18:47:00,Silky_Littleraisin,713A - Sonya and Queries,Python 3,Accepted,13,105,"import  heapq n  =  int ( input ()) d  =  list ( map ( int , input (). split ())) pq  =   [- d [ 0 ]] heapq . heapify ( pq ) ans  =   0 for  i  in  range ( 1 , n ):     temp  =  i  -  d [ i ]     heapq . heappush ( pq , temp )      if  heapq . nsmallest ( 1 , pq )[ 0 ]   <  temp :         ans  +=  temp  -  heapq . nsmallest ( 1 , pq )[ 0 ]         heapq . heappushpop ( pq , temp ) print ( ans )",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun kwd pun pln pun,686 ms,1900 KB,714
21628103,2016-10-20 23:27:00,ian9696,715A - Plus and Square Root,Python 3,Accepted,13,105,"import  heapq n  =  int ( input ()) d  =  list ( map ( int , input (). split ())) pq  =   [- d [ 0 ]] heapq . heapify ( pq ) ans  =   0 for  i  in  range ( 1 , n ):     temp  =  i  -  d [ i ]     heapq . heappush ( pq , temp )      if  heapq . nsmallest ( 1 , pq )[ 0 ]   <  temp :         ans  +=  temp  -  heapq . nsmallest ( 1 , pq )[ 0 ]         heapq . heappushpop ( pq , temp ) print ( ans )",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun kwd pun pln pun,421 ms,100 KB,716
20524904,2016-09-11 12:17:00,"NCTU_Foudre: ian9696, HowardChung, frankbozar",717C - Potions Homework,Python 3,Accepted,3,46,n = int ( input ()) a = sorted ( int ( input ())   for  _  in  range ( n )) print ( sum ( a [ i ]* a [- i - 1 ]   for  i  in  range ( n ))% 10007 ),pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun lit pun,312 ms,2800 KB,717
20929505,2016-09-26 19:14:00,rpk74m,718A - Efim and Strange Grade,Python 3,Accepted,3,46,n = int ( input ()) a = sorted ( int ( input ())   for  _  in  range ( n )) print ( sum ( a [ i ]* a [- i - 1 ]   for  i  in  range ( n ))% 10007 ),pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun lit pun,202 ms,1800 KB,719
35176509,2018-02-12 14:44:00,toysheeyeyraku,722C - Destroying Array,Python 3,Accepted,28,224,"n = int ( input ()) l = list ( map ( int , input (). split ())) l1 = list ( map ( int , input (). split ())) l1 = l1 [::- 1 ] mi = 0 V =[ 0 ] L =[[]   for  i  in  range ( n )] for  i  in  range ( n - 1 )   :     a = l1 [ i ]- 1     b = l1 [ i ]- 1     s = l [ l1 [ i ]- 1 ]      if  a - 1 !=- 1   :          if  L [ a - 1 ]   :             s += L [ a - 1 ][ 0 ]             a = L [ a - 1 ][ 1 ]      if  b + 1 < n  :          if  L [ b + 1 ]   :             s += L [ b + 1 ][ 0 ]             b = L [ b + 1 ][ 2 ]     L [ a ]=[ s , a , b ]     L [ b ]=[ s , a , b ]     mi = max ( mi , s )     V . append ( mi ) for  i  in  range ( n - 1 ,- 1 ,- 1 )   :      print ( V [ i ])               ",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun lit pun pln kwd pln pun lit pun lit pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun lit pun pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun lit pun lit pun lit pun pln pun pln kwd pun pln pun pln pun pln pln pln,764 ms,22200 KB,722
21203184,2016-10-05 10:29:00,rpk74m,723C - Polycarp at the Radio,Python 3,Accepted,15,110,"#!/usr/bin/env	python #-*-coding:utf-8 -*- n , m = map ( int , input (). split ()) n //= m A = list ( map ( int , input (). split ())) S =[ n ]* m L =[] for  i , a  in  enumerate ( A ): 	a -= 1 	 if  m > a  and  S [ a ]: S [ a ]-= 1 	 else : L . append ( i ) for  i , s  in  enumerate ( S , 1 ): 	 for  _  in  range ( s ): A [ L . pop ()]= i print ( n , sum ( S )) print (* A )",com com pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun kwd pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun lit pln kwd pun pln pun pln pun pln pun kwd pln pun pln kwd pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun kwd pun pln pun,62 ms,500 KB,723
21299971,2016-10-08 19:14:00,TheRealNeel,724C - Ray Tracing,Python 3,Accepted,60,401,"__author__  =   'Think' n ,  m ,  k =[ int ( i )   for  i  in  input (). split ()] n = 2 * n m = 2 * m a ,  b = sorted (( m ,  n )) tracker =[ b ]   while  a > 0 : 	b =( b % a ) 	tracker . append ( a ) 	a ,  b =( b ,  a )   g = b prod =( m * n )// g   if  m != n : 	 if  len ( tracker )>= 3 : 		pair =( 1 ,   -( tracker [- 3 ]// tracker [- 2 ])) 		 for  i  in  range ( len ( tracker )- 4 ,   - 1 ,   - 1 ): 			new =-( tracker [ i ]// tracker [ i + 1 ]) 			pair =( pair [ 1 ],  pair [ 0 ]+ pair [ 1 ]* new )   		 if  sorted (( m ,  n ))[ 0 ]== n : 			pair =( pair [ 1 ],  pair [ 0 ]) 		a ,  b = pair 	 else : 		 if  m > n : 			a = 1 			b = 0 		 else : 			a = 0 			b = 1   	 for  i  in  range ( k ): 		x ,  y =[ int ( i )   for  i  in  input (). split ()] 		 if   ( x - y )% g  !=   0   and   ( x + y )% g  !=   0 : 			 print (- 1 ) 			 continue 		 else : 			shortlist =[] 			 for  nx  in   [ x ,   - x ]: 					 if   (( nx - y )% g )   ==   0 : 						new =( nx + a * n *(( y - nx )// g ))% prod 						shortlist . append ( new ) 						shortlist . append ( prod - new ) 			 if  len ( shortlist )> 0 : 				 print ( min ( shortlist )) 			 else : 				 print (- 1 ) else : 	 for  i  in  range ( k ): 		x ,  y =[ int ( i )   for  i  in  input (). split ()] 		 if  x != y : 			 print (- 1 ) 		 else : 			 print ( x )        ",pln pun pln str pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pln pun lit pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pln pun pln pun pln pun pln pln kwd pln pun pln pun pln kwd pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pln kwd pun pln kwd pln pun pln pun pln pun lit pln pun lit pln kwd pun pln pun lit pln pun lit pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit pun pln kwd pun lit pun pln kwd pln kwd pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln kwd pun pln pun pln pun pln kwd pun pln kwd pun lit pun kwd pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pun lit pun pln kwd pun pln kwd pun pln pun pln pln pln pln,1980 ms,4800 KB,724
21716348,2016-10-23 18:42:00,orailly,725C - Hidden Word,Python 3,Accepted,9,114,"l ,  d  =   [],   {} for  i ,  c  in  enumerate ( input ()):      if  c  in  d :         u ,  v  =   ( d [ c ]   +  i  +   1 )   //   2 ,  i      else :         l . append ( c )     d [ c ]   =  i s  =   '' . join ( l  *   2 ) print ( s [ u : u  +   13 ]   +   '\n'   +  s [ u  +   25 : u  +   12 :- 1 ]   if  u  <  v  else   ""Impossible"" )",pln pun pln pun pln pun pln pun kwd pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln str pun pln pun pln pun pln lit pun kwd pun pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln lit pun pln pun pln lit pun lit pun pln kwd pln pun pln kwd pln str pun,62 ms,0 KB,725
32413993,2017-11-17 23:51:00,yugle7,727C - Guess the Array,Python 3,Accepted,6,108,"n  =  int ( input ()) a ,  b ,  c  =   [ int ( input ( '? '   +  q  +   '\n' ))   for  q  in   ( '1 2' ,   '1 3' ,   '2 3' )] q  =  a  +  b  -  c  >>   1 t  =   [ q ,  a  -  q ,  b  -  q ] for  i  in  range ( 3 ,  n ):  t  +=   [ int ( input ( '? 1 '   +  str ( i  +   1 )   +   '\n' ))   -  q ] print ( '!' ,   * t )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pln pun pln pun pln str pun pln kwd pln kwd pln pun str pun pln str pun pln str pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun str pln pun pln pun pln pun pln lit pun pln pun pln str pun pln pun pln pun kwd pun str pun pln pun pln pun,217 ms,700 KB,727
59436947,2019-08-25 12:16:00,youness.amhaouch,731C - Socks,Python 3,Accepted,29,219,"n , m , k = map ( int , input (). split ()) a = list ( map ( int , input (). split ())) tr =[[]   for  i  in  range ( n )]   for  i  in  range ( m ): 	l , r = map ( int , input (). split ()) 	tr [ l - 1 ]. append ( r - 1 ) 	tr [ r - 1 ]. append ( l - 1 ) visited =[ False   for  i  in  range ( n )] ans = 0 for  i  in  range ( n ): 	 if  visited [ i ]: continue 	s =[ i ] 	visited [ i ]= True 	qeue ={} 	 while  s : 		x = s . pop () 		 if  a [ x ]   not   in  qeue : qeue [ a [ x ]]= 0 		qeue [ a [ x ]]+= 1 		 for  j  in  tr [ x ]: 			 if  visited [ j ]: continue 			visited [ j ]= True 			s . append ( j ) 	neu , maxi = 0 , 0 	 for  e  in  qeue : 		maxi = max ( maxi , qeue [ e ]) 		neu += qeue [ e ] 	ans += neu - maxi print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun kwd pln kwd pln kwd pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln kwd pln pun pln pun kwd pln pun pln pun pln pun pln pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun kwd pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun,1356 ms,30900 KB,731
21579430,2016-10-19 02:30:00,Amores,732C - Sanatorium,Python 3,Accepted,2,33,"a = list ( map ( int , input (). split ())) print ( sum ( max ( 0 , max ( a )- x - 1 ) for  x  in  a ))",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun,77 ms,4500 KB,732
32273409,2017-11-13 02:03:00,yugle7,733C - Epidemic in Monstropolis,Python 3,Accepted,27,284,"f  =   lambda :  list ( map ( int ,  input (). split ()))   def  g ( i ,  j ,  k ):     z  =  y  =  i      for  x  in  range ( i ,  j ):          if  a [ x ]   >  a [ y ]:  y  =  x      if  y  >  i :  z  =  y      else :          while  a [ y ]   ==  a [ i ]:             y  +=   1              if  y  ==  j :   return   []         y  -=   1     l  =   [ str ( k  +  y  -  x )   +   ' L'   for  x  in  range ( i ,  y )]     r  =   [ str ( k  +  y  -  z )   +   ' R'   for  x  in  range ( y  +   1 ,  j )]      return  r  +  l  if  z  ==  i  else  l  +  r   n ,  a ,  m ,  b  =  f ()[ 0 ],  f (),  f ()[ 0 ],  f () d  =   [ 'YES' ]   s  =  i  =  k  =   0 for  j ,  q  in  enumerate ( a ,   1 ):     s  +=  q      if  k  <  m  and  s  ==  b [ k ]:         d  +=  g ( i ,  j ,  k  +   1 )         s ,  i ,  k  =   0 ,  j ,  k  +   1   print ( '\n' . join ( d )   if  len ( d )   +  m  >  n  and  k  ==  m  else   'NO' )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pln kwd pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln kwd pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun str pun pln pln pun pln pun pln pun pln lit kwd pln pun pln kwd pln pun pln pun pln lit pun pln pun pln pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pln kwd pun str pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln str pun,62 ms,0 KB,733
47792805,2018-12-31 17:33:00,SirULG,734C - Anton and Making Potions,Python 3,Accepted,10,140,"( n , m , k ),( x , s ), a , b , c , d =( list ( map ( int , input (). split ())) for  _  in "" "" * 6 ) a +=[ x ]; b +=[ 0 ]; c =[ 0 ]+ c ; d =[ 0 ]+ d L = sorted ( list ( zip ( a , b )), key = lambda  x :- x [ 1 ]) o , j = n * x , 0 for  ai , bi  in  L :      while  j <= k  and  d [ j ]+ bi <= s : j += 1      if  j == 0 : continue     t = ai *( n - c [ j - 1 ])     o = min ( o , t ) print ( o )",pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd str pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit kwd pln pun pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun lit pun kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun kwd pun pln pun,780 ms,40000 KB,734
22714489,2016-12-05 18:18:00,Q-learning,735C - Tennis Championship,Python 3,Accepted,7,37,"n = int ( input ()) a , b = 2 , 1 c = 0 while  a <= n :     a , b = a + b , a     c += 1 print ( c )",pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit kwd pun pln pun,62 ms,0 KB,735
22677869,2016-12-03 16:25:00,cqdef_xxx,735E - Ostap and Tree,Python 3,Accepted,7,37,"n = int ( input ()) a , b = 2 , 1 c = 0 while  a <= n :     a , b = a + b , a     c += 1 print ( c )",pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit kwd pun pln pun,296 ms,300 KB,736
33154920,2017-12-12 15:38:00,yugle7,729E - Subordinates,Python 3,Accepted,7,37,"n = int ( input ()) a , b = 2 , 1 c = 0 while  a <= n :     a , b = a + b , a     c += 1 print ( c )",pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit kwd pun pln pun,280 ms,20200 KB,737
22693260,2016-12-04 13:03:00,tetroborat,739A - Alyona and mex,Python 3,Accepted,7,37,"n = int ( input ()) a , b = 2 , 1 c = 0 while  a <= n :     a , b = a + b , a     c += 1 print ( c )",pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun lit kwd pun pln pun,514 ms,3100 KB,740
28384610,2017-07-09 12:38:00,nns2009,742C - Arpa's loud Owf and Mehrdad's evil plan,Python 3,Accepted,16,139,"def  gcd ( a , b ): return  a  if  b == 0   else  gcd ( b ,  a % b ) def  lcm ( a , b ): return  a * b // gcd ( a , b ) n = int ( input ()) c =[ int ( v )- 1   for  v  in  input (). split ( ' ' )] t = 1 for  i  in  range ( n ):   k = i    for  j  in  range ( 1 ,  n + 2 ):     k = c [ k ]      if  k == i :        break    if  j > n :      print (- 1 )     exit ()   t = lcm ( t , j  if  j % 2 != 0   else  j // 2 ) print ( t )",kwd pln pun pln pun pln pun kwd pln kwd pln pun lit pln kwd pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun str pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pun lit pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun lit pln kwd pln pun lit pun kwd pun pln pun,62 ms,5400 KB,742
46894253,2018-12-11 11:14:00,Silky_Littleraisin,743C - Vladik and fractions,Python 3,Accepted,3,31,"n = int ( input ()) if  n == 1 : print (- 1 ) else : print ( n , n + 1 , n * n + n )",pln pun pln pun pln pun kwd pln pun lit pun kwd pun lit pun kwd pun kwd pun pln pun pln pun lit pun pln pun pln pun pln pun,109 ms,0 KB,743
29157789,2017-08-03 17:31:00,hackentosh11,745C - Hongcow Builds A Nation,Python 3,Accepted,36,268,"def  dfs ( x , v , g ): 	rtv  =   1 	v . add ( x ) 	 for  i  in  range ( 1 , n + 1 ): 		 if  g [ x ][ i ]   ==   1   and  v . __contains__ ( i )   ==   False : 			rtv  +=  dfs ( i , v , g ) 	 return  rtv   n , m , k  =  map ( int , input (). strip (). split ( ' ' ))   ks  =  set ( map ( int , input (). strip (). split ( ' ' )))   g  =   [   [ 0 ]*( n + 1 )   for  i  in  range ( n + 1 )]   for  i  in  range ( m ): 	x , y  =  map ( int , input (). strip (). split ( ' ' )) 	g [ x ][ y ]   =   1 	g [ y ][ x ]   =   1     v  =  set ({}) mk  =   0 mi  =  n ans  =   0 for  i  in  ks : 	kk  =  set ({}) 	ss  =  dfs ( i , v , g ) 	ans  +=  int (( ss *( ss - 1 ))/ 2 ) 	mi  -=  ss 	mk  =  max ( ss , mk )   ans  +=  int ((( mk + mi )*( mk + mi - 1 ))/ 2 ) ans  -=  int (( mk *( mk - 1 ))/ 2 ) print ( ans  -  m )    ",kwd pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pln pun pln pun pln pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln lit pln pln pln pun pln pun pln pun pln lit pln pun pln pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun lit pun lit pun kwd pun pln pun pln pun pln pln,514 ms,9400 KB,745
31260771,2017-10-13 00:15:00,yugle7,746C - Tram,Python 3,Accepted,6,105,"f  =   lambda :  map ( int ,  input (). split ()) s ,  x ,  y  =  f () a ,  b  =  f () p ,  d  =  f () if  x  >  y :  d ,  p ,  x ,  y  =   - d ,  s  -  p ,  s  -  x ,  s  -  y print ( min (( y  -  x )   *  b ,   [ 2   *  s  *   ( p  >  x )   +  y  -  p ,  y  +  p ][ d  <   0 ]   *  a ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun,62 ms,0 KB,746
23311241,2016-12-25 17:09:00,AkA,752C - Santa Claus and Robot,Python 3,Accepted,6,105,"f  =   lambda :  map ( int ,  input (). split ()) s ,  x ,  y  =  f () a ,  b  =  f () p ,  d  =  f () if  x  >  y :  d ,  p ,  x ,  y  =   - d ,  s  -  p ,  s  -  x ,  s  -  y print ( min (( y  -  x )   *  b ,   [ 2   *  s  *   ( p  >  x )   +  y  -  p ,  y  +  p ][ d  <   0 ]   *  a ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun,186 ms,5700 KB,748
23690984,2017-01-11 07:17:00,Yut0,749C - Voting,Python 3,Accepted,15,135,"n = int ( input ()) v = input () v =[ v [ i ]   for  i  in  range ( n )] d = r = 0   while  len ( set ( v )- set ([ 0 ]))!= 1 :      for  j  in  range ( n ):         i = v [ j ]          if  i == 'D'   and  d < 0 : d , v [ j ]= d + 1 , 0          elif  i == 'R'   and  r < 0 : r , v [ j ]= r + 1 , 0          elif  i == 'D' : r -= 1          elif  i == 'R' : d -= 1   print ( list ( set ( v )- set ([ 0 ]))[ 0 ])  ",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun lit pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun str pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln pun str pln kwd pln pun lit pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln pun str pun pln pun lit pln kwd pln pun str pun pln pun lit pln kwd pun pln pun pln pun pln pun pln pun lit pun lit pun pln,951 ms,7800 KB,749
30947910,2017-10-02 19:14:00,yugle7,750C - New Year and Rating,Python 3,Accepted,9,117,"k  =   9   **   9 t  =   [ 0 ,  k ,  k ] for  i  in  range ( int ( input ())):     c ,  d  =  map ( int ,  input (). split ())     d  =   3   -   2   *  d     t [ d ]   =  min ( t [ d ],  t [ 0 ]   *  d )     t [ 0 ]   +=  c s ,  a ,  b  =  t print ( 'Infinity'   if  b  ==  k  else   'Impossible'   if  a  !=  k  and  a  +  b  <   1   else   1899   +  s  +  b )",pln pun pln lit pln pun pln lit pln pun pln pun lit pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln kwd pun str pln kwd pln pun pln kwd pln str pln kwd pln pun pln kwd pln pun pln pun pln lit pln kwd pln lit pln pun pln pun pln pun,748 ms,0 KB,750
23311241,2016-12-25 17:09:00,AkA,752C - Santa Claus and Robot,Python 3,Accepted,11,75,import  re n  =  int ( input ()) s  =  input () f  =  set () c  =   1 for  i  in  s :     f . add ( i )      if   ( 'R'   in  f  and   'L'   in  f )   or   ( 'U'   in  f  and   'D'   in  f ):         c  +=   1         f  =  set ( i ) print ( c ),kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun str pln kwd pln kwd pln str pln kwd pln pun pln kwd pln pun str pln kwd pln kwd pln str pln kwd pln pun pln pun pln lit pln pun pln pun pln pun kwd pun pln pun,186 ms,5700 KB,752
23690574,2017-01-11 06:30:00,lala,753C - Interactive Bulls and Cows (Hard),Python 3,Accepted,97,615,"import  random import  sys   def  valid ( st )   :    return  len ( set ( x  for  x  in  st ))   ==   4   def  comp ( guess ,  secret )   :   b ,  c  =   0 ,   0    for  i  in  range ( 4 )   :        if  secret [ i ]   ==  guess [ i ]   :         b  +=   1      elif  secret [ i ]   in  guess  :       c  +=   1    return   ( b ,  c )   def  check ( guess ,  secret ,  bulls ,  cows )   :   b ,  c  =  comp ( guess ,  secret )    return  bulls  ==  b  and  cows  ==  c   def  filtered ( candidates ,  history )   :   ret  =   []    for  c  in  candidates  :     good  =   True      for  query ,  res  in  history  :        if   not  check ( c ,  query ,  res [ 0 ],  res [ 1 ])   :         good  =   False      if  good  :       ret . append ( c )    return  ret   def  next_guess ( candidates ,  step )   :    if  step  <   2   :      return  candidates [ random . randint ( 0 ,  len ( candidates )- 1 )]      # Can get an accuracy of 99% if go random each step   best  =   5040    if  len ( candidates )   ==   1   :      return  candidates [ 0 ]   now  =  candidates [ 0 ]    for  g  in  candidates  :     poss  =   [   [ 0 ]   *   5   for  x  in  range ( 5 )]      for  s  in  candidates  :       b ,  c  =  comp ( g ,  s )       poss [ b ][ c ]   +=   1     penalty  =  max (  max ( arr )   for  arr  in  poss  )      if  penalty  <  best  :       best  =  penalty       now  =  g    return  now   def  generate_all_initial ()   :   ret  =  list ( filter ( valid ,  map (   lambda  x  :   ""%04d""   %  x ,  range ( 9999 ))))    return  ret   everyone  =  generate_all_initial () def  test ( true_secret )   :    global  everyone   choices ,  history  =  everyone [:],   []    for  step  in  range ( 6 )   :     take_guess  =  next_guess ( choices ,  step )      if   not  valid ( take_guess )   :        print ( ""Crashed"" ,  true_secret )        break     result  =  comp ( take_guess ,  true_secret )     history . append (( take_guess , result ))     choices  =  filtered ( choices ,  history )    if  len ( choices )   !=   1   :      print ( ""Failed"" ,  true_secret )      print ( len ( choices ), history )      return   False    else   :      print ( ""Pass"" ,  true_secret )      return   True   def  run ()   :    global  everyone   choices ,  history  =  everyone [:],   []    for  step  in  range ( 7 )   :     take_guess  =  next_guess ( choices ,  step )      print ( take_guess )     sys . stdout . flush ()     b ,  c  =  map ( int ,  input (). split ())      if  b  ==   4   and  c  ==   0   :        return     history . append (( take_guess ,( b , c )))     choices  =  filtered ( choices ,  history )   #### Main #### #true_secret = start[random.randint(0,5039)] """""" count = 0 for true_secret in everyone :   if not test(true_secret) :     count += 1 print(count, count / 5040.0) """"""   run ()",kwd pln kwd pln pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pln kwd pln kwd pln pun lit pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln kwd pln pun pln pun pln kwd pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln com pln pun pln lit pln kwd pln pun pln pun pln pun pln lit pln pun pln kwd pln pun lit pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pln pun pln pln kwd pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln str pln pun pln pun pln pun lit pun pln kwd pln pln pln pun pln pun kwd pln pun pln pun pln pun pln kwd pln pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pun str pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pln pun pln kwd pun str pun pln pun pln kwd pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln kwd pun str pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln kwd pln pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pln kwd pln pun pln lit pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln com com str str str str str str str pln pln pun,436 ms,5500 KB,753
23625903,2017-01-07 18:02:00,szawinis,754C - Vladik and chat,Python 3,Accepted,25,253,"import  re t  =  int ( input ()) for  _  in  range ( t ):     n  =  int ( input ())     names  =  set ( input (). split ())     m  =  int ( input ())     dp  =   []     a  =   []      for  i  in  range ( m ):  a . append ( input ())      for  i  in  range ( m ):         sender ,  msg  =  a [ i ]. split ( ':' )         ls  =  set ( filter ( None ,  re . split ( '\W+' , msg )))         dp . append (( names  if  sender  ==   '?'   else  set ([ sender ]))   -  ls )          if  i  and  len ( dp [ i - 1 ])   ==   1 :  dp [ i ]   -=  dp [ i - 1 ]          # print(dp[i]);      if  any ([ len ( p )   ==   0   for  p  in  dp ]):   print ( ""Impossible"" )      else :         res  =   []          for  i  in  reversed ( range ( m )):             res . append ( dp [ i ]. pop ())              if  i  >   0 :  dp [ i - 1 ]. discard ( res [- 1 ])          for  i  in  range ( m ):               sender ,  msg  =  a [ i ]. split ( ':' )             sender  =  res [ m - i - 1 ]              print ( sender + ':' + msg )",kwd pln pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun kwd pun pln pun pln pun str pun pln pun pln pun pln pun pln kwd pln pun pln str pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln com pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln kwd pun str pun pln kwd pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun str pun pln pun,124 ms,5300 KB,754
56162351,2019-06-27 15:51:00,cs1g,755C - PolandBall and Forest,Python 3,Accepted,2,54,"n ,  P  =  int ( input ()),  list ( map ( int ,  input (). split ())) print ( sum ( P [ P [ i ]- 1 ]   ==  i + 1   and  P [ i ]   <  i + 2   for  i  in  range ( n )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun,109 ms,600 KB,755
26502072,2017-04-19 21:00:00,cgfs10000,757C - Felicity is Coming!,Python 3,Accepted,23,135,"#!/usr/bin/env python3 from  sys  import  stdin , stdout from  math  import   * from  collections  import   Counter   def  ri ():      return  map ( int ,  stdin . readline (). split ())   n ,  m  =  ri ()   g  =   [[]   for  i  in  range ( m )] for  i  in  range ( n ):      for  t  in  list ( ri ())[ 1 :]:         g [ t - 1 ]. append ( i )   ans  =   1 mod  =   10 ** 9   + 7 for  e  in   Counter ( list ( map ( str ,  g ))). values ():      for  i  in  range ( 2 ,  e + 1 ):         ans  =  ans * i % mod print ( ans )    ",com kwd pln kwd pln pun pln kwd pln kwd pln pun kwd pln kwd pln typ pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pln pun pln lit pln pun pln lit pun lit pln pun lit kwd pln kwd pln typ pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln kwd pun pln pun pln pln,1933 ms,109400 KB,757
31223641,2017-10-11 20:22:00,yugle7,758C - Unfair Poll,Python 3,Accepted,9,193,"n ,  m ,  k ,  x ,  y  =  map ( int ,  input (). split ()) if  n  >   1 :     t  =   2   *   ( n  -   1 )   *  m     s ,  p  =  k  //  t ,  k  %  t     f  =   lambda  x ,  y :  s  +  s  *   ( 1   <  x  <  n )   +   ( p  >=  m  *  x  -  m  +  y )   +   ( p  >=   ( 2   *  n  -  x  -   1 )   *  m  +  y )   *   ( x  <  n )      print ( max ( f ( 1 ,   1 ),  f ( 2 ,   1 ),  f ( n  -   1 ,   1 )),  f ( n ,  m ),  f ( x ,  y )) else :     g  =   lambda  y :   ( k  -  y  +  m )   //  m      print ( g ( 1 ),  g ( m ),  g ( y ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln lit pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun lit pun pln lit pun pln pun lit pun pln lit pun pln pun pln pun pln lit pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun lit pun pln pun pln pun pln pun pln pun,62 ms,0 KB,758
24076011,2017-01-23 19:54:00,af0706,760C - Pavel and barbecue,Python 3,Accepted,20,108,"n = int ( input ()) a = list ( map ( int , input (). split ())) b = list ( map ( int , input (). split ())) k = 0 s = 0 v =[ False ]* n for  i  in  range  ( n ):      if  v [ i ]:          continue     k += 1      while   not  v [ i ]:         v [ i ]= True         i = a [ i ]- 1 if  k == 1 :     k = 0 else :     s += k if  sum ( b )% 2 == 0 :     s += 1 print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit pln pun kwd pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun lit kwd pln pun lit pun pln pun lit kwd pun pln pun pln kwd pln pun pln pun lit pun lit pun pln pun lit kwd pun pln pun,342 ms,18100 KB,760
24392169,2017-02-02 20:58:00,Wavescale,761C - Dasha and Password,Python 3,Accepted,22,186,"n , m = map ( int , input (). split ()) by =[ m ]* n ch =[ m ]* n sy =[ m ]* n for  x  in  range ( n ): 	a = input () 	 for  i , c  in  enumerate ( a ): 	    mi = min ( m - i , i ) 	     if   '0' <= c <= '9' :   	        by [ x ]= min ( by [ x ], mi ) 	     elif   'a'   <=  c  <=   'z' : 	        ch [ x ]= min ( ch [ x ], mi ) 	     else : 	        sy [ x ]=  min ( sy [ x ], mi ) ans = m * 3 for  i  in  range ( n ): 	 for  j  in  range ( n ): 		 if  i == j : continue 		 for  k  in  range ( n ): 			 if  i == k  or  j == k : continue 			ans = min ( ans , by [ i ]+ ch [ j ]+ sy [ k ]) print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln str pun pln pun str pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln str pln pun pln pun pln str pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun kwd pln kwd pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,202 ms,4500 KB,761
55412519,2019-06-11 00:22:00,vjudge1,762C - Two strings,Python 3,Accepted,42,263,a  =  list ( input ()) b  =  list ( input ())   s  =   [- 1 ] i  =   0 j  =   0   while  i  <  len ( a )   and  j  <  len ( b ): 	 if  a [ i ]   ==  b [ j ]: 		s . append ( i ) 		j  +=   1 	i  +=   1   e  =   [ 10 ** 6 ] i  =  len ( a )   -   1 j  =  len ( b )   -   1   while  i  >=   0   and  j  >=   0 : 	 if  a [ i ]   ==  b [ j ]: 		e . append ( i ) 		j  -=   1 	i  -=   1   ans_len  =   0 ans  =   [ '-' ]   i  =  len ( s )   -   1 j  =   0 while  i  >=   0   and  j  <  len ( e ): 	 if  s [ i ]   <  e [ j ]   and  i  +  j  -   1 <  len ( b ): 		new_len  =  j  +  i 		 if  new_len  >  ans_len : 			ans_len  =  new_len 			 if  j  >   0 : 				ans  =  b [: i ]   +  b [- j :] 			 else : 				ans  =  b [: i ] 		j  +=   1 	 else : 		i  -=   1   print ( '' . join ( ans )),pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pln pun pln lit pln pun pln pun str pun pln pln pun pln pun pln pun pln pun pln lit pln pun pln lit kwd pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln lit pln kwd pun str pun pln pun pln pun,342 ms,5800 KB,762
24630681,2017-02-13 18:18:00,wiwitrifai,764E - Timofey and remoduling,Python 3,Accepted,42,263,a  =  list ( input ()) b  =  list ( input ())   s  =   [- 1 ] i  =   0 j  =   0   while  i  <  len ( a )   and  j  <  len ( b ): 	 if  a [ i ]   ==  b [ j ]: 		s . append ( i ) 		j  +=   1 	i  +=   1   e  =   [ 10 ** 6 ] i  =  len ( a )   -   1 j  =  len ( b )   -   1   while  i  >=   0   and  j  >=   0 : 	 if  a [ i ]   ==  b [ j ]: 		e . append ( i ) 		j  -=   1 	i  -=   1   ans_len  =   0 ans  =   [ '-' ]   i  =  len ( s )   -   1 j  =   0 while  i  >=   0   and  j  <  len ( e ): 	 if  s [ i ]   <  e [ j ]   and  i  +  j  -   1 <  len ( b ): 		new_len  =  j  +  i 		 if  new_len  >  ans_len : 			ans_len  =  new_len 			 if  j  >   0 : 				ans  =  b [: i ]   +  b [- j :] 			 else : 				ans  =  b [: i ] 		j  +=   1 	 else : 		i  -=   1   print ( '' . join ( ans )),pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pln pun pln lit pln pun pln pun str pun pln pln pun pln pun pln pun pln pun pln lit pln pun pln lit kwd pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln lit pln kwd pun str pun pln pun pln pun,233 ms,15200 KB,763
26569080,2017-04-22 00:05:00,merolish,763A - Timofey and a tree,Python 3,Accepted,42,263,a  =  list ( input ()) b  =  list ( input ())   s  =   [- 1 ] i  =   0 j  =   0   while  i  <  len ( a )   and  j  <  len ( b ): 	 if  a [ i ]   ==  b [ j ]: 		s . append ( i ) 		j  +=   1 	i  +=   1   e  =   [ 10 ** 6 ] i  =  len ( a )   -   1 j  =  len ( b )   -   1   while  i  >=   0   and  j  >=   0 : 	 if  a [ i ]   ==  b [ j ]: 		e . append ( i ) 		j  -=   1 	i  -=   1   ans_len  =   0 ans  =   [ '-' ]   i  =  len ( s )   -   1 j  =   0 while  i  >=   0   and  j  <  len ( e ): 	 if  s [ i ]   <  e [ j ]   and  i  +  j  -   1 <  len ( b ): 		new_len  =  j  +  i 		 if  new_len  >  ans_len : 			ans_len  =  new_len 			 if  j  >   0 : 				ans  =  b [: i ]   +  b [- j :] 			 else : 				ans  =  b [: i ] 		j  +=   1 	 else : 		i  -=   1   print ( '' . join ( ans )),pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pln pun pln lit pln pun pln pun str pun pln pln pun pln pun pln pun pln pun pln lit pln pun pln lit kwd pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln lit pln kwd pun str pun pln pun pln pun,529 ms,21800 KB,764
24692886,2017-02-15 14:02:00,kcherdakov,765C - Table Tennis Game 2,Python 3,Accepted,2,43,"k , a , b = map ( int , input (). split ()) print (- 1   if  a < k  and  b % k  or  b < k  and  a % k  else  a // k + b // k )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun lit pln kwd pln pun pln kwd pln pun pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun,62 ms,4500 KB,765
24526003,2017-02-08 15:22:00,Yut0,766C - Mahmoud and a Message,Python 3,Accepted,24,208,"cin = lambda :  map ( int , input (). split ()) n = int ( input ()) st = input () a = list ( cin ()) dp =[ 0 ]*( n + 2 ) mn =[ 10 ** 4 ]*( n + 2 ) mx = 1 dp [ 0 ]= 1 dp [- 1 ]= 1 mn [ 0 ]= 1 mn [- 1 ]= 0 mod = int ( 1e9 )+ 7   for  i  in  range ( 1 , n ):     c = 10 ** 4      for  j  in  range ( i ,- 1 ,- 1 ):         ind = ord ( st [ j ])- ord ( 'a' )         c = min ( c , a [ ind ])          if  c < i - j + 1 : break         dp [ i ]   +=  dp [ j - 1 ]         mn [ i ]   =  min ( mn [ i ], mn [ j - 1 ]+ 1 )         mx = max ( mx , i - j + 1 )        print ( '\n' . join ( map ( str ,[ dp [ n - 1 ]% mod , mx , mn [ n - 1 ]])))",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun lit pun pln pun lit pun pln pun lit pln pun lit pun lit pln pun lit pun lit pln pun lit pun lit pln pun lit pun lit pln pun pln pun lit pun lit pln kwd pln kwd pln pun lit pun pln pun pln pun lit pun lit pln kwd pln kwd pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pun kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pln kwd pun str pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun,1231 ms,4800 KB,766
27158107,2017-05-16 14:41:00,xehoth#,768C - Jon Snow and his Favourite Number,Python 3,Accepted,7,97,"n ,  k ,  x  =  map ( int ,  input (). split ()) rangers  =  list ( map ( int ,  input (). split ())) for  i  in  range ( min ( k ,   8   +   ( k  &   3 ))): 	rangers . sort () 	rangers  =   [ rangers [ i ]   if   ( i  &   1 )   else  rangers [ i ]   ^  x  for  i  in  range ( n )] rangers . sort () print ( rangers [- 1 ],  rangers [ 0 ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun kwd pun pln pun lit pun pln pun lit pun,373 ms,6500 KB,768
26959168,2017-05-08 17:55:00,sagid,769C - Cycle In Maze,Python 3,Accepted,67,532,"from  queue  import   Queue import  sys #sys.stdin = open('input.txt')   n ,  m ,  k  =  map ( lambda  x :  int ( x ),  input (). split ( ' ' ))   if  k & 1 :    print ( 'IMPOSSIBLE' )   sys . exit ()   s  =   [ None ]* n for  i  in  range ( n ):   s [ i ]   =   [ None ]* m   t  =  input ()    for  j  in  range ( m ):     s [ i ][ j ]   =  t [ j ]      if  t [ j ]   ==   'X' :  x ,  y  =  j ,  i   def  bfs ( x ,  y ):   res  =   [[ 10000000 ]* m  for  i  in  range ( n )]    if  s [ y ][ x ]   ==   '*' :   return  res   q  =   Queue ()   q . put (( x ,  y ))   step  =   0      def  add ( x ,  y ):      if  res [ y ][ x ]   !=   10000000   or  s [ y ][ x ]   ==   '*'   or  step  >=  res [ y ][ x ]:   return     q . put (( x ,  y ))     res [ y ][ x ]   =  step + 1     res [ y ][ x ]   =  step      while   not  q . empty ():     x ,  y  =  q . get ()     step  =  res [ y ][ x ]      #print('-')      if  y  <  n - 1 :  add ( x ,  y + 1 )   #D      if  x  >   0 :  add ( x - 1 ,  y )     #L      if  x  <  m - 1 :  add ( x + 1 ,  y )   #R      if  y  >   0 :  add ( x ,  y - 1 )     #U    return  res   res  =  bfs ( x ,  y )     path  =   [] add  =   lambda  s :  path . append ( s ) for  i  in  range ( k ):   step  =  k - i    #print(step, (y, x), k-i)    if  y  <  n - 1   and  res [ y + 1 ][ x ]   <=  step :   #D     add ( 'D' )     y  =  y + 1    elif  x  >   0   and  res [ y ][ x - 1 ]   <=  step :   #L     add ( 'L' )     x  =  x - 1    elif  x  <  m - 1   and  res [ y ][ x + 1 ]   <=  step :   #R     add ( 'R' )     x  =  x + 1    elif  y  >   0   and  res [ y - 1 ][ x ]   <=  step :   #U     add ( 'U' )     y  =  y - 1    else :      print ( 'IMPOSSIBLE' )     sys . exit ()   print ( str . join ( '' ,  path ))",kwd pln kwd pln typ kwd pln com pln pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln pun lit pun pln kwd pun str pun pln pun pln pun pln pln pun pln pun kwd pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln str pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln str pun pln kwd pln pln pun pln typ pun pln pun pln pun pln pun pln pun pln pun pln lit pln pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln str pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pln pun pln pun pln pun pln pun pln pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln com pln kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln com pln kwd pln pun pln lit pun pln pun pln pun lit pun pln pun pln com pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln com pln kwd pln pun pln lit pun pln pun pln pun pln pun lit pun pln com pln kwd pln pln pln pun pln pun pln pun pln pun pln pln pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pln com pln kwd pln pun pln pun lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln com pln pun str pun pln pun pln pun lit pln kwd pln pun pln lit pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln com pln pun str pun pln pun pln pun lit pln kwd pln pun pln pun lit pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln com pln pun str pun pln pun pln pun lit pln kwd pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln com pln pun str pun pln pun pln pun lit pln kwd pun pln kwd pun str pun pln pun pln pun pln kwd pun pln pun pln pun str pun pln pun,11481 ms,34200 KB,769
33196860,2017-12-13 00:27:00,yugle7,770C - Online Courses In BSU,Python 3,Accepted,32,215,"from  sys  import   * f  =   lambda :  list ( map ( int ,  stdin . readline (). split ()))   class  T :      def  __init__ ( self ,  i ):         self . i ,  self . t  =  i ,  f ()[ 1 :]         self . a  =  self . q  =   0   n ,  k  =  f () d  =  f () p  =   [ None ]   +   [ T ( i  +   1 )   for  i  in  range ( n )]   s  =   [] while  d :     x  =  p [ d . pop ()]      if  x . a :   continue     d . append ( x . i )     q  =   1      for  i  in  x . t :         y  =  p [ i ]          if  y . a :   continue         d . append ( y . i )         q  =   0      if  q :         s . append ( x . i )         x . a  =   1      elif  x . q :          print (- 1 )         exit ()      else :  x . q  =   1   print ( len ( s ),   * s )",kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln kwd pun lit pun pln pun pln kwd pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pun pln pun,1091 ms,28500 KB,770
27011151,2017-05-11 14:37:00,frankbozar,806C - Prairie Partition,Python 3,Accepted,32,215,"from  sys  import   * f  =   lambda :  list ( map ( int ,  stdin . readline (). split ()))   class  T :      def  __init__ ( self ,  i ):         self . i ,  self . t  =  i ,  f ()[ 1 :]         self . a  =  self . q  =   0   n ,  k  =  f () d  =  f () p  =   [ None ]   +   [ T ( i  +   1 )   for  i  in  range ( n )]   s  =   [] while  d :     x  =  p [ d . pop ()]      if  x . a :   continue     d . append ( x . i )     q  =   1      for  i  in  x . t :         y  =  p [ i ]          if  y . a :   continue         d . append ( y . i )         q  =   0      if  q :         s . append ( x . i )         x . a  =   1      elif  x . q :          print (- 1 )         exit ()      else :  x . q  =   1   print ( len ( s ),   * s )",kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln kwd pun lit pun pln pun pln kwd pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pun pln pun,1216 ms,5900 KB,773
31602657,2017-10-22 14:54:00,yugle7,774C - Maximum Number,Python 3,Accepted,2,32,n  =  int ( input ()) print ( '17' [ n  &   1 ]   +   '1'   *   ( n  //   2   -   1 )),pln pun pln pun pln pun kwd pun str pun pln pun pln lit pun pln pun pln str pln pun pln pun pln pun pln lit pln pun pln lit pun,62 ms,5500 KB,774
31042655,2017-10-05 20:31:00,yugle7,776C - Molly's Chemicals,Python 3,Accepted,10,111,"f  =   lambda :  map ( int ,  input (). split ()) n ,  k  =  f () t  =   { k  **  i  for  i  in  range ( 48 )   if  k  **  i  <=  n  *   1e9 } s  =  y  =   0 d  =   { 0 :   1 } for  a  in  f ():     s  +=  a     d [ s ]   =  d . get ( s ,   0 )   +   1     y  +=  sum ( d . get ( s  -  x ,   0 )   for  x  in  t ) print ( y )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit pln pun pln pun lit pun pln lit pun kwd pln kwd pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln kwd pln pun kwd pun pln pun,1715 ms,12900 KB,776
25027366,2017-02-26 06:29:00,JustAni,777C - Alyona and Spreadsheet,Python 3,Accepted,20,193,"n , m  =   [ int ( x )   for  x  in  input (). split ()] arr  =   [[ int ( x )   for  x  in  input (). split ()]   for  i  in  range ( n )]   val  =   [   [ 1 ]* m  for  i  in  range ( n )] for  i  in  range ( m ): 	 for  j  in  range ( 1 , n ): 		 if  arr [ j ][ i ]>= arr [ j - 1 ][ i ]: 			val [ j ][ i ]   =  val [ j - 1 ][ i ]   +   1   best  =   [ max ( i )   for  i  in  val ] 	   ans  =   """" t  =  int ( input ()) for  i  in  range ( t ): 	c , d  =   [ int ( x )   for  x  in  input (). split ()] 	 if  best [ d - 1 ]>= d - c + 1 : 		ans  +=   ""Yes\n"" 	 else : 		ans  +=   ""No\n"" print ( ans )",pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln lit pln pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pln pln pun pln str pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln str pln kwd pun pln pun pln str kwd pun pln pun,764 ms,24500 KB,777
36337612,2018-03-17 01:06:00,daleks,779C - Dishonest Sellers,Python 3,Accepted,6,69,"I  =   lambda :  list ( map ( int ,  input (). split ())) n ,  k  =  I () a  =  I () b  =  I () d  =  sorted ([ bb - aa  for  bb ,  aa  in  zip ( b ,  a )   if  bb - aa < 0 ]) print ( sum ( a )+ sum ( d [: n - k ]))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun lit pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun,280 ms,24200 KB,779
26041324,2017-04-01 06:14:00,eddy1021,784C - INTERCALC,Python 3,Accepted,3,24,"input () a = list ( map ( int , input (). split ())) print ( a [- 1 ]^ max ( a ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit pun pln pun pln pun,62 ms,5400 KB,784
25563108,2017-03-17 06:02:00,JustAni,785C - Anton and Fairy Tale,Python 3,Accepted,9,63,"import  math from  decimal  import   Decimal a , b  =  map ( int , input (). split ()) if  a <= b : 	 print ( a ) else : 	ans  =  math . ceil ((- 1 +( Decimal ( 1 + 8 *( a - b ))** Decimal ( 0.5 )))/ 2 ) 	 print ( ans + b ) 	",kwd pln kwd pln kwd pln typ pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln kwd pun pln pun kwd pun pln pun pln pun pln pun lit pun typ pun lit pun lit pun pln pun pln pun typ pun lit pun lit pun pln kwd pun pln pun pln pun pln,78 ms,5500 KB,785
55589692,2019-06-15 14:37:00,iamssk,788A - Functions again,Python 3,Accepted,9,63,"import  math from  decimal  import   Decimal a , b  =  map ( int , input (). split ()) if  a <= b : 	 print ( a ) else : 	ans  =  math . ceil ((- 1 +( Decimal ( 1 + 8 *( a - b ))** Decimal ( 0.5 )))/ 2 ) 	 print ( ans + b ) 	",kwd pln kwd pln kwd pln typ pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln kwd pun pln pun kwd pun pln pun pln pun pln pun lit pun typ pun lit pun lit pun pln pun pln pun typ pun lit pun lit pun pln kwd pun pln pun pln pun pln,249 ms,9000 KB,789
73580874,2020-03-18 17:46:00,tanu38,771B - Bear and Different Names,Python 3,Accepted,9,63,"import  math from  decimal  import   Decimal a , b  =  map ( int , input (). split ()) if  a <= b : 	 print ( a ) else : 	ans  =  math . ceil ((- 1 +( Decimal ( 1 + 8 *( a - b ))** Decimal ( 0.5 )))/ 2 ) 	 print ( ans + b ) 	",kwd pln kwd pln kwd pln typ pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln kwd pun pln pun kwd pun pln pun pln pun pln pun lit pun typ pun lit pun lit pun pln pun pln pun typ pun lit pun lit pun pln kwd pun pln pun pln pun pln,109 ms,300 KB,791
26446464,2017-04-17 08:43:00,orailly,792C - Divide by Three,Python 3,Accepted,15,180,"import  re s  =  input () x  =  sum ( map ( ord ,  s ))   %   3 if  x :     t ,  l  =  s . translate ( str . maketrans ( ""4578"" ,   ""1212"" )),   [ """" ]     i  =  t . rfind ( ""012"" [ x ])      if  i  >   - 1 :         l . append (( s [: i ],  s [ i  +   1 :]))     i  =  t . rfind ( ""021"" [ x ])      if  i  >   - 1 :         j  =  t . rfind ( ""021"" [ x ],   0 ,  i )          if  j  >   - 1 :             l . append (( s [: j ],  s [ j  +   1 : i ],  s [ i  +   1 :]))     s  =  max (( re . sub ( r '^0*(?=.)' ,   '' ,   '' . join ( e ))   for  e  in  l ),  key = len ) print ( s  or   '-1' )",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pun pln str pun pln pun str pun pln pun pln pun pln pun str pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun str pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun str pun pln pun pln lit pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln str pun pln str pun pln str pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun kwd pun pln kwd pln str pun,92 ms,6600 KB,792
26625909,2017-04-23 22:55:00,rarandomra,793C - Mice problem,Python 3,Accepted,27,200,"n = int ( input ()) x1 , y1 , x2 , y2 =[ int ( x )   for  x  in  input (). split ()] st =[ 0 ] et =[ 1e10 ] ok = 1   if  x1 == x2  or  y1 == y2 :     ok = 0   for  i  in  range ( n ):     a , b , u , w =[ int ( x )   for  x  in  input (). split ()]      for  x , v , s , e  in   (( a , u , x1 , x2 ),( b , w , y1 , y2 )):          if  v == 0 :              if   not ( s < x < e ):                 ok = 0          else :             t1 =( s - x )/ v             t2 =( e - x )/ v             st +=[ min ( t1 , t2 )]             et +=[ max ( t1 , t2 )]   #print(st,et)                          if  max ( st )< min ( et )   and  min ( et )> 0   and  ok :      print ( max ( max ( st ), 0 )) else :      print (- 1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pln kwd pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln kwd pln kwd pun pln pun pln pun pln pun pln pun lit pln kwd pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln com pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pln kwd pln pun pln kwd pun pln pun pln pun pln pun lit pun kwd pun pln kwd pun lit pun,748 ms,14000 KB,793
46573472,2018-12-04 10:20:00,david7ch,794C - Naming Company,Python 3,Accepted,11,97,"from  sys  import   * f  =   lambda :  sorted ( stdin . readline ()[:- 1 ]) t  =   [ f ()[::- 1 ],  f ()] n  =  len ( t [ 0 ]) p  =   [ n  &   1 ,   1 ] s  =   '' for  i  in  range ( n ): 	k  =  t [ 0 ][- 1 ]   <  t [ 1 ][- 1 ] 	p [ k ]   ^=   1 	s  +=  t [ p [ k ]]. pop () print ( s )",kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln lit pun pln pun pln str kwd pln kwd pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,452 ms,4300 KB,794
31602657,2017-10-22 14:54:00,yugle7,774C - Maximum Number,Python 3,Accepted,11,97,"from  sys  import   * f  =   lambda :  sorted ( stdin . readline ()[:- 1 ]) t  =   [ f ()[::- 1 ],  f ()] n  =  len ( t [ 0 ]) p  =   [ n  &   1 ,   1 ] s  =   '' for  i  in  range ( n ): 	k  =  t [ 0 ][- 1 ]   <  t [ 1 ][- 1 ] 	p [ k ]   ^=   1 	s  +=  t [ p [ k ]]. pop () print ( s )",kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln lit pun pln pun pln str kwd pln kwd pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,62 ms,5500 KB,795
28567455,2017-07-15 10:53:00,jokkebk,796C - Bank Hacking,Python 3,Accepted,31,308,"from  collections  import   Counter   n  =  int ( input ()) a  =  list ( int ( v )   for  v  in  input (). split ())   +   [- 1000000002 ] c  =   Counter ( a )   top ,  sec  =  sorted ( set ( a ))[- 1 :- 3 :- 1 ] topC  =   [ 1   if  v == top  else   0   for  v  in  a ] secC  =   [ 1   if  v == sec  else   0   for  v  in  a ]   #print(top, topC) #print(sec, secC)   for  i  in  range ( n - 1 ):     u ,  v  =   ( int ( v )   for  v  in  input (). split ())      if  a [ u - 1 ]   ==  top :  topC [ v - 1 ]   +=   1      if  a [ v - 1 ]   ==  top :  topC [ u - 1 ]   +=   1      if  a [ u - 1 ]   ==  sec :  secC [ v - 1 ]   +=   1      if  a [ v - 1 ]   ==  sec :  secC [ u - 1 ]   +=   1   ans  =  top + 2   # worst case for  i  in  range ( n ):      if  topC [ i ]   <  c [ top ]:   continue   # can only get top+2 here       best  =  top  if  topC [ i ]== 1   and  a [ i ]== top  else  top + 1   # sole top or else        if  secC [ i ]   <  c [ sec ]:  best  =  max ( best ,  sec + 2 )   # seconds beyond       ans  =  min ( ans ,  best )   print ( ans )",kwd pln kwd pln typ pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln typ pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit pun lit pun lit pun pln pun pln pun lit pln kwd pln pun pln kwd pln lit pln kwd pln kwd pln pun pln pun pln pun lit pln kwd pln pun pln kwd pln lit pln kwd pln kwd pln pun pln com com pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pln pun pln pun lit pln com kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln com pln pln pun pln kwd pln pun pln pun lit pln kwd pln pun pln pun pln kwd pln pun lit pln com pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln com pln pln pun pln pun pln pun pln pun pln kwd pun pln pun,1778 ms,29700 KB,796
32528967,2017-11-21 18:03:00,yugle7,797C - Minimal string,Python 3,Accepted,9,101,"f  =   lambda  q :  ord ( q )   -   97 s ,  t ,  u  =  input (),   [],   '' k  =   [ 0 ]   *   26 for  i  in  s :  k [ f ( i )]   +=   1 for  i  in  s :     t . append ( i )     k [ f ( i )]   -=   1      while  t  and  sum ( k [: f ( t [- 1 ])])   ==   0 :  u  +=  t . pop () print ( u )",pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln str pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun kwd pun pln pun,358 ms,1300 KB,797
31201229,2017-10-10 22:08:00,yugle7,798C - Mike and gcd problem,Python 3,Accepted,12,121,"s ,  i ,  n  =   0 ,   0 ,  int ( input ()) t  =  list ( map ( int ,  input (). split ()))   +   [ 0 ] while  i  <  n :      if  t [ i ]   %   2 :         i  +=   1         s  +=   2   -  t [ i ]   %   2     i  +=   1 b  =  t [ 0 ] for  a  in  t :      while  a :  a ,  b  =  b  %  a ,  a      if  b  ==   1 :   break print ( 'YES' ,   0   if  b  >   1   else  s )",pln pun pln pun pln pun pln lit pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln lit pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln pun lit pun kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln lit pun pln kwd kwd pun str pun pln lit pln kwd pln pun pln lit pln kwd pln pun,171 ms,8200 KB,798
27048068,2017-05-12 09:26:00,eugalt,799C - Fountains,Python 3,Accepted,36,258,"import  operator   fc  =   [] fd  =   []   n ,  c ,  d  =  map ( int ,  input (). split ())   for  _  in  range ( n ):     b ,  p ,  m  =  input (). split ()     b ,  p  =  int ( b ),  int ( p )      if  m  ==   'C' :          if  p  <=  c :             fc . append (( b ,  p ))      else :          if  p  <=  d :             fd . append (( b ,  p ))   fc . sort ( key = operator . itemgetter ( 0 ),  reverse = True ) fd . sort ( key = operator . itemgetter ( 0 ),  reverse = True )   mx  =  fc [ 0 ][ 0 ]   +  fd [ 0 ][ 0 ]   if  fc  and  fd  else   0   for  l ,  m  in   (( fc ,  c ),   ( fd ,  d )):      for  i  in  range ( len ( l )   -   1 ):         b1 ,  p1  =  l [ i ]          if  b1  *   2   <=  mx :              break          for  j  in  range ( i  +   1 ,  len ( l )):             b2 ,  p2  =  l [ j ]              if  b1  +  b2  <=  mx :                  break              if  p1  +  p2  <=  m :                 mx  =  b1  +  b2                  break   print ( mx )",kwd pln pln pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln str pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun kwd pun pln pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln kwd pln kwd pln kwd pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln kwd pun pln pun,390 ms,8900 KB,799
31153031,2017-10-08 22:23:00,yugle7,772A - Voltage Keepsake,Python 3,Accepted,36,258,"import  operator   fc  =   [] fd  =   []   n ,  c ,  d  =  map ( int ,  input (). split ())   for  _  in  range ( n ):     b ,  p ,  m  =  input (). split ()     b ,  p  =  int ( b ),  int ( p )      if  m  ==   'C' :          if  p  <=  c :             fc . append (( b ,  p ))      else :          if  p  <=  d :             fd . append (( b ,  p ))   fc . sort ( key = operator . itemgetter ( 0 ),  reverse = True ) fd . sort ( key = operator . itemgetter ( 0 ),  reverse = True )   mx  =  fc [ 0 ][ 0 ]   +  fd [ 0 ][ 0 ]   if  fc  and  fd  else   0   for  l ,  m  in   (( fc ,  c ),   ( fd ,  d )):      for  i  in  range ( len ( l )   -   1 ):         b1 ,  p1  =  l [ i ]          if  b1  *   2   <=  mx :              break          for  j  in  range ( i  +   1 ,  len ( l )):             b2 ,  p2  =  l [ j ]              if  b1  +  b2  <=  mx :                  break              if  p1  +  p2  <=  m :                 mx  =  b1  +  b2                  break   print ( mx )",kwd pln pln pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln str pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun kwd pun pln pln pun pln pun lit pun lit pun pln pun pln pun lit pun lit pun pln kwd pln kwd pln kwd pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln kwd pun pln pun,592 ms,10300 KB,801
39186410,2018-06-12 12:25:00,Paixao#,803C - Maximal GCD,Python 3,Accepted,16,135,"n , k = map ( int , input (). split ()) m =( 1 + k )* k // 2 if  n < m : 	 print (- 1 ) 	exit ( 0 ) def  ans ( g ): 	 if  n < g * m : return 	r = n - m * g 	 for  _  in  range ( 1 , k ): print ( _ * g , end = ' ' ) 	 print ( k * g + r ) 	exit ( 0 ) for  d  in  range ( 1 , 200000 ): 	 if  n % d == 0 : 		ans ( n // d ) for  d  in  range ( 200000 , 0 ,- 1 ): 	 if  n % d == 0 : ans ( d )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit kwd pln pun pln pun pln kwd pun lit pun pln pun lit pun kwd pln pun pln pun pln kwd pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pln kwd pln kwd pln pun lit pun pln pun kwd pun pln pun pln pun pln pun str pun pln kwd pun pln pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun lit pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun lit pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pun,576 ms,100 KB,803
27686146,2017-06-09 12:28:00,frankbozar,804A - Find Amir,Python 3,Accepted,16,135,"n , k = map ( int , input (). split ()) m =( 1 + k )* k // 2 if  n < m : 	 print (- 1 ) 	exit ( 0 ) def  ans ( g ): 	 if  n < g * m : return 	r = n - m * g 	 for  _  in  range ( 1 , k ): print ( _ * g , end = ' ' ) 	 print ( k * g + r ) 	exit ( 0 ) for  d  in  range ( 1 , 200000 ): 	 if  n % d == 0 : 		ans ( n // d ) for  d  in  range ( 200000 , 0 ,- 1 ): 	 if  n % d == 0 : ans ( d )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit kwd pln pun pln pun pln kwd pun lit pun pln pun lit pun kwd pln pun pln pun pln kwd pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pln kwd pln kwd pln pun lit pun pln pun kwd pun pln pun pln pun pln pun str pun pln kwd pun pln pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun lit pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun lit pun lit pun pln kwd pln pun pln pun lit pun pln pun pln pun,61 ms,0 KB,805
27011151,2017-05-11 14:37:00,frankbozar,806C - Prairie Partition,Python 3,Accepted,40,246,"def  ctz ( x ): 	 return   0   if  x & 1   else  ctz ( x >> 1 )+ 1   def  clz ( x ): 	 return  len ( bin ( x ))- 3   def  ok ( a ,  b ): 	p = 0 	 for  i  in  range ( 40 ,   - 1 ,   - 1 ): 		p += a [ i ]- a [ i + 1 ]- b [ i ] 		 if  p < 0 : 			 return   False 	 return   True   a =[ 0 ]* 50 b = a [:] c =[] input ()   for  x  in  map ( int ,  input (). split ()): 	 if  x ==( x &- x ): 		a [ ctz ( x )]+= 1 	 else : 		b [ clz ( x )]+= 1   while  a [ 0 ]> 0 : 	 for  i  in  range ( 40 ): 		 if  a [ i ]< a [ i + 1 ]: 			b [ i + 1 ]+= a [ i + 1 ]- a [ i ] 			a [ i + 1 ]= a [ i ] 	 if   not  ok ( a ,  b ): 		 break 	c +=[ a [ 0 ]] 	a [ 0 ]-= 1 	b [ 0 ]+= 1   if  c ==[]: 	 print (- 1 ) else : 	 print (* reversed ( c ))",kwd pln pun pln pun pln kwd pln lit pln kwd pln pun lit pln kwd pln pun pln pun lit pun lit pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln pun lit pun pln kwd pln kwd pln kwd pln kwd pln pln pun lit pun lit pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pun pln pun pln pun pln pun lit pln kwd pln pun lit pun lit pun pln kwd pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun lit pun lit pln pun lit pun lit pln kwd pln pun pln kwd pun lit pun kwd pun pln kwd pun pln pun pln pun,1216 ms,5900 KB,806
31167059,2017-10-09 15:32:00,yugle7,773A - Success Rate,Python 3,Accepted,40,246,"def  ctz ( x ): 	 return   0   if  x & 1   else  ctz ( x >> 1 )+ 1   def  clz ( x ): 	 return  len ( bin ( x ))- 3   def  ok ( a ,  b ): 	p = 0 	 for  i  in  range ( 40 ,   - 1 ,   - 1 ): 		p += a [ i ]- a [ i + 1 ]- b [ i ] 		 if  p < 0 : 			 return   False 	 return   True   a =[ 0 ]* 50 b = a [:] c =[] input ()   for  x  in  map ( int ,  input (). split ()): 	 if  x ==( x &- x ): 		a [ ctz ( x )]+= 1 	 else : 		b [ clz ( x )]+= 1   while  a [ 0 ]> 0 : 	 for  i  in  range ( 40 ): 		 if  a [ i ]< a [ i + 1 ]: 			b [ i + 1 ]+= a [ i + 1 ]- a [ i ] 			a [ i + 1 ]= a [ i ] 	 if   not  ok ( a ,  b ): 		 break 	c +=[ a [ 0 ]] 	a [ 0 ]-= 1 	b [ 0 ]+= 1   if  c ==[]: 	 print (- 1 ) else : 	 print (* reversed ( c ))",kwd pln pun pln pun pln kwd pln lit pln kwd pln pun lit pln kwd pln pun pln pun lit pun lit pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln pun lit pun pln kwd pln kwd pln kwd pln kwd pln pln pun lit pun lit pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pun pln pun pln pun pln pun lit pln kwd pln pun lit pun lit pun pln kwd pln kwd pln pun lit pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun lit pun lit pln pun lit pun lit pln kwd pln pun pln kwd pun lit pun kwd pun pln kwd pun pln pun pln pun,77 ms,0 KB,807
29204440,2017-08-05 00:22:00,Qumeric,808C - Tea Party,Python 3,Accepted,14,104,"n , w = map ( int , input (). split ()) a = list ( map ( int , input (). split ())) ans =[( x + 1 )// 2   for  x  in  a ] w -= sum ( ans ) if  w < 0 :      print (- 1 )     exit ( 0 ) while  w > 0 :     i = a . index ( max ( a ))      while  w > 0   and  a [ i ]!= ans [ i ]:         ans [ i ]+= 1         w -= 1     a [ i ]= 0 print (* ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln kwd pln pun pln pun pln pun pln pun kwd pln pun lit pun pln kwd pun lit pun pln pun lit pun kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit pln pun pln pun lit kwd pun pln pun,62 ms,4500 KB,808
28477946,2017-07-12 18:17:00,Vasiliy_48,810C - Do you want a date?,Python 3,Accepted,9,84,"inf  =   1000000007 n  =  int ( input ()) a  =  list ( map ( int ,  input (). split ())) a . sort () ans , st2  =   0 , 0 for  i  in  range ( n ):     ans  +=   ( st2  *  a [ i ]   -  st2  *  a [ n - i - 1 ])     st2  =   ( st2 * 2   +   1 )   %  inf print ( ans % inf )",pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pln pun pln lit pun pln pun pln kwd pun pln pun pln pun,592 ms,27600 KB,810
46048185,2018-11-22 07:52:00,Babyrain,812C - Sagheer and Nubian Market,Python 3,Accepted,15,116,"R = lambda :  list ( map ( int , input (). split ()))   n , s = R () a = R ()   def  kill ( m ):     t = sorted ([ a [ i ]+( i + 1 )* m  for  i  in  range ( n )])     re = sum ( t [: m ])      return   0   if  re > s  else  re l , r = 0 , n while  l < r :     m =( l + r + 1 )// 2      if  kill ( m ):  l = m      else :  r = m - 1 print ( l , kill ( l ))",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln lit pln kwd pln pun pln kwd pln pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln pun pln pun pln pun pln pln kwd pun pln pun pln pun lit kwd pun pln pun pln pun pln pun,873 ms,7200 KB,812
28055838,2017-06-26 14:00:00,Zombarian,815A - Karen and Game,Python 3,Accepted,15,116,"R = lambda :  list ( map ( int , input (). split ()))   n , s = R () a = R ()   def  kill ( m ):     t = sorted ([ a [ i ]+( i + 1 )* m  for  i  in  range ( n )])     re = sum ( t [: m ])      return   0   if  re > s  else  re l , r = 0 , n while  l < r :     m =( l + r + 1 )// 2      if  kill ( m ):  l = m      else :  r = m - 1 print ( l , kill ( l ))",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln lit pln kwd pln pun pln kwd pln pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln pun pln pun pln pun pln pln kwd pun pln pun pln pun lit kwd pun pln pun pln pun pln pun,311 ms,6100 KB,816
27920413,2017-06-20 11:32:00,andreamaf,817C - Really Big Numbers,Python 3,Accepted,3,55,"n ,  s  =  map ( int ,  input (). split ()) print ( max ( n - min ( i  for  i  in  range ( s ,  s + 200 )                  if  i - sum ( map ( int ,  str ( i )))   >=  s )+ 1 ,   0 ))",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln lit pun,62 ms,0 KB,817
28109871,2017-06-28 10:07:00,BinZhao,819A - Mister B and Boring Game,Python 3,Accepted,3,55,"n ,  s  =  map ( int ,  input (). split ()) print ( max ( n - min ( i  for  i  in  range ( s ,  s + 200 )                  if  i - sum ( map ( int ,  str ( i )))   >=  s )+ 1 ,   0 ))",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln lit pun,62 ms,5400 KB,820
44328141,2018-10-14 20:00:00,nowyyz,821C - Okabe and Boxes,Python 3,Accepted,13,81,n = int ( input ()) s =[] j = 0 a = 0 for  i  in  range ( 2 * n ):     q = input ()      if  q == 'remove' :          if  len ( s )> 0 :             x = s . pop ()              if  x != j + 1 : a += 1 ; s =[]         j += 1      else : s . append ( int ( q [ 3 :])) print ( a ),pln pun pln pun pln pun pln pun pln pun lit pln pun lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln kwd pln pun str pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pln kwd pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun,1123 ms,7300 KB,821
32529897,2017-11-21 18:42:00,RccHD,"822C - Hacker, pack your bags!",Python 3,Accepted,18,198,"f  =   lambda :  map ( int ,  input (). split ()) n ,  x  =  f () s  =   [[]   for  i  in  range ( x  -   1 )] for  d  in  range ( n ):     l ,  r ,  c  =  f ()      if  r  -  l  <  x  -   1 :  s [ r  -  l ]   +=   [[ l , c ]] for  t  in  s :  t . sort ( key = lambda  q :  q [ 0 ]) m  =   3e9 for  d ,  t  in  enumerate ( s ):     D  =  x  -   2   -  d     i ,  T  =   0 ,  s [ D ]     M  =   3e9      for  l ,  c  in  t :          while  i  <  len ( T )   and  l  >  T [ i ][ 0 ]   +  D :             M  =  min ( M ,  T [ i ][ 1 ])             i  +=   1         m  =  min ( m ,  c  +  M ) print (- 1   if  m  ==   3e9   else  m )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln lit kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pln pun pln pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun kwd pun lit pln kwd pln pun pln lit pln kwd pln pun,1653 ms,27500 KB,822
28600051,2017-07-16 18:14:00,eddy1021,825C - Multi-judge Solving,Python 3,Accepted,10,60,"R = lambda : list ( map ( int , input (). split ())) n , k = R () a = sorted ( R ()) b = 0 for  i  in  a :    while  i > k + k :     k += k     b += 1   k = max ( k , i ) print ( b )",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun lit pln pun pln pun pln pun pln pun kwd pun pln pun,62 ms,4800 KB,825
28554389,2017-07-14 20:29:00,Zombarian,831C - Jury Marks,Python 3,Accepted,13,72,"o = lambda :[ int ( f ) for  f  in  input (). split ()] k , n = o () a = o () b = o () s =[] for  x  in  b :     t = x     t1 = set ()      for  y  in  a :         t -= y         t1 . add ( t )     s +=[ t1 ] print ( len ( set . intersection (* s )))",pln pun kwd pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pln pun pln pun pln kwd pln kwd pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun,1684 ms,224700 KB,831
28969581,2017-07-29 14:57:00,yura_antonych,832C - Strange Radiation,Python 3,Accepted,79,633,"import  math leftpeople  =  set () rightpeople  =  set ()   n ,  vl  =  map ( int ,  input (). split ())   def  leftinterval ( x0 ,  v0 ,  t ):      if  x0  /  v0  <=  t :          return   ( 0 ,   10 ** 6 )      if  x0  /   ( vl  +  v0 )   >  t :          return   (- 1 ,   - 2 )     leftbound  =  x0     rightbound  =   ( vl  *  vl  -  v0  *  v0 )   *  t  +  x0  *  v0     rightbound  /=  vl     rightbound  =  int ( rightbound )      if  rightbound  >   10 ** 6 :         rightbound  =   10 ** 6      return   ( leftbound ,  rightbound ) def  rightinterval ( x0 ,  v0 ,  t ):      if   ( 10 ** 6   -  x0 )   /  v0  <=  t :          return   ( 0 ,   10 ** 6 )      if   ( 10 ** 6   -  x0 )   /   ( v0  +  vl )   >  t :          return   (- 1 ,   - 2 )     rightbound  =  x0     leftbound  =  v0  *  x0  +   ( 10 ** 6 )   *   ( vl  -  v0 )   -  t  *   ( vl  *  vl  -  v0  *  v0 )     leftbound  /=  vl     leftbound  =  math . ceil ( leftbound )      if ( leftbound  <   0 ):         leftbound  =   0      return   ( leftbound ,  rightbound )   def  check ( t ):     events  =   []      for  item  in  leftpeople :         temp  =  leftinterval ( item [ 0 ],  item [ 1 ],  t )          if ( temp [ 0 ]   >  temp [ 1 ]):              continue         events . append (( temp [ 0 ],   0 ,   0 ))         events . append (( temp [ 1 ],   1 ,   0 ))          if ( temp [ 1 ]   -  temp [ 0 ]   ==   10 ** 6 ):              break      for  item  in  rightpeople :         temp  =  rightinterval ( item [ 0 ],  item [ 1 ],  t )          if ( temp [ 0 ]   >  temp [ 1 ]):              continue         events . append (( temp [ 0 ],   0 ,   1 ))         events . append (( temp [ 1 ],   1 ,   1 ))          if ( temp [ 1 ]   -  temp [ 0 ]   ==   10 ** 6 ):              break     events . sort ()     opened  =   [ 0 ,   0 ]      for  item  in  events :         color  =  item [ 2 ]         action  =  item [ 1 ]          if  action  ==   0 :              if  opened [( color  +   1 )   %   2 ]   >   0 :                  return   True             opened [ color ]   +=   1          else :             opened [ color ]   -=   1      return   False   for  i  in  range ( n ):     a ,  b ,  c  =  map ( int ,  input (). split ())      if  c  ==   1 :         leftpeople . add (( a ,  b ))      if  c  ==   2 :         rightpeople . add (( a ,  b ))   l  =   0 r  =   1e9 for  i  in  range ( 50 ):     m  =   ( l  +  r )   /   2      if ( check ( m )):         r  =  m      else :         l  =  m   print ( m )",kwd pln pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun lit pun pln lit pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pln pun pln pun pln pun pln kwd pln pun pln lit pun lit pun pln pun pln lit pun lit pln kwd pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln kwd pln pun lit pun lit pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln lit pun lit pun pln kwd pln pun lit pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln kwd pun pln pun pln lit pun pln pun pln lit pln kwd pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln kwd pun pln pun lit pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pun pln lit pun pln lit pun pln pun pln pun pln pun lit pun pln lit pun pln lit pun pln kwd pun pln pun lit pun pln pun pln pun lit pun pln pun pln lit pun lit pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln kwd pun pln pun lit pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pun pln lit pun pln lit pun pln pun pln pun pln pun lit pun pln lit pun pln lit pun pln kwd pun pln pun lit pun pln pun pln pun lit pun pln pun pln lit pun lit pun pln kwd pln pun pln pun pln pun pln pun lit pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln pun pln lit pun pln kwd pln pun pln pun pln lit pun pln pun pln lit pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pln kwd pun pln pun,1091 ms,15200 KB,832
29322973,2017-08-10 12:45:00,freedom_dr,835C - Star sky,Python 3,Accepted,22,302,"n ,  q ,  c  =  map ( int , input (). split ())   stars  =   [  list (  map ( int , input (). split ())   )   for  i  in  range ( n )] queries  =   [  list (  map ( int , input (). split ())   )   for  i  in  range ( q )]   prec  =   [[[ 0   for  y  in  range ( 101 )] for  x  in  range ( 101 )]   for  i  in  range ( c + 1 )]   #0, c for  x ,  y ,  s  in  stars :    for  t  in  range ( c + 1 ):     prec [ t ][ x ][ y ]   +=  s + t  if  s + t  <=  c  else  s + t -( c + 1 )   for  s  in  range ( len ( prec )):    for  x  in  range ( len ( prec [ s ])):      for  y  in  range ( len ( prec [ s ][ x ])):        if  x  and  y :         prec [ s ][ x ][ y ]   +=  prec [ s ][ x - 1 ][ y ]+ prec [ s ][ x ][ y - 1 ]- prec [ s ][ x - 1 ][ y - 1 ]       for  t ,  x1 ,  y1 ,  x2 ,  y2  in  queries :   s  =  t %( c + 1 )   res  =   (  prec [ s ][ x2 ][ y2 ]- prec [ s ][ x1 - 1 ][ y2 ]- prec [ s ][ x2 ][ y1 - 1 ]+ prec [ s ][ x1 - 1 ][ y1 - 1 ]   )    print ( res )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pln pun pln pun lit pln kwd pln kwd pln pun lit pun kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun pln pun lit pun pln com kwd pln pun pln pun pln kwd pln pun pln kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun pln pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln kwd pun pln pun,1887 ms,25800 KB,835
31506491,2017-10-19 14:46:00,yugle7,837C - Two Seals,Python 3,Accepted,14,195,"f  =   lambda :  map ( int ,  input (). split ())   n ,  a ,  b  =  f () c  =  a  +  b   s ,  t  =   0 ,   [ list ( f ())   for  i  in  range ( n )] h  =   [( i ,  j ,  d )   for  i  in   [ 0 ,   1 ]   for  j  in   [ 0 ,   1 ]   for  d  in   [ a ,  b ]]   for  k ,  u  in  enumerate ( t ,   1 ):      for  v  in  t [ k :]:          if   not  all ( u [ i ]   +  v [ j ]   >  d  or  max ( u [ 1   -  i ],  v [ 1   -  j ])   >  c  -  d  for  i ,  j ,  d  in  h ):             s  =  max ( s ,  u [ 0 ]   *  u [ 1 ]   +  v [ 0 ]   *  v [ 1 ])   print ( s )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln lit pun pln kwd pln kwd pln pun lit pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pun pln pun,62 ms,5400 KB,837
46903914,2018-12-11 16:16:00,Silky_Littleraisin,839C - Journey,Python 3,Accepted,20,163,"n = int ( input ()) t ={ x :[]   for  x  in  range ( 1 , n + 1 )} v = set () s = 0 q =[( 1 , 1 , 0 )] for  _  in  range ( n - 1 ):     a , b = map ( int , input (). split ())     t [ a ]. append ( b )     t [ b ]. append ( a ) while  q :     u , cnt , num = q . pop ()     v . add ( u )     dep = 0      for  i  in  t [ u ]:          if  i  not   in  v : dep += 1      if  dep == 0 : s += cnt * num      else :          for  i  in  t [ u ]:              if  i  not   in  v : q . append (( i , cnt / dep , num + 1 )) print ( s )",pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pln pun lit pun lit pun lit pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun lit pln kwd pln pun lit pun pln pun pln pun pln pln kwd pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun,545 ms,18700 KB,839
39954705,2018-07-04 15:19:00,Ali_Pi#,840A - Leha and Function,Python 3,Accepted,20,163,"n = int ( input ()) t ={ x :[]   for  x  in  range ( 1 , n + 1 )} v = set () s = 0 q =[( 1 , 1 , 0 )] for  _  in  range ( n - 1 ):     a , b = map ( int , input (). split ())     t [ a ]. append ( b )     t [ b ]. append ( a ) while  q :     u , cnt , num = q . pop ()     v . add ( u )     dep = 0      for  i  in  t [ u ]:          if  i  not   in  v : dep += 1      if  dep == 0 : s += cnt * num      else :          for  i  in  t [ u ]:              if  i  not   in  v : q . append (( i , cnt / dep , num + 1 )) print ( s )",pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pln pun lit pun lit pun lit pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun lit pln kwd pln pun lit pun pln pun pln pun pln pln kwd pun pln kwd pln kwd pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pun pln pun,1060 ms,32600 KB,841
29792125,2017-08-25 23:45:00,eugalt,844C - Sorting by Subsequences,Python 3,Accepted,13,100,"n  =  int ( input ()) a  =  sorted ( zip ( map ( int ,  input (). split ()),  range ( n ))) s  =   [] for  i  in  range ( n ):      if  a [ i ]:         s . append ([])          while  a [ i ]:             s [- 1 ]. append ( i  +   1 )             a [ i ],  i  =   None ,  a [ i ][ 1 ]              print ( len ( s )) for  l  in  s :      print ( len ( l ),   * l )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pun pln pun pln pun lit pun pln kwd pun pln pun pln pun kwd pln kwd pln pun pln kwd pun pln pun pln pun pln pun pln pun,795 ms,14100 KB,844
31188350,2017-10-10 14:44:00,yugle7,845C - Two TVs,Python 3,Accepted,11,87,"s  =   [ tuple ( map ( int ,  input (). split ()))   for  i  in  range ( int ( input ()))] s . sort ( key = lambda  q :  q [ 0 ]) a  =  b  =   - 1 q  =   'YES' for  l ,  r  in  s :      if  a  >=  l :         q  =   'NO'          break     a  =  r      if  b  <  a :  a ,  b  =  b ,  a print ( q )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln pun pln pun lit pln pun pln str kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln str pln kwd pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun,842 ms,18800 KB,845
31483530,2017-10-18 17:30:00,"SESC + Kamensk: 111222333, AliceG#",847C - Sum of Nestings,Python 3,Accepted,12,138,"from  math  import  ceil   n ,  k  =  map ( int ,  input (). split ()) if  n  *   ( n  -   1 )   //   2   <  k :      print ( 'Impossible' )     exit ()   x  =  ceil ((( 8   *  k  +   1 )   **   0.5   +   1 )   /   2 )   p  =  x  *   ( x  -   1 )   //   2   -  k   print ( '()'   *   ( n  -  x )   +   '('   *   ( x  -   1 )   +   ')'   *  p  +   '()'   +   ')'   *   ( x  -  p  -   1 ))",kwd pln kwd pln pln pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln kwd pun str pun pln pun pln pln pun pln pun lit pln pun pln pun pln lit pun pln pun pln lit pln pun pln lit pun pln pun pln lit pun pln pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pln kwd pun str pln pun pln pun pln pun pln pun pln pun pln str pln pun pln pun pln pun pln lit pun pln pun pln str pln pun pln pun pln str pln pun pln str pln pun pln pun pln pun pln pun pln lit pun,77 ms,7200 KB,847
29984079,2017-09-01 17:39:00,tsukuyomi,849C - From Y to Y,Python 3,Accepted,11,49,"k  =  int ( input ()) ans  =   """" for  ch  in   ""abcdefghijklmnopqrstuvwxyz"" : 	cost  =   0 	 while  k - cost >= 0 : 		k -= cost 		cost += 1 		ans += ch 	 if   not  k : 		 break print ( ans )",pln pun pln pun pln pun pln pun pln str kwd pln kwd pln str pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pln pun lit pln pun pln pln kwd pln kwd pln pun pln kwd kwd pun pln pun,62 ms,0 KB,849
33475754,2017-12-21 13:00:00,Jiburiru,850A - Five Dimensional Points,Python 3,Accepted,11,49,"k  =  int ( input ()) ans  =   """" for  ch  in   ""abcdefghijklmnopqrstuvwxyz"" : 	cost  =   0 	 while  k - cost >= 0 : 		k -= cost 		cost += 1 		ans += ch 	 if   not  k : 		 break print ( ans )",pln pun pln pun pln pun pln pun pln str kwd pln kwd pln str pun pln pun pln lit pln kwd pln pun pln pun lit pun pln pun pln pln pun lit pln pun pln pln kwd pln kwd pln pun pln kwd kwd pun pln pun,62 ms,5600 KB,851
66518909,2019-12-08 23:41:00,Tosic,852C - Property,Python 3,Accepted,15,135,"n  =  int ( input ()) a  =  input (). split () for  i  in  range ( n ):     a [ i ]   =  int ( a [ i ]) b  =   [] for  i  in  range ( 0 ,  n - 1 ):     b . append (( a [ i ]-( n - a [ i + 1 ]),  i )) b . append (( a [ n - 1 ]-( n - a [ 0 ]),  n - 1 )) b  =  sorted ( b ) ans  =  n *[ 0 ] for  i  in  range ( n ):      # the line segment at index b[i][1]     ans [ b [ i ][ 1 ]]   =  i for  i  in  range ( n ):      print ( ans [ i ],  end  =   ' ' )",pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln com pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln str pun,296 ms,7000 KB,852
30809659,2017-09-28 18:53:00,yugle7,858C - Did you mean...,Python 3,Accepted,10,73,"k  =   0 t  =  y  =  z  =   '' for  x  in  input ():     k  =   0   if  x  in   'aeiou'   else  k  +   1      if  k  >   2   and   not   ( x  ==  y  ==  z ):         t  +=   ' '         k  =   1     y ,  z  =  x ,  y     t  +=  x print ( t )",pln pun pln lit pln pun pln pun pln pun pln str kwd pln kwd pln pun pln pun pln lit pln kwd pln kwd pln str pln kwd pln pun pln lit pln kwd pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln str pln pun pln lit pln pun pln pun pln pun pln pln pun pln kwd pun pln pun,62 ms,100 KB,858
55119884,2019-06-05 13:33:00,Annvv,859C - Pie Rules,Python 3,Accepted,5,55,"input (); a = b = 0 for  i , x  in  enumerate ( list ( map ( int , input (). split ()))[::- 1 ]):      if  b > a + x : a += x      else : a , b = b , a + x print ( a , b )",pln pun pln pun pln pun lit kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun,108 ms,0 KB,859
30816225,2017-09-29 00:19:00,yugle7,858E - Tests Renumeration,Python 3,Accepted,5,55,"input (); a = b = 0 for  i , x  in  enumerate ( list ( map ( int , input (). split ()))[::- 1 ]):      if  b > a + x : a += x      else : a , b = b , a + x print ( a , b )",pln pun pln pun pln pun lit kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun,545 ms,16900 KB,860
30809659,2017-09-28 18:53:00,yugle7,858C - Did you mean...,Python 3,Accepted,5,55,"input (); a = b = 0 for  i , x  in  enumerate ( list ( map ( int , input (). split ()))[::- 1 ]):      if  b > a + x : a += x      else : a , b = b , a + x print ( a , b )",pln pun pln pun pln pun lit kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun,62 ms,100 KB,861
30565040,2017-09-21 04:19:00,winstontsai,862C - Mahmoud and Ehab and the xor,Python 3,Accepted,16,128,"n , x = map ( int , input (). split ()) if ( n == 1 ):    print ( ""YES"" )    print ( x ) elif ( n == 2 ):    if ( x ): print ( ""YES\n0"" , x )    else : print ( 'NO' ) else :    print ( ""YES"" )   y = 0 ; p = 1 << 17    for  i  in  range ( 1 , n - 2 ):      print ( i , end = ' ' )     y ^= i    if  y - x : print ( 0 , p , p ^ x ^ y )    else : print ( p , p * 2 , p ^ p * 2 )  ",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun lit pun pln kwd pun str pun pln kwd pun pln pun kwd pun pln pun lit pun pln kwd pun pln pun kwd pun str pun pln pun pln kwd pun kwd pun str pun kwd pun pln kwd pun str pun pln pun lit pun pln pun lit pun lit pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pun pln pun pln pun str pun pln pun pln pln kwd pln pun pln pun kwd pun lit pun pln pun pln pun pln pun pln pun pln kwd pun kwd pun pln pun pln pun lit pun pln pun pln pun lit pun pln,389 ms,400 KB,862
39851277,2018-07-02 00:03:00,Ali_Pi#,863C - 1-2-3,Python 3,Accepted,12,211,"f  =   lambda :  list ( map ( int , input (). split ())) g  =   lambda :   [[ 0 ]   *   4 ]   +   [[ 0 ]   +  f ()   for  i  in  range ( 3 )] h  =   lambda  x ,  y :  x  -   1   ==  y  %   3 t  =   lambda  a ,  b ,  u ,  v :   ( A [ a ][ b ],  B [ a ][ b ],  u  +  h ( a ,  b ),  v  +  h ( b ,  a )) k ,  a ,  b  =  f () p  =   2520 s ,  d  =  divmod ( k ,  p ) A ,  B  =  g (),  g () u  =  v  =  x  =  y  =   0 for  j  in  range ( d ):  a ,  b ,  u ,  v  =  t ( a ,  b ,  u ,  v ) for  i  in  range ( p ):  a ,  b ,  x ,  y  =  t ( a ,  b ,  x ,  y ) print ( u  +  x  *  s ,  v  +  y  *  s )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun lit pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln lit pln pun pln pun pln lit pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun,109 ms,0 KB,863
30897334,2017-10-01 06:19:00,Jerry2001,864C - Bus,Python 3,Accepted,10,101,"a ,  b ,  f ,  k  =  map ( int ,  input (). split ()) s ,  t  =   0 ,  b  -  f g  =  f  =  a  -  f for  i  in  range ( k ):      if  t  <   0 :   break      if  k  -   1   -  i :  g  +=  f      if  t  <  g :  s ,  t  =  s  +   1 ,  b     t  -=  g     g  =  f  =  a  -  f print (- 1   if  t  <   0   else  s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln lit pun pln kwd pln kwd pln pun pln lit pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pln pun pln pln pun pln pun pln pun pln kwd pun lit pln kwd pln pun pln lit pln kwd pln pun,62 ms,0 KB,864
30916557,2017-10-01 21:44:00,yugle7,867C - Ordering Pizza,Python 3,Accepted,38,298,"f  =   lambda :  map ( int ,  input (). split ())   n ,  s  =  f () u ,  v  =   [],   []   for  i  in  range ( n ):     d ,  a ,  b  =  f ()      if  a  >  b :         u . append ([ a ,  b ,  d ])      else :         v . append ([ b ,  a ,  d ])   def  g ( t ):     t . sort ( key = lambda  q :  q [ 1 ]   -  q [ 0 ])          m  =  sum ( d  for  a ,  b ,  d  in  t )     k  =  s  *   ( m  //  s )     n  =  m  -  k       x  =  y  =  z  =   0      for  a ,  b ,  d  in  t :          if  k  >=  d :             k  -=  d             z  +=  d  *  a          elif  k :             z  +=  k  *  a             x  =   ( d  -  k )   *  a             y  =   ( d  -  k )   *  b             k  =   0          else :             x  +=  d  *  a             y  +=  d  *  b        return  x ,  y ,  z ,  n   a ,  b  =  g ( u ),  g ( v ) d  =  a [ 0 ]   +  b [ 0 ]   if  a [ 3 ]   +  b [ 3 ]   >  s  else   max ( a [ 0 ]   +  b [ 1 ],  a [ 1 ]   +  b [ 0 ]) print ( a [ 2 ]   +  b [ 2 ]   +  d )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pln pun pln lit pln kwd pun pln pun pln pun pln pln pun pln pun pln pln pln kwd pln pun pln pun pln pun pln pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun kwd pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun,577 ms,13600 KB,867
68737569,2020-01-14 00:15:00,nealzane,868C - Qualification Rounds,Python 3,Accepted,11,119,"n ,  m  =  map ( int ,  input (). split ()) c  =   [ 0 ]   *   16 for  _  in  range ( n ):   c [ int ( '' . join ( input (). split ()),   2 )]   +=   1 yes  =  c [ 0 ] for  i  in  range ( 1   <<  m ):    if  c [ i ]:      for  j  in  range ( i  +   1 ,   1   <<  m ):        if   0   ==   ( i  &  j )   and  c [ j ]:         yes  =   1 print ( 'YES'   if  yes  else   'NO' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun lit pun kwd pln kwd pln pun lit pln pun pln pun pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln lit pln pun pln pun pln kwd pln lit pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln lit kwd pun str pln kwd pln kwd pln str pun,249 ms,0 KB,868
32660960,2017-11-26 06:30:00,Jiburiru,869C - The Intriguing Obsession,Python 3,Accepted,9,97,"a , b , c = map ( int , input (). split ()) M = 998244353 def  C ( x ,  y ): 	z , t = 0 ,   1 	 for  i  in  range ( min ( x , y )+ 1 ): 		z += t 		t *=( x - i )*( y - i )* pow ( i + 1 , M - 2 , M )% M 	 return  z print ( C ( a , b )* C ( a , c )* C ( b , c )% M )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln pun pln pun pln pun pln pun lit pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pln kwd pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,842 ms,6200 KB,869
43294829,2018-09-23 15:52:00,Laurant,871A - Maximum splitting,Python 3,Accepted,9,97,"a , b , c = map ( int , input (). split ()) M = 998244353 def  C ( x ,  y ): 	z , t = 0 ,   1 	 for  i  in  range ( min ( x , y )+ 1 ): 		z += t 		t *=( x - i )*( y - i )* pow ( i + 1 , M - 2 , M )% M 	 return  z print ( C ( a , b )* C ( a , c )* C ( b , c )% M )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln pun pln pun pln pun pln pun lit pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pln kwd pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,1543 ms,0 KB,870
32761045,2017-11-29 00:11:00,nathantheinventor,"870E - Points, Lines and Ready-made Titles",Python 3,Accepted,9,97,"a , b , c = map ( int , input (). split ()) M = 998244353 def  C ( x ,  y ): 	z , t = 0 ,   1 	 for  i  in  range ( min ( x , y )+ 1 ): 		z += t 		t *=( x - i )*( y - i )* pow ( i + 1 , M - 2 , M )% M 	 return  z print ( C ( a , b )* C ( a , c )* C ( b , c )% M )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln pun pln pun pln pun pln pun lit pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pln kwd pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,1153 ms,22900 KB,871
43294829,2018-09-23 15:52:00,Laurant,871A - Maximum splitting,Python 3,Accepted,9,97,"a , b , c = map ( int , input (). split ()) M = 998244353 def  C ( x ,  y ): 	z , t = 0 ,   1 	 for  i  in  range ( min ( x , y )+ 1 ): 		z += t 		t *=( x - i )*( y - i )* pow ( i + 1 , M - 2 , M )% M 	 return  z print ( C ( a , b )* C ( a , c )* C ( b , c )% M )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln pun pln pun pln pun pln pun lit pun pln lit pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pln kwd pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,1543 ms,0 KB,872
32617328,2017-11-24 13:33:00,Jiburiru,873C - Strange Game On Matrix,Python 3,Accepted,11,116,"n , m , k = map ( int , input (). split ()) s , c = 0 , 0 R =[ list ( map ( int , input (). split ()))   for  i  in  range ( n )] for  i  in  zip (* R ):     a , b = 0 , 0      for  j  in  range ( n - k + 1 ):         f , h = sum ( i [ j : j + k ]), sum ( i [: j ])          if  f > a : a , b = f , h     s += a     c += b print ( s , c , end = ' ' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun lit pun lit pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln pun pln pln pun pln kwd pun pln pun pln pun pln pun str pun,78 ms,5600 KB,873
32377243,2017-11-17 15:03:00,Obsession,876E - National Property,Python 3,Accepted,11,116,"n , m , k = map ( int , input (). split ()) s , c = 0 , 0 R =[ list ( map ( int , input (). split ()))   for  i  in  range ( n )] for  i  in  zip (* R ):     a , b = 0 , 0      for  j  in  range ( n - k + 1 ):         f , h = sum ( i [ j : j + k ]), sum ( i [: j ])          if  f > a : a , b = f , h     s += a     c += b print ( s , c , end = ' ' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun lit pun lit pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln pun pln pln pun pln kwd pun pln pun pln pun pln pun str pun,904 ms,23100 KB,875
42117479,2018-08-26 13:40:00,cs1g,875A - Classroom Watch,Python 3,Accepted,11,116,"n , m , k = map ( int , input (). split ()) s , c = 0 , 0 R =[ list ( map ( int , input (). split ()))   for  i  in  range ( n )] for  i  in  zip (* R ):     a , b = 0 , 0      for  j  in  range ( n - k + 1 ):         f , h = sum ( i [ j : j + k ]), sum ( i [: j ])          if  f > a : a , b = f , h     s += a     c += b print ( s , c , end = ' ' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun lit pun lit pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln pun pln pln pun pln kwd pun pln pun pln pun pln pun str pun,108 ms,0 KB,876
39578047,2018-06-23 20:47:00,dvec,877C - Slava and tanks,Python 3,Accepted,3,44,"n  =  int ( input ()) a  =   [* range ( 2 , n + 1 , 2 )] print ( int ( n * 1.5 ), '\n' ,* a ,* range ( 1 , n + 1 , 2 ),* a )",pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit pun kwd pun pln pun pln pun lit pun str pun pln pun pln pun lit pun pln pun lit pun lit pun pln pun,389 ms,3000 KB,877
32815984,2017-11-30 23:22:00,yugle7,878A - Short Program,Python 3,Accepted,3,44,"n  =  int ( input ()) a  =   [* range ( 2 , n + 1 , 2 )] print ( int ( n * 1.5 ), '\n' ,* a ,* range ( 1 , n + 1 , 2 ),* a )",pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun lit pun kwd pun pln pun pln pun lit pun str pun pln pun pln pun lit pun pln pun lit pun lit pun pln pun,1450 ms,5500 KB,879
31942752,2017-11-01 11:28:00,duongtnhat,884C - Bertown Subway,Python 3,Accepted,12,116,"def  dfs ( u ): 	res  =   0 	 while  p [ u ]   !=   0 : 		res  +=   1 		p [ u ],  u  =   0 ,  p [ u ] 	 return  res 	 R = lambda : list ( map ( int , input (). split ())) n  =  R () p  =   [ 0 ]   +  R () val  =  sorted ([ dfs ( u )   for  u  in  p ]) print ( sum ( list ( map ( lambda  x :  x * x ,  val )))   +   2   *  val [- 1 ]   *  val [- 2 ])",kwd pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln lit pun pln pun pln pun pln kwd pln pln pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun lit pun pln pun pln pun lit pun,156 ms,7100 KB,884
32290946,2017-11-13 20:37:00,wibbn,886C - Petya and Catacombs,Python 3,Accepted,1,16,print ( int ( input ())+ 1 - len ( set ( input (). split ()))),kwd pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun,109 ms,14600 KB,886
32504686,2017-11-20 18:43:00,Jiburiru,887C - Solution for Cube,Python 3,Accepted,10,105,"a = list ( map ( int , input (). split ())) x , i = 0 , 0 w =[] while  i < 24 :     n = len ( set ( a [ i : i + 4 ]))      if  n == 1 : x += 1      elif  n == 2 : w . append ( set ( a [ i : i + 4 ]))     i += 4 w = set ( frozenset ( i )   for  i  in  w ) print ([ 'NO' , 'YES' ][  x == 2   and  len ( set ( w ))== 4 ])",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln pun kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun lit pun pln pun lit pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun kwd pun str pun str pun pln pun lit pln kwd pln pun pln pun pln pun lit pun,62 ms,0 KB,887
33330429,2017-12-17 09:26:00,Jiburiru,888C - K-Dominant Character,Python 3,Accepted,2,31,"s = input () print ( min ( max ( map ( len , s . split ( i )))+ 1   for  i  in  list ( set ( s ))))",pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun,77 ms,6500 KB,888
32290946,2017-11-13 20:37:00,wibbn,886C - Petya and Catacombs,Python 3,Accepted,2,31,"s = input () print ( min ( max ( map ( len , s . split ( i )))+ 1   for  i  in  list ( set ( s ))))",pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun,109 ms,14600 KB,890
33078030,2017-12-10 13:46:00,jp121039,891A - Pride,Python 3,Accepted,2,31,"s = input () print ( min ( max ( map ( len , s . split ( i )))+ 1   for  i  in  list ( set ( s ))))",pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun,1091 ms,5500 KB,892
35206794,2018-02-13 20:11:00,frank_expert,893C - Rumor,Python 3,Accepted,15,153,"R  =   lambda : map ( int , input (). split ()) n , m  =  R () pa  =   [ i  for  i  in  range ( n  +   1 )] T  =   [ 0 ]   +  list ( R ()) def  find ( i ): 	 while  i  !=  pa [ i ]: 		pa [ i ]   =  pa [ pa [ i ]] 		i  =  pa [ i ] 	 return  i for  _  in  range ( m ): 	x ,  y  =  map ( find ,  R ()) 	 if  T [ x ]   <  T [ y ]: 		x ,  y  =  y ,  x 	pa [ x ]   =  y print   ( sum ( T [ i ]   for  i  in  range ( n  +   1 )   if  pa [ i ]   ==  i ))",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun,607 ms,16400 KB,893
32494726,2017-11-20 12:33:00,Jiburiru,894C - Marco and GCD Sequence,Python 3,Accepted,6,64,"n = int ( input ()) a = list ( map ( int , input (). split ())) for  i  in  a :      if  i % a [ 0 ]: exit ( print (- 1 )) print ( 2 * n ) for  i  in  range ( n ): print ( a [ i ], a [ 0 ], end = ' ' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln kwd pln pun pln pun lit pun pln pun kwd pun lit pun kwd pun lit pun pln pun kwd pln kwd pln pun pln pun kwd pun pln pun pln pun pln pun lit pun pln pun str pun,77 ms,200 KB,894
33803433,2017-12-30 10:31:00,Jiburiru,895C - Square Subsets,Python 3,Accepted,12,168,"n  =  int ( input ()) s  =   [] p  =   [ 2 ,   3 ,   5 ,   7 ,   11 ,   13 ,   17 ,   19 ,   23 ,   29 ,   31 ,   37 ,   41 ,   43 ,   47 ,   53 ,   59 ,   61 ,   67 ] for  i  in  set ( map ( int ,  input (). split ())):     b  =   0      for  j  in  p :          while  i  %  j  ==   0 :             i  //=  j             b  ^=   1   <<  j      for  j  in  s : b = min ( b , b ^ j )      if  b > 0 : s . append ( b ) print ( pow ( 2 ,  n  -  len ( s ),   10   **   9   +   7 )   -   1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun pln lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln kwd pln pun pln pun pln lit pun pln pun pln pln pun pln lit pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun kwd pun pln pun lit pun pln pun pln pun pln pun pln lit pln pun pln lit pln pun pln lit pun pln pun pln lit pun,140 ms,10400 KB,895
32887874,2017-12-03 04:12:00,hicodeworld,897C - Nephren gives a riddle,Python 3,Accepted,28,343,"f0  =   ""What are you doing at the end of the world? Are you busy? Will you save us?"" P1  =   ""What are you doing while sending \"""" P2  =   ""\""? Are you busy? Will you send \"""" P3  =   ""\""?"" f  =   [] def  dfs ( n ,  k ): 	 if ( k  >  f [ n ]):   return   '.' 	 if ( n  ==   0 ):   return  f0 [ k  -   1 ] 	 if ( k  <=   34 ):   return  P1 [ k  -   1 ] 	 if ( k  <=  f [ n  -   1 ]   +   34 ):   return  dfs ( n  -   1 ,  k  -   34 ) 	 if ( k  <=  f [ n  -   1 ]   +   66 ):   return  P2 [ k  -  f [ n  -   1 ]   -   35 ] 	 if ( k  <=  f [ n  -   1 ]   *   2   +   66 ):   return  dfs ( n  -   1 ,  k  -  f [ n  -   1 ]   -   66 ) 	 return  P3 [ k  -  f [ n  -   1 ]   *   2   -   66   -   1 ] f . append ( 75 ) cnt  =   0 for  i  in  range ( 100 ): 	f . append ( f [ cnt ]   *   2   +   68 ) 	cnt  +=   1 	 q  =  int ( input ()) while  q  >   0 : 	q  -=   1 	n ,  k  =  map ( int ,  input (). split ( ' ' )) 	 while  n  >   70   and  k  >   34 : 		k  -=   34 		n  -=   1 	 if  n  >   0   and  k  <=   34 :   print ( P1 [ k  -   1 ],  end = '' ) 	 else :   print ( dfs ( n ,  k ),  end = '' )",pln pun pln str pln pun pln str pln pun pln str pln pun pln str pln pun pln pun kwd pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln kwd pln str pln kwd pun pln pun pln lit pun pln kwd pln pun pln pun pln lit pun pln kwd pun pln pun pln lit pun pln kwd pln pun pln pun pln lit pun pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln lit pun pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit pun pln pun pln lit pun pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln lit pln pun pln lit pun pln pun pln pun lit pun pln pun pln lit kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pun pln pun pln lit pln pln pun pln pun pln pun kwd pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun str pun pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln pun pln lit pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln kwd pun pln pun pln pun pln lit pun pln pun str pun pln kwd pun pln kwd pun pln pun pln pun pln pun pln pun str pun,358 ms,5400 KB,897
42402234,2018-09-02 21:08:00,Gauravg22,898C - Phone Numbers,Python 3,Accepted,27,189,"n = int ( input ());  d ={}   for  i  in  range ( n ): 	s ,  j ,  a = input (). split ( maxsplit = 2 ) 	l = list ( a . split ()) 	 if  s  in  d . keys (): 		d [ s ]+= l 	 else : 		d [ s ]= l   for  s  in  d . keys (): 	l1 =[] 	l = list ( set ( d [ s ])) 	d [ s ]= l 	 for  i  in  range ( len ( l )): 		q = l [ i ] 		l [ i ]= '0' 		 if ( any ( str . endswith ( q )   and  len ( q )< len ( str )   for  str  in  l )): 			 pass 		 else : 			l1 . append ( q ) 		l [ i ]= q 	d [ s ]= l1 print ( len ( list ( d . keys ()))) for  s  in  d . keys (): 	a = len ( d [ s ]) 	 print ( s , a ,* d [ s ])",pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun str pln kwd pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun,124 ms,0 KB,898
35170665,2018-02-12 09:48:00,Red4Ru,899C - Dividing the numbers,Python 3,Accepted,9,88,"n = int ( input ()) n2 , a , b =( n * n + n )// 2 ,[], 0 print ( n2 % 2 ) n2 //= 2 while  n2 >= n :     a , n2 , n , b = a +[ n ], n2 - n , n - 1 , b + 1 if  n2 != 0 :     a , b = a +[ n2 ], b + 1 print ( b , ' ' . join ( map ( str , a )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pun pln pun lit pun pln pun lit kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit kwd pun pln pun str pun pln pun pln pun pln pun pln pun,499 ms,6700 KB,899
33208880,2017-12-13 12:51:00,Jiburiru,900C - Remove Extra One,Python 3,Accepted,12,85,"n  =  int ( input ()) c  =   [- 2 ]   +   [ 0 ]   *  n p ,  q  =   0 ,   0 for  i  in  map ( int ,  input (). split ()):      if  p  <  i :         q  =  p         p  =  i         c [ p ]-= 1      elif  q  <  i :         q  =  i         c [ p ]   +=   1 print ( c . index ( max ( c )))",pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pln pun pln pun pln lit pun pln lit kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pln pun pln pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pln pun pln pun pln pun pln lit kwd pun pln pun pln pun pln pun pln pun,93 ms,10400 KB,900
33446531,2017-12-20 09:15:00,Jiburiru,902C - Hashing Trees,Python 3,Accepted,15,93,"n = int ( input ()) a = list ( map ( int , input (). split ())) p , q =[],[] r = ls = 0 for  i  in  a :      for  j  in  range ( i ):         p . append ( r )         q . append ( r  -   ( j  and  ls  >   1 ))     r += i     ls = i if  p == q : print ( 'perfect' ) else :      print ( 'ambiguous' )      print (* p )      print (* q )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln pln pun pln kwd pln pun pln pun kwd pun str pun kwd pun pln kwd pun str pun pln kwd pun pln pun pln kwd pun pln pun,1029 ms,14300 KB,902
52280949,2019-04-03 20:00:00,vjudge2,903C - Boxes Packing,Python 3,Accepted,3,26,"input () a = input (). split () print ( a . count ( max ( set ( a ),  key = a . count )))",pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,514 ms,700 KB,903
33626062,2017-12-25 20:55:00,eugalt,907C - Shockers,Python 3,Accepted,3,26,"input () a = input (). split () print ( a . count ( max ( set ( a ),  key = a . count )))",pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun,327 ms,5800 KB,904
33626062,2017-12-25 20:55:00,eugalt,907C - Shockers,Python 3,Accepted,8,69,"s , a = set ( 'abcdefghijklmnopqrstuvwxyz' ), 0 for  _  in  range ( int ( input ())- 1 ):     c , w = input (). split ()      if  len ( s )== 1   and  c != '.' : a += 1     w = set ( w )      if  c == '!' : s &= w      else : s -= w print ( a )",pln pun pln pun pln pun str pun lit kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pln kwd pln pun str pun pln pun lit pln pun pln pun pln pun pln kwd pln pun str pun pln pun pln pln kwd pun pln pun pln kwd pun pln pun,327 ms,5800 KB,907
33889835,2018-01-03 20:18:00,__ivan__,908C - New Year and Curling,Python 3,Accepted,11,97,"n , r = map ( int , input (). split ()) y =[] x = list ( map ( int , input (). split ())) for  xi  in  x :   yi = r    for  tx , ty  in  zip ( x , y ):      if  xi - 2 * r <= tx <= xi + 2 * r :       dy =( 4.0 * r ** 2 -( tx - xi )** 2 )** 0.5       yi = max ( yi , ty + dy )   y . append ( yi ) print (* y )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pln kwd pln pun pln kwd pln pun pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,967 ms,5500 KB,908
48533472,2019-01-18 16:08:00,Arsanuos,909C - Python Indentation,Python 3,Accepted,19,149,"def  solve ():     rd  =   lambda   :  list ( map ( int ,  input (). split ()))     n  =  int ( input ())     p  =   []      for  i  in  range ( n ):         p . append ( input ())     dp  =   [ 0   for  i  in  range ( n )]     dp [ 0 ]   =   1     indent  =   0     L  =  int ( 1e9   +   7 )      for  i ,  val  in  enumerate ( p ):          if  val  ==   'f' :             indent  +=   1          else :              for  j  in  range ( 1 ,  indent  +   1 ):                 dp [ j ]   =   ( dp [ j  -   1 ]   +  dp [ j ])   %  L      print ( dp [ indent ])   solve ()",kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln lit pln pun pln pun lit pln pun pln lit pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln str pun pln pun pln lit pln kwd pun pln kwd pln kwd pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pln pun,1996 ms,300 KB,909
33754207,2017-12-29 11:07:00,s_p,910C - Minimum Sum,Python 3,Accepted,24,159,"m  =   {} f  =   {} for  c  in   ""abcdefghij"" :   	m [ c ]   =  f [ c ]   =   0   n  =  int ( input ()) for  _  in  range ( n ): 	s  =  input () 	l  =  len ( s ) 	f [  s [ 0 ]   ]   =   1 	 for  i ,  c  in  enumerate ( s ): 		m [ c ]   +=   10 **( l - 1 - i )   ans  =   0 d  =   1 z  =   1 for  c ,  k  in  sorted ( m . items (),  key = lambda  x :  x [ 1 ],  reverse = True ): 	 if  z  and   not  f [ c ]: 		z  =   0 	 else : 		ans  +=  d  *  k 		d  +=   1   print ( ans ) 	",pln pun pln pun pln pun pln pun kwd pln kwd pln str pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln lit pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun lit pun pln pun pln pln pun pln lit pln pun pln lit pln pun pln lit kwd pln pun pln kwd pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun pln pun kwd pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pln pun pln lit pln kwd pun pln pun pln,62 ms,5500 KB,910
35218708,2018-02-13 23:56:00,ravi.kaushal97,911C - Three Garlands,Python 3,Accepted,2,55,"a = sorted ( map ( int , input (). split ())) print ( 'YES' if  a . count ( 1 )   or  a . count ( 2 )> 1   or  a . count ( 3 )> 2   or  a ==[ 2 , 4 , 4 ]   else   'NO' )",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str kwd pln pun pln pun lit pun pln kwd pln pun pln pun lit pun lit pln kwd pln pun pln pun lit pun lit pln kwd pln pun lit pun lit pun lit pun pln kwd pln str pun,62 ms,5500 KB,911
34063274,2018-01-10 09:41:00,Q-learning#,913C - Party Lemonade,Python 3,Accepted,12,118,"n , l = map ( int , input (). split ()) a = list ( map ( int , input (). split ())) for  i  in  range ( 0 , n - 1 ):     a [ i + 1 ]= min ( a [ i + 1 ], 2 * a [ i ]) s = 0 ans = 100 ** 100 for  i  in  range ( n - 1 ,- 1 ,- 1 ):     d = l //( 1 << i )     s += d * a [ i ]     l -= d << i ;     ans = min ( ans , s +( l > 0 )* a [ i ]) print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun lit pun pln pun pln pun pln pun lit pln pun lit pun lit kwd pln kwd pln pun pln pun lit pun lit pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun kwd pun pln pun,62 ms,5500 KB,913
34494556,2018-01-23 22:34:00,KulikAlex,914C - Travelling Salesman and Special Numbers,Python 3,Accepted,38,323,"def   Numb ( a , k ):      if  a  ==   0 :          return   0     m  =  len ( bin ( a ))- 3      if  m  +   1   <  k :          return   0      if  k  ==   1 :          return  m + 1      if  m  +   1   ==  k :          return   Numb ( a  &   (( 1 << m )- 1 ),  k - 1 )      return  C [ m ][ k ]+ Numb ( a  &   (( 1 << m )- 1 ),  k - 1 )   s  =  input () nDec  =  int ( s , 2 ) n  =  len ( s ) k  =  int ( input ())   C  =   [[ 1 ],[ 1 , 1 ]] for  i  in  range ( n ):     tmp  =   [ 1 ]      for  j  in  range ( 1 , i + 2 ):         tmp . append ( C [- 1 ][ j - 1 ]+ C [- 1 ][ j ])     tmp . append ( 1 )     C . append ( tmp )   if  k  ==   0 :      print ( 1 ) else :      NumOfOp   =   [ 0   for  i  in  range ( n + 1 )]      for  i  in  range ( 2 , n + 1 ):          NumOfOp [ i ]   =   NumOfOp [ bin ( i ). count ( '1' )]   +   1     res  =   0      for  i  in  range ( 1 , n + 1 ):          if   NumOfOp [ i ]   ==  k - 1 :             res  +=   Numb ( nDec , i )      if  k  ==   1 :         res  -=   1      print ( res %( 10 ** 9 + 7 ))",kwd pln typ pun pln pun pln pun pln kwd pln pun pln lit pun pln kwd pln lit pln pun pln pun pln pun pln pun lit pln kwd pln pun pln lit pln pun pln pun pln kwd pln lit pln kwd pln pun pln lit pun pln kwd pln pun lit pln kwd pln pun pln lit pln pun pln pun pln kwd pln typ pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln kwd pln pun pln pun pln pun typ pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun lit pun lit pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln kwd pun lit pun kwd pun pln typ pln pun pln pun lit pln kwd pln kwd pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln typ pun pln pun pln pun pln typ pun pln pun pln pun pln pun str pun pln pun pln lit pln pun pln lit pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pln typ pun pln pun pln pun pln pun lit pun pln pun pln typ pun pln pun pln pun pln kwd pln pun pln lit pun pln pun pln lit pln kwd pun pln pun lit pun lit pun lit pun,795 ms,49200 KB,914
34179646,2018-01-14 18:59:00,sobir_bobiev,915C - Permute Digits,Python 3,Accepted,12,81,"a = sorted ( input ()) b = int ( input ()) a = a [::- 1 ] p = """" while  a : 	 for  i ,  z  in  enumerate ( a ): 		n = p + a [ i ]+ """" . join ( sorted ( a [: i ]+ a [ i + 1 :])) 		 if  int ( n )<= b : 			p += z 			a . pop ( i ) 			 break print ( p )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun str kwd pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln kwd kwd pun pln pun,62 ms,5500 KB,915
34336161,2018-01-20 05:54:00,rareone0602,916C - Jamie and Interesting Graph,Python 3,Accepted,12,117,"n ,  m  =  map ( int ,  input (). split ()) prime  =   1000003 ; m  -=  n  -   1 print ( prime ,  prime ) for  i  in  range ( n  -   1 ):    print ( i  +   1 ,  i  +   2 ,   1   if  i  else  prime  -  n  +   2 ) for  i  in  range ( n ):    for  j  in  range ( i  +   2 ,  n ):      if   not  m :          break      print ( i  +   1 ,  j  +   1 ,   10   *  prime )     m  -=   1",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln lit kwd pun pln pun pln pun kwd pln kwd pln pun pln pun pln lit pun pln kwd pun pln pun pln lit pun pln pun pln lit pun pln lit pln kwd pln kwd pln pun pln pun pln lit pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln lit pun pln pun pln kwd pln kwd pln pun pln pln kwd pln kwd pun pln pun pln lit pun pln pun pln lit pun pln lit pln pun pln pun pln pun pln lit,888 ms,5800 KB,916
35381036,2018-02-17 06:34:00,Cyfroni,919C - Seat Arrangements,Python 3,Accepted,4,117,"import  re n ,  m ,  k  =   [ int ( x )   for  x  in  input (). split ()] s  =   [ input ()   for  _  in  range ( n )] print ( sum ([ sum ( len ( x )   -  k  +   1   for  x  in  re . compile ( r ""\.{""   +  str ( k )   +   "",}"" ). findall ( i ))   for  i  in   ( s  +   [ """" . join ( x )   for  x  in  zip (* s )]   if  n  >   1   and  k  >   1   else  s )]))",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pln kwd pln pun pln pun pln str pln pun pln pun pln pun pln pun pln str pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun str pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun,405 ms,15100 KB,919
69448009,2020-01-24 07:32:00,Spandan14#,920C - Swap Adjacent Elements,Python 3,Accepted,10,71,"n = int ( input ()) a =[ int ( x )   for  x  in  input (). split ()] s = input ()+ '0' m = 0 for  i  in  range  ( n ):     m = max ( m , a [ i ])      if  s [ i ]== '0'   and  m > i + 1 :          print ( ""NO"" )         quit () print ( 'YES' )",pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun str pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun str pln kwd pln pun pln pun lit pun pln kwd pun str pun pln pun kwd pun str pun,265 ms,13700 KB,920
55412268,2019-06-11 00:05:00,vjudge1,922C - Cave Painting,Python 3,Accepted,2,36,"n , k = map ( int , input (). split ()) print ([ 'Yes' , 'No' ][ any (( n + 1 )% i  for  i  in  range ( 2 , k + 1 ))])",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun str pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun,124 ms,0 KB,922
36938061,2018-04-04 06:08:00,rareone0602#,957D - Riverside Curio,Python 3,Accepted,2,36,"n , k = map ( int , input (). split ()) print ([ 'Yes' , 'No' ][ any (( n + 1 )% i  for  i  in  range ( 2 , k + 1 ))])",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun str pun pln pun pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun lit pun,233 ms,13800 KB,924
36425505,2018-03-20 09:07:00,VinceJudge0,926C - Is This a Zebra?,Python 3,Accepted,3,40,"from  itertools  import  groupby input () print ([ 'YES' ,   'NO' ][ len ( set ( len ( list ( g ))   for  k ,  g  in  groupby ( input (). split ())))   >   1 ])",kwd pln kwd pln pln pun kwd pun str pun pln str pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pun,140 ms,8500 KB,926
39045320,2018-06-08 15:04:00,dvec,928C - Dependency management,Python 3,Accepted,38,280,"from  collections  import  defaultdict     def  rp ():     s  =  input (). split ()      return   ( s [ 0 ],  int ( s [ 1 ]))   ps  =   {} n  =  int ( input ())   for  i  in  range ( n ):     p  =  rp ()     d  =   []      for  _  in  range ( int ( input ())):         d  +=   [ rp ()]     ps [ p ]   =  d      if  i  !=  n  -   1 :         input ()   root  =  list ( ps . keys ())[ 0 ] q  =   [( root ,   0 )] u  =   { root [ 0 ]:   ( root [ 1 ],   0 )}   for  i ,  l  in  q :     isp  =  i      if  isp [ 0 ]   in  u  and  isp [ 1 ]   !=  u [ isp [ 0 ]][ 0 ]:          continue      for  p  in  ps [ i ]:         psp  =  p          if  psp [ 0 ]   not   in  u  or  u [ psp [ 0 ]][ 1 ]   ==  l  +   1   and  u [ psp [ 0 ]][ 0 ]   <  psp [ 1 ]:             u [ psp [ 0 ]]   =   ( psp [ 1 ],  l  +   1 )             q . append (( psp ,  l  +   1 ))   del  u [ root [ 0 ]]   print ( len ( u )) for  i  in  sorted ( u ):      print ( i ,  u [ i ][ 0 ])",kwd pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln lit pun pln pun pln pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln lit pun pln kwd pln pun pln kwd pln pun pln pun pln pln kwd pln pun lit pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun lit pun lit pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pln kwd pln pun lit pun pln kwd pln kwd pln kwd pln pun pln pun lit pun lit pun pln pun pln pun pln lit pln kwd pln pun pln pun lit pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln lit pun pln kwd pln pun pln pun lit pun pln kwd pun pln pun pln pun kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun lit pun,1403 ms,50600 KB,928
37660038,2018-04-27 15:11:00,hamlet,929C - Красивая команда,Python 3,Accepted,17,267,"g , d , f = map ( int , input (). split ()) a = list ( map ( int , input (). split ())) b = list ( map ( int , input (). split ())) c = list ( map ( int , input (). split ())) a =[( x , 0 )   for  x  in  a ] b =[( x , 1 )   for  x  in  b ] c =[( x , 2 )   for  x  in  c ] a = a + b + c ans = 0 for   ( b , c )   in  a :     x =[ 0 , 0 , 0 ]      for   ( d , e )   in  a :          if   ( d >= b  and  d <= 2 * b ):  x [ e ]+= 1      if   ( c == 0 ):  ans += x [ 1 ]*( x [ 1 ]- 1 )/ 2 * x [ 2 ]*( x [ 2 ]- 1 )*( x [ 2 ]- 2 )/ 6      if   ( c == 1 ):  ans += x [ 0 ]*( x [ 1 ]- 1 )* x [ 2 ]*( x [ 2 ]- 1 )*( x [ 2 ]- 2 )/ 6      if   ( c == 2 ):  ans += x [ 0 ]* x [ 1 ]*( x [ 1 ]- 1 )/ 2 *( x [ 2 ]- 1 )*( x [ 2 ]- 2 )/ 2 print ( int ( ans ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pln pun lit kwd pln pun pln pun pln pun pln kwd pln pun pln pun lit pun lit pun lit pun pln kwd pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun lit pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun lit pun lit pun pln pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun lit pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun lit pun pln pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun lit pln kwd pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln pun lit pun lit pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun lit kwd pun pln pun pln pun,390 ms,7200 KB,929
38991050,2018-06-06 13:15:00,mencibi,931C - Laboratory Work,Python 3,Accepted,9,183,"n  =  int ( input ()) x  =  list ( map ( int ,  input (). split ())) [ Min ,   Max ,   Mid ]   =   [ min ( x ),  max ( x ),  max ( x )- 1 ] if   ( Max - Min   <   2 ): print ( n ); print (* x ); exit () [ nMin ,  nMax ,  nMid ]   =  list ( map ( x . count ,   [ Min ,   Max ,   Mid ])) [ nfMinMax ,  nfMid ]   =   [ min ( nMin ,  nMax ),  nMid // 2 ] nf  =  max ( nfMinMax ,  nfMid );  b  =   (( nf == nfMid )   or   - 1 ) nMin  +=  nf  *  b ;  nMax  +=  nf  *  b ;  nMid  +=   - 2   *  nf  *  b print ( n  -   2 * nf ); print (*([ Min ]* nMin  +   [ Max ]* nMax  +   [ Mid ]* nMid ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pun typ pun pln typ pun pln typ pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pln pun typ pun typ pln pun pln lit pun kwd pun pln pun kwd pun pln pun pln pun pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun typ pun pln typ pun pln typ pun pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun pln kwd pun pln pun pln lit pun pln pun kwd pun typ pun pln pun pln pun typ pun pln pun pln pun typ pun pln pun,343 ms,7300 KB,931
74373868,2020-03-26 13:11:00,aakarsh,932C - Permutation Cycle,Python 3,Accepted,18,180,"n , a , b = map ( int , input (). split ()) p =[ i + 1   for  i  in  range ( n )] f = 0 a , b = min ( a , b ), max ( a , b ) for  i  in  range ( 0 , n + 1 , a ): 	 if   ( n - i )% b == 0 : 		x =(( n - i )// b ) 		f = 1 		 break if  f : 	 for  i  in  range ( 0 , b * x , b ): 		p [ i : i + b ]=[ p [ i + b - 1 ]]+ p [ i : i + b - 1 ] 	 for  j  in  range ( b * x , n , a ): 		p [ j : j + a ]=[ p [ j + a - 1 ]]+ p [ j : j + a - 1 ] 	 print (* p )   else : 	 print (- 1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pln kwd kwd pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun pln kwd pun pln kwd pun lit pun,1871 ms,36000 KB,932
35268774,2018-02-14 19:16:00,Yee_172,934E - A Colourful Prospect,Python 3,Accepted,18,180,"n , a , b = map ( int , input (). split ()) p =[ i + 1   for  i  in  range ( n )] f = 0 a , b = min ( a , b ), max ( a , b ) for  i  in  range ( 0 , n + 1 , a ): 	 if   ( n - i )% b == 0 : 		x =(( n - i )// b ) 		f = 1 		 break if  f : 	 for  i  in  range ( 0 , b * x , b ): 		p [ i : i + b ]=[ p [ i + b - 1 ]]+ p [ i : i + b - 1 ] 	 for  j  in  range ( b * x , n , a ): 		p [ j : j + a ]=[ p [ j + a - 1 ]]+ p [ j : j + a - 1 ] 	 print (* p )   else : 	 print (- 1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pln kwd kwd pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun pln kwd pun pln kwd pun lit pun,62 ms,5500 KB,933
35282783,2018-02-15 08:23:00,rareone0602,933A - A Twisty Movement,Python 3,Accepted,18,180,"n , a , b = map ( int , input (). split ()) p =[ i + 1   for  i  in  range ( n )] f = 0 a , b = min ( a , b ), max ( a , b ) for  i  in  range ( 0 , n + 1 , a ): 	 if   ( n - i )% b == 0 : 		x =(( n - i )// b ) 		f = 1 		 break if  f : 	 for  i  in  range ( 0 , b * x , b ): 		p [ i : i + b ]=[ p [ i + b - 1 ]]+ p [ i : i + b - 1 ] 	 for  j  in  range ( b * x , n , a ): 		p [ j : j + a ]=[ p [ j + a - 1 ]]+ p [ j : j + a - 1 ] 	 print (* p )   else : 	 print (- 1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pln kwd kwd pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln kwd pun pln pun pln kwd pun pln kwd pun lit pun,62 ms,6200 KB,934
35612471,2018-02-24 03:54:00,eugalt,935C - Fifa and Fafa,Python 3,Accepted,9,85,"r , x , y , u , v = map ( int , input (). split ()) u -= x ; v -= y d =( u * u + v * v )**. 5 if  d < r :  r =( r + d )/ 2   if  d :   k = r / d - 1 ; x -= u * k ; y -= v * k   else : y += r print ( x , y , r )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln kwd pun pln pun pln pun pln pun,62 ms,5500 KB,935
37654914,2018-04-27 11:59:00,Lych4o_,937E - Lock Puzzle,Python 3,Accepted,9,85,"r , x , y , u , v = map ( int , input (). split ()) u -= x ; v -= y d =( u * u + v * v )**. 5 if  d < r :  r =( r + d )/ 2   if  d :   k = r / d - 1 ; x -= u * k ; y -= v * k   else : y += r print ( x , y , r )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln kwd pun pln pun pln pun pln pun,124 ms,7400 KB,936
36026773,2018-03-06 22:41:00,hamlet,936A - Save Energy!,Python 3,Accepted,9,85,"r , x , y , u , v = map ( int , input (). split ()) u -= x ; v -= y d =( u * u + v * v )**. 5 if  d < r :  r =( r + d )/ 2   if  d :   k = r / d - 1 ; x -= u * k ; y -= v * k   else : y += r print ( x , y , r )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln kwd pun pln pun pln pun pln pun,62 ms,5500 KB,937
35416139,2018-02-17 15:31:00,algo_overdose,938C - Constructing Tests,Python 3,Accepted,27,161,"from  math  import   *   def  calcul ( xi ): 	n = int ( sqrt ( xi ))+ 1 	n2 = n ** 2 	 while  n2 <= 2 * xi  and  n <= 1000000000 : 		nsm2 = n2 - xi 		nsm = sqrt ( nsm2 ) 		 if  nsm == int ( nsm ): 			m = n // nsm 			 if  n2  -   ( n // m )** 2   ==  xi : 				 return  n ,  int ( m ) 		n += 1 		n2 = n ** 2 	 return   - 1 ,- 1   t = int ( input ()) for  _  in  range ( t ): 	xi = int ( input ()) 	 if  xi == 0 : 		 print ( ""1 1"" ) 		 continue 	n , m = calcul ( xi ) 	 if  m ==- 1 : 		 print (- 1 ) 	 else : 		 print ( n , m )",kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun pln pun lit pln kwd pln pun lit pun pln kwd pln pun lit pun pln pun pln pun pln pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun lit pln pun pln pun pln kwd pln pun pln pun pln pun pln pun lit pln pun pln pun lit pln kwd pln pun lit pun lit pln pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln kwd pun str pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln kwd pun lit pun pln kwd pun pln kwd pun pln pun pln pun,701 ms,5500 KB,938
73167773,2020-03-13 22:16:00,aakarsh,939C - Convenient For Everybody,Python 3,Accepted,16,146,"n = int ( input ()) a =[ int ( x )   for  x  in  input (). split ()] s , f = map ( int , input (). split ()) a = a + a [: f - s ] z = s l = f - s + 1 sumi = sum ( a [: f - s + 1 ]) ans = sumi for  i  in  range ( 1 , n + 1 ): 	sumi = sumi - a [ i - 1 ]+ a [ i + f - s - 1 ] 	 if  ans == sumi : 		z = min (( s + n - 1 - i )% n , z ) 	 elif  ans < sumi : 		ans = sumi 		z =( s + n - 1 - i )% n print ( z + 1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun lit pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pln pun pln pun pln pun lit pun pln pun pln kwd pun pln pun lit pun,218 ms,7000 KB,939
35755988,2018-02-27 11:46:00,namkan,940C - Phone Numbers,Python 3,Accepted,12,105,"a , b  =  map ( int , input (). split ( ' ' )) s  =  input () s1  =  sorted ( set ( s ))   if  b > a : 	 print ( s + s1 [ 0 ]*( b - a )) else : 	i  =  b - 1 	 while  s [ i ]>= s1 [- 1 ]   and  i >- 1 : 		i  -=   1 	d  =  s1 . index ( s [ i ]) 	 print ( s [: i ]+ s1 [ d + 1 ]+ s1 [ 0 ]*( b - i - 1 ))",pln pun pln pun pln pun pln pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pun pln pun pln pun lit pun pln pun pln pun kwd pun pln pun pln pun lit pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun lit pun pln pun lit pun pln pun pln pun lit pun,78 ms,5800 KB,940
35914920,2018-03-04 12:29:00,* vvd1705014532,944C - Peculiar apple-tree,Python 3,Accepted,10,105,"n  =  int ( input ()) a  =   [ int ( e )   for  e  in  input (). split ()] d  =   { 1 : 0 } for  k ,  v  in  enumerate ( a ):     d [ k + 2 ]   =  d [ v ]   +   1 d2  =   {} for  k ,  v  in  d . items ():     d2 [ v ]   =  d2 . get ( v , 0 )   +   1 s  =  sum ([ v % 2   for  v  in  d2 . values ()]) print ( s )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun lit pun lit pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln lit pln pun pln pun kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln pun pln pun lit pln kwd pln kwd pln pun pln pun kwd pun pln pun,202 ms,20500 KB,944
36047130,2018-03-07 17:03:00,eugalt,946C - String Transformation,Python 3,Accepted,9,62,"s = list ( input ()) i , j = 97 , 0 for  c  in  s :   if  c <= chr ( i ):   s [ j ]= chr ( i ); i += 1   if  i > 122 :    print ( '' . join ( s )); break  j += 1 else : print (- 1 )",pln pun pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun lit pun pln kwd pun str pun pln pun pln pun kwd pln pun lit kwd pun kwd pun lit pun,93 ms,6100 KB,946
36237149,2018-03-13 04:37:00,chengjian,948C - Producing Snow,Python 3,Accepted,14,115,"import  heapq heap  =   [] n  =  int ( input ()) V  =  list ( map ( int ,  input (). split ())) T  =  list ( map ( int ,  input (). split ())) tmp  =   0 for  i  in  range ( n ):     ans  =   0     heapq . heappush ( heap ,  tmp + V [ i ])      while  len ( heap )   and  heap [ 0 ]<= tmp + T [ i ]:         ans  +=  heapq . heappop ( heap )- tmp     tmp  +=  T [ i ]     ans  +=  T [ i ]* len ( heap )      print ( ans ,  end = ' ' )",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun str pun,748 ms,15600 KB,948
74380231,2020-03-26 14:30:00,aakarsh,949A - Zebras,Python 3,Accepted,14,115,"import  heapq heap  =   [] n  =  int ( input ()) V  =  list ( map ( int ,  input (). split ())) T  =  list ( map ( int ,  input (). split ())) tmp  =   0 for  i  in  range ( n ):     ans  =   0     heapq . heappush ( heap ,  tmp + V [ i ])      while  len ( heap )   and  heap [ 0 ]<= tmp + T [ i ]:         ans  +=  heapq . heappop ( heap )- tmp     tmp  +=  T [ i ]     ans  +=  T [ i ]* len ( heap )      print ( ans ,  end = ' ' )",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun str pun,842 ms,18900 KB,950
41924771,2018-08-21 09:53:00,Savit_Gupta,1023E - Down or Right,Python 3,Accepted,14,115,"import  heapq heap  =   [] n  =  int ( input ()) V  =  list ( map ( int ,  input (). split ())) T  =  list ( map ( int ,  input (). split ())) tmp  =   0 for  i  in  range ( n ):     ans  =   0     heapq . heappush ( heap ,  tmp + V [ i ])      while  len ( heap )   and  heap [ 0 ]<= tmp + T [ i ]:         ans  +=  heapq . heappop ( heap )- tmp     tmp  +=  T [ i ]     ans  +=  T [ i ]* len ( heap )      print ( ans ,  end = ' ' )",kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit kwd pln kwd pln pun pln pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun str pun,140 ms,0 KB,951
36970567,2018-04-04 18:37:00,Bamal,952C - Ravioli Sort,Python 3,Accepted,3,52,"n = int ( input ()) a = list ( map ( int , input (). split ())) print ( 'NO'   if  any ( abs ( a [ i ]- a [ i + 1 ])> 1   for  i  in  range ( n - 1 )) else   'YES' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln kwd pln pun pln pun lit pun kwd pln str pun,93 ms,6900 KB,952
36425505,2018-03-20 09:07:00,VinceJudge0,926C - Is This a Zebra?,Python 3,Accepted,3,52,"n = int ( input ()) a = list ( map ( int , input (). split ())) print ( 'NO'   if  any ( abs ( a [ i ]- a [ i + 1 ])> 1   for  i  in  range ( n - 1 )) else   'YES' )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pln kwd pln pun pln pun pln pun pln pun pln pun pln pun lit pun lit pln kwd pln kwd pln pun pln pun lit pun kwd pln str pun,140 ms,8500 KB,953
41142572,2018-08-03 07:26:00,Vasiliy_48,954C - Matrix Walk,Python 3,Accepted,13,129,"n = int ( input ()) a = list ( map ( int , input (). split ())) m = 1 for  l , r  in  zip ( a , a [ 1 :]):      if  abs ( l - r )!= 1   and  l != r :         m = abs ( l - r )          break for  l , r  in  zip ( a , a [ 1 :]):      if   not ( abs ( l - r )== m  or  abs ( l - r )== 1   and  min ( l , r )   %  m != 0 ):          print ( ""NO"" )         exit () print ( ""YES"" ) print ( ""{} {}"" . format ( 10 ** 9 ,  m ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd kwd pln pun pln kwd pln pun pln pun pln pun lit pun pln kwd pln kwd pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pun str pun pln pun kwd pun str pun kwd pun str pun pln pun lit pun lit pun pln pun,404 ms,16300 KB,954
36938061,2018-04-04 06:08:00,rareone0602#,957D - Riverside Curio,Python 3,Accepted,13,129,"n = int ( input ()) a = list ( map ( int , input (). split ())) m = 1 for  l , r  in  zip ( a , a [ 1 :]):      if  abs ( l - r )!= 1   and  l != r :         m = abs ( l - r )          break for  l , r  in  zip ( a , a [ 1 :]):      if   not ( abs ( l - r )== m  or  abs ( l - r )== 1   and  min ( l , r )   %  m != 0 ):          print ( ""NO"" )         exit () print ( ""YES"" ) print ( ""{} {}"" . format ( 10 ** 9 ,  m ))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln pun pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd kwd pln pun pln kwd pln pun pln pun pln pun lit pun pln kwd pln kwd pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun lit pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pun str pun pln pun kwd pun str pun kwd pun str pun pln pun lit pun lit pun pln pun,233 ms,13800 KB,956
36640422,2018-03-26 14:33:00,Evil__Coder,957C - Three-level Laser,Python 3,Accepted,10,105,"n , m = map ( int , input (). split ()) a = list ( map ( int , input (). split ())) k = 0 ans =- 1 for  i  in  range ( n - 1 ):      while  k < n - 1   and  a [ k + 1 ]   -  a [ i ]<= m :         k += 1      if  i < k - 1 :         ans = max ( ans ,( a [ k ]- a [ i + 1 ])   /   ( a [ k ]- a [ i ])) print ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit kwd pln kwd pln pun pln pun lit pun pln kwd pln pun pln pun lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun,296 ms,15000 KB,957
36927184,2018-04-03 20:51:00,anmolsaxena10,959C - Mahmoud and Ehab and the wrong algorithm,Python 3,Accepted,10,65,"n  =  int ( input ())   if  n < 6 : 	 print (- 1 ) else : 	 print ( ""1 2\n1 3\n1 4"" ) 	 for  i  in  range ( 5 , n + 1 ): 		 print ( '2 ' + str ( i )) for  i  in  range ( 2 ,  n + 1 ): 	 print ( '1 ' + str ( i ))",pln pun pln pun pln pun pln kwd pln pun lit pun pln kwd pun lit pun kwd pun pln kwd pun str pun pln kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pun str pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun lit pun pln kwd pun str pun pln pun pln pun,764 ms,7000 KB,959
38976724,2018-06-05 21:37:00,Ali_Pi#,960C - Subsequence Counting,Python 3,Accepted,11,94,"from  math  import   * R  =   lambda :  map ( int , input (). split ()) x ,  d  =  R () n  =   0 ;  arr  =   [];  v  =   1 while  x :     t  =  floor ( log2 ( x + 1 ))     arr  +=   [ v ]   *  t     n  +=  t ;  v  +=  d     x  -=   ( 2 ** t )   -   1 print ( n ) print ( ' ' . join ( map ( str ,  arr )))",kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln lit kwd pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pln pun pln pun lit pun pln pun pln pun pln lit kwd pun pln pun kwd pun str pun pln pun pln pun pln pun pln pun,93 ms,6900 KB,960
42150149,2018-08-27 14:42:00,messy_saurabh,961C - Chessboard,Python 3,Accepted,10,94,n = int ( input ()) c =[ 0 ]* 4 for  k  in  range ( 4 ):   for  i  in  range ( n ):   s = input ()    for  j  in  range ( n ):     if ( i + j )% 2 != int ( s [ j ]): c [ k ]+= 1   if  k < 3 : input () c . sort () print ( c [ 0 ]+ c [ 1 ]+ 2 * n * n - c [ 2 ]- c [ 3 ]),pln pun pln pun pln pun pln pun lit pun lit kwd pln kwd pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun lit pun pln pun pln pun pln pun kwd pun pln pun lit pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun pln pun lit pun,155 ms,0 KB,961
70000248,2020-02-02 04:01:00,Roms,962C - Make a Square,Python 3,Accepted,11,80,"s  =  input () for  i  in  range ( 10 ** 5 , 0 ,- 1 ):     t , p = str ( i  *  i )+ '$' , 0      for  x  in  s :          if  x  ==  t [ p ]:             p  +=   1      if  p  ==  len ( t )- 1 :          print ( len ( s )- len ( t )+ 1 )          break else :      print (- 1 )",pln pun pln pun kwd pln kwd pln pun lit pun lit pun lit pun lit pun pln pun pln pun pln pun pln pun pln pun str pun lit pln kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun lit pun pln kwd pun pln pun pln pun pln pun pln pun lit pun pln kwd kwd pun pln kwd pun lit pun,358 ms,0 KB,962
38540172,2018-05-22 18:28:00,Ali_Pi,963C - Cutting Rectangle,Python 3,Accepted,48,275,"n  = int ( input ()) w =[] h =[] c =[] cntw ={} cnth ={} gcdC = 0 cntC = 0 def  insert1 ( a , b , c ): 	 if   not  a  in  b  : 		b [ a ]= c 	 else   : 		b [ a ]= b [ a ]+ c   def  gcd ( a , b ):   	 if  a  %  b  ==   0   : 		 return  b 	 else   : 		 return  gcd ( b , a % b )   for  i  in  range ( 0 ,  n ): 	a , b , d  =  map ( int , input (). split ()) 	w . append ( a ) 	h . append ( b ) 	c . append ( d ) 	insert1 ( a , cntw , d ) 	insert1 ( b , cnth , d ) 	cntC  +=  d 	 if  gcdC  ==   0   : 		gcdC  =  d 	 else   : 		gcdC  =  gcd ( gcdC ,  d )   for  i  in  range ( 0 ,  n ): 	 if  cntw [ w [ i ]]   *  cnth [ h [ i ]]   !=  cntC  *  c [ i ]: 		 print   ( 0 ) 		exit ()   ans  =   0 i  =   1 while   ( i  *  i  <=  gcdC )   : 	 if  gcdC  %  i  ==   0   : 		ans  +=   1 		 if  i  *  i  !=  gcdC  : 			ans  +=   1 	i  +=   1   print   ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln pun pln lit pln pun pln kwd pln pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln lit pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln pun pln pln pun pln lit pln pun pln lit kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun,1465 ms,25900 KB,963
37424593,2018-04-18 07:09:00,Yee_172,963A - Alternating Sum,Python 3,Accepted,48,275,"n  = int ( input ()) w =[] h =[] c =[] cntw ={} cnth ={} gcdC = 0 cntC = 0 def  insert1 ( a , b , c ): 	 if   not  a  in  b  : 		b [ a ]= c 	 else   : 		b [ a ]= b [ a ]+ c   def  gcd ( a , b ):   	 if  a  %  b  ==   0   : 		 return  b 	 else   : 		 return  gcd ( b , a % b )   for  i  in  range ( 0 ,  n ): 	a , b , d  =  map ( int , input (). split ()) 	w . append ( a ) 	h . append ( b ) 	c . append ( d ) 	insert1 ( a , cntw , d ) 	insert1 ( b , cnth , d ) 	cntC  +=  d 	 if  gcdC  ==   0   : 		gcdC  =  d 	 else   : 		gcdC  =  gcd ( gcdC ,  d )   for  i  in  range ( 0 ,  n ): 	 if  cntw [ w [ i ]]   *  cnth [ h [ i ]]   !=  cntC  *  c [ i ]: 		 print   ( 0 ) 		exit ()   ans  =   0 i  =   1 while   ( i  *  i  <=  gcdC )   : 	 if  gcdC  %  i  ==   0   : 		ans  +=   1 		 if  i  *  i  !=  gcdC  : 			ans  +=   1 	i  +=   1   print   ( ans )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pln pun lit kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln pun pln lit pln pun pln kwd pln pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln lit pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun lit pun pln pun pln pln pun pln lit pln pun pln lit kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln lit pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun,171 ms,7100 KB,964
37707685,2018-04-29 15:11:00,nowyyz,965C - Greedy Arkady,Python 3,Accepted,2,47,"n , k , m , q = map ( int , input (). split ()) print ( max ( i * min ( m , n //( k * i - k + 1 )) for  i  in  range ( 1 , q + 1 )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun lit pun pln pun lit pun,93 ms,6900 KB,965
75802610,2020-04-08 08:02:00,rdav,975C - Valhalla Siege,Python 3,Accepted,14,102,"from  bisect  import  bisect_right n , q = map ( int , input (). split ()) a = list ( map ( int , input (). split ())) k = list ( map ( int , input (). split ())) for  i  in  range ( 1 ,  n ):     a [ i ]+= a [ i - 1 ] c = 0 for  i  in  k : 	c += i 	t = bisect_right ( a , c ) 	 if  n != t :   print ( n - t ) 	 else : 		 print ( n ) 		c = 0",kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit kwd pln kwd pln pun pln pun pln pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln kwd pun pln pun pln pun pln kwd pun pln kwd pun pln pun pln pun lit,857 ms,22400 KB,975
37784847,2018-05-01 04:17:00,eugalt,976C - Nested Segments,Python 3,Accepted,3,81,"n = int ( input ()) a = sorted (( l ,- r , i ) for  l , r , i  in ( map ( int , input (). split ()+[ i + 1 ]) for  i  in  range ( n ))) print (* next ((( y [ 2 ], x [ 2 ]) for  x , y  in  zip ( a , a [ 1 :]) if  x [ 1 ]<= y [ 1 ]),(- 1 ,- 1 )))",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun kwd pun pln pun pln pun lit pun pln pun lit pun kwd pln pun pln kwd pln pun pln pun pln pun lit pun kwd pln pun lit pun pln pun lit pun lit pun lit pun,1669 ms,39000 KB,976
56678695,2019-07-07 19:57:00,Danylo99,977C - Less or Equal,Python 3,Accepted,4,62,"rd  =   lambda : map ( int ,  input (). split ()) n ,  k  =  rd () a  =   [ 1 ]   +  sorted ( rd ()) print ( a [ k ]   if  k  ==  n  or  a [ k  +   1 ]   -  a [ k ]   else   - 1 )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun kwd pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln lit pun pln pun pln pun pln pun pln kwd pln pun lit pun,233 ms,15300 KB,977
75795457,2020-04-08 04:47:00,coderemite,978C - Letters,Python 3,Accepted,6,74,"n , m = map ( int , input (). split ()) a =* map ( int , input (). split ()), i = c = d = 0 for  x  in  map ( int , input (). split ()):    while  c + a [ i ]< x : c += a [ i ]; d += 1 ; i += 1    print ( d + 1 , x - c )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun lit pln kwd pun pln pun lit pun pln pun pln pun,998 ms,21000 KB,978
38098901,2018-05-10 20:57:00,code4101,980C - Posterized,Python 3,Accepted,11,119,"R  =   lambda :  map ( int ,  input (). split ())   n ,  k  =  R () a  =  list ( range ( 0 ,   257 ));  v  =   [ 1 ]* 257 for  p  in  R ():      if  v [ p ]:         t  =  p          while  t  >=   0   and  p - a [ t ]<= k - 1 :  t  -=   1         t  +=   1          for  i  in  range ( t ,  p + 1 ):  a [ i ]   =  a [ t ];  v [ i ]   =   0      print ( a [ p ],  end = ' ' )",pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln lit pun pln pun pln pun lit pun lit kwd pln kwd pln pun pln kwd pln pun pln pun pln pun pln pln kwd pln pun pln lit pln kwd pln pun pln pun pln pun pln pun lit pun pln pun pln lit pln pun pln lit pln kwd pln kwd pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln pun str pun,468 ms,12000 KB,980
38696416,2018-05-28 17:10:00,Black_Fregat,981C - Useful Decomposition,Python 3,Accepted,20,179,"d  =   {} n  =  int ( input ()) for  _  in  range ( n - 1 ):     a ,  b  =  map ( int ,  input (). split ())     d [ a ]   =  d . get ( a ,   0 )   +   1     d [ b ]   =  d . get ( b ,   0 )   +   1 zz  =  list ( filter ( lambda  x :  d [ x ]   >   2 ,  d ))      z  =  len ( zz ) y  =  list ( filter ( lambda  x :  d [ x ]   ==   1 ,  d )) if  z  >   1 :      print ( ""No"" ) elif  z  ==   0 :           print ( ""Yes"" )      print ( 1 )      print (* y ) else :           print ( ""Yes"" )      print ( len ( y ))      for  v  in  y :          print ( zz [ 0 ],  v )",pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun pln pun pln pun pln pun pln lit pun pln pun pln lit pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln lit pun pln pun kwd pln pun pln lit pun pln kwd pun str pun kwd pln pun pln lit pun pln pln kwd pun str pun pln kwd pun lit pun pln kwd pun pln pun kwd pun pln pln kwd pun str pun pln kwd pun pln pun pln pun pln kwd pln kwd pln pun pln kwd pun pln pun lit pun pln pun,950 ms,6000 KB,981
45204632,2018-11-02 15:02:00,nowyyz,982C - Cut 'em all!,Python 3,Accepted,26,183,"n = int ( input ()) if  n & 1 > 0 : print (- 1 ); exit () g =[[]   for  _  in  range ( n )   ] for  _  in  range ( n - 1 ):     a , b = map ( int , input (). split ())     g [ a - 1 ]. append ( b - 1 )     g [ b - 1 ]. append ( a - 1 ) c =[ 1 ]* n v =[- 1 ]* n v [ 0 ]= 0 s =[ 0 ] while  s :     x = s [- 1 ]     k = False      for  j  in  g [ x ]:          if  v [ j ]==- 1 :             v [ j ]= x             s . append ( j )             k = True      if   not  k :         s . pop ()         c [ v [ x ]]+= c [ x ] o = 0 for  j  in  c [ 1 :]:      if  j & 1 < 1 : o += 1   print ( o )",pln pun pln pun pln pun kwd pln pun lit pun lit pun kwd pun lit pun pln pun pln pun pln kwd pln kwd pln pun pln pun pln pun kwd pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun pln pun lit pun pln pun lit pun pln pln pun lit pun pln pln pun lit pun lit pln pun lit pun kwd pln pun pln pun pln pun lit pun pln pun kwd pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pln pun pln pun pln pun pln pun kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun lit pun pln kwd pln pun lit pun lit pun pln pun lit pln kwd pun pln pun,576 ms,12800 KB,982
38350988,2018-05-17 16:47:00,eugalt,984C - Finite or not?,Python 3,Accepted,2,51,"print ( '\n' . join (( 'F' , 'Inf' )[ pow ( b , 64 , q )* p % q > 0 ]+ 'inite' for  p , q , b in ( map ( int , input (). split ()) for  _  in [ 0 ]* int ( input ()))))",kwd pun str pun pln pun str pun str pun pln pun pln pun lit pun pln pun pln pun pln pun lit pun str kwd pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun kwd pln kwd pun lit pun pln pun pln pun,748 ms,6200 KB,984
38563122,2018-05-23 16:24:00,eugalt,985C - Liebig's Barrels,Python 3,Accepted,9,84,"R = lambda : map ( int , input (). split ()) n , k , l = R () a = sorted ( R ()) s = c = 0 for  i  in  range ( n * k - 1 ,- 1 ,- 1 ):  c += 1   if  a [ i ]- a [ 0 ]<= l  and  c >= k :   s += a [ i ]; c -= k print (( s , 0 )[ c > 0 ])",pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pln kwd pln pun pln pun pln pun lit pun lit pun lit pun pln pun lit pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun lit pun pln pun lit pun,233 ms,8000 KB,985
38896745,2018-06-02 18:35:00,eugalt,988C - Equal Sums,Python 3,Accepted,10,109,"d ={} for  i  in  range ( 1 , int ( input ())+ 1 ):  input (); a = list ( map ( int , input (). split ())); s = sum ( a ); t = set ()   for  j , x  in  enumerate ( a , 1 ):    if  x  not   in  t :    t . add ( x ); r = d . get ( s - x )     if  r :      print ( 'YES' ); print (* r ); print ( i , j ); exit ()    d [ s - x ]= i , j print ( 'NO' )",pln pun kwd pln kwd pln pun lit pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun lit pun pln kwd pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pun str pun kwd pun pln pun kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun str pun,389 ms,30300 KB,988
39264038,2018-06-15 14:01:00,bhiaibogf,989C - A Mist of Florescence,Python 3,Accepted,14,131,"s = 'ABCD' a = list ( map ( int , input (). split ())) print ( 48 , 50 ) for  k  in  range ( 4 )   :      print ( s [ k ]* 50 )     cnt = 0      for  i  in  range ( 11 )   :          for  j  in  range ( 50 )   :              if  i % 2 == 0   and  j % 2 == 1   and  cnt < a [( k + 1 )% 4 ]- 1   :                  print ( s [( k + 1 )% 4 ], end = '' )                 cnt = cnt + 1              else   :                  print ( s [ k ], end = '' )          print ( '' )",pln pun str pln pun pln pun pln pun pln pun pln pun pln pun kwd pun lit pun lit pun kwd pln kwd pln pun lit pun pln pun pln kwd pun pln pun pln pun lit pun pln pun lit pln kwd pln kwd pln pun lit pun pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun lit pun lit pln kwd pln pun lit pun lit pln kwd pln pun pln pun pln pun lit pun lit pun lit pln pun pln kwd pun pln pun pln pun lit pun lit pun pln pun str pun pln pun pln pun lit pln kwd pln pun pln kwd pun pln pun pln pun pln pun str pun pln kwd pun str pun,93 ms,200 KB,989
39135716,2018-06-11 06:47:00,Yee_172,990C - Bracket Sequences Concatenation Problem,Python 3,Accepted,12,128,"from  collections  import  defaultdict  as  d a ,  b  =  d ( int ),  d ( int ) for  _  in  range ( int ( input ())):     s ,  m  =   0 ,   1e9      for  x  in  input ():         s  +=   2   *   ( x  ==   '(' )   -   1         m  =  min ( m ,  s )      if  s  >=   0   and  m  >=   0 :         a [ s ]   +=   1      if  s  <=   0   and  m  ==  s :         b [- s ]   +=   1 print ( sum ( a [ x ]   *  b [ x ]   for  x  in  a ))",kwd pln kwd pln kwd pln pln pun pln pun pln pun pln pun pln pun pln pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln lit pun pln lit pln kwd pln kwd pln pun pln pun pln lit pln pun pln pun pln pun pln str pun pln pun pln lit pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pln kwd pln pun pln lit pun pln pun pln pun pln pun pln lit pln kwd pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln lit kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun,857 ms,1000 KB,990
39581739,2018-06-23 23:32:00,eugalt,991C - Candies,Python 3,Accepted,10,89,"n = int ( input ()) def  f ( k ):  s = m = n   while  s > 0and  m :   l = min ( k , m ); s -= 2 * l ; m -= l ; m -= m // 10   return  s <= 0 l =[ 0 , n ] while  l [ 1 ]- l [ 0 ]> 1 :  m = sum ( l )// 2 ; l [ f ( m )]= m print ( l [ 1 ])",pln pun pln pun pln pun kwd pln pun pln pun pln pun pln pun pln pln kwd pln pun lit pln pun pln pun pln pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln pun pln pun lit pln kwd pln pun lit pln pun lit pun pln pun kwd pln pun lit pun pln pun lit pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun pln pun pln kwd pun pln pun lit pun,93 ms,0 KB,991
39428993,2018-06-20 10:40:00,eddy1021,992C - Nastya and a Wardrobe,Python 3,Accepted,3,51,"x , k = list ( map ( int , input (). split ())) md = 1000000007 print (( pow ( 2 , k + 1 , md )* x - pow ( 2 , k , md )+ 1 )% md  if  x > 0   else   0 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun lit kwd pun pln pun lit pun pln pun lit pun pln pun pln pun pln pun lit pun pln pun pln pun lit pun pln kwd pln pun lit pln kwd pln lit pun,108 ms,0 KB,992
39336329,2018-06-17 16:26:00,snv2,993C - Careful Maneuvering,Python 3,Accepted,33,218,"from  collections  import   Counter MV  =   400020 a  =   [ 0 ]   *  MV for  i  in  range ( MV ):     a [ i ]   =  set ()   n  , m  =  list ( map ( int  ,  input (). split ()))   first  =  list ( map ( int  ,  input (). split ())) second  =  list ( map ( int  ,  input (). split ()))   for  fid ,  f  in  enumerate ( first ):      for  sid ,  s  in  enumerate ( second ):         a [ f + s ]. add ( fid  +  MV )         a [ f + s ]. add ( sid )   a . sort ( key  =   lambda  x :   - len ( x ))   b  =   [ len ( k )   for  k  in  a ]   # for k in range(MV): #     if b[k]>0: #         print(k, b[k], a[k])   best_res  =  b [ 0 ] for  pos  in  range ( MV ):      for  pos2  in  range ( MV ):          if  b [ pos ]   +  b  [ pos2 ]   <=  best_res :              break         cur  =  len ( a [ pos ]. union ( a [ pos2 ]))          if  cur  >  best_res  :             best_res  =  cur print ( best_res )",kwd pln kwd pln typ pln pun pln lit pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln com com com pln pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pun pln pun,857 ms,54700 KB,993
40232446,2018-07-12 15:50:00,ivan100sic,993A - Two Squares,Python 3,Accepted,33,218,"from  collections  import   Counter MV  =   400020 a  =   [ 0 ]   *  MV for  i  in  range ( MV ):     a [ i ]   =  set ()   n  , m  =  list ( map ( int  ,  input (). split ()))   first  =  list ( map ( int  ,  input (). split ())) second  =  list ( map ( int  ,  input (). split ()))   for  fid ,  f  in  enumerate ( first ):      for  sid ,  s  in  enumerate ( second ):         a [ f + s ]. add ( fid  +  MV )         a [ f + s ]. add ( sid )   a . sort ( key  =   lambda  x :   - len ( x ))   b  =   [ len ( k )   for  k  in  a ]   # for k in range(MV): #     if b[k]>0: #         print(k, b[k], a[k])   best_res  =  b [ 0 ] for  pos  in  range ( MV ):      for  pos2  in  range ( MV ):          if  b [ pos ]   +  b  [ pos2 ]   <=  best_res :              break         cur  =  len ( a [ pos ]. union ( a [ pos2 ]))          if  cur  >  best_res  :             best_res  =  cur print ( best_res )",kwd pln kwd pln typ pln pun pln lit pln pun pln pun lit pun pln pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun pln com com com pln pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln kwd pln kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln kwd pun pln pun,124 ms,0 KB,994
39730085,2018-06-28 04:06:00,orailly,995C - Leaving the Bar,Python 3,Accepted,23,187,"from  sys  import  stdin from  math  import  hypot     def  main ():     l  =  stdin . read (). splitlines ()[ 1 :]      for  i ,  s  in  enumerate ( l ):         l [ i ]   =   [* map ( float ,  s . split ()),  i ]     l . sort ( key = lambda  xyi :  abs ( xyi [ 0 ]))     res  =   [ '1' ]   *  len ( l )     x ,  y ,  _  =  l . pop ()      while ( l ):         dx ,  dy ,  i = l . pop ()         a ,  b ,  u ,  v  =  x  +  dx ,  y  +  dy ,  x  -  dx ,  y  -  dy          if  hypot ( a ,  b )   <  hypot ( u ,  v ):             x ,  y  =  a ,  b          else :             x ,  y ,  res [ i ]   =  u ,  v ,   '-1'      print ( ' ' . join ( res ))     if  __name__  ==   '__main__' :     main ()",kwd pln kwd pln kwd pln kwd pln pln pln kwd pln pun pln pun pln pun pln pun pln pun lit pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun pln pun lit pun pln pun pln pun str pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln kwd pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln str pln kwd pun str pun pln pun pln pun pln pln kwd pln pun pln str pun pln pun,452 ms,14600 KB,995
39619880,2018-06-24 20:27:00,hahho,996C - Tesla,Python 3,Accepted,40,352,"n , k  =  map ( int , input (). split ())   grid  =   [ list ( map ( int , input (). split ()))   for  _  in  range ( 4 )]   def  it ():    for  i  in  range ( 1 , n ):      yield   ( 1 , i ),( 1 , i - 1 ),( 0 , i )    yield   ( 2 , n - 1 ),( 1 , n - 1 ),( 3 , n - 1 )    for  i  in  reversed ( range ( n - 1 )):      yield   ( 2 , i ),( 2 , i + 1 ),( 3 , i )    yield   ( 1 , 0 ),( 2 , 0 ),( 0 , 0 )   # check for   ( cx , cy ), _ ,( px , py )   in  it ():    if  grid [ cx ][ cy ]   ==   0   or  grid [ cx ][ cy ]   ==  grid [ px ][ py ]:      break else :    print (- 1 )   exit ()   result  =   [] parked  =   0 while  parked  <  k :    for   ( cx , cy ),( nx , ny ),( px , py )   in  it ():     car  =  grid [ cx ][ cy ]      if  car  ==   0 :        continue      if  grid [ px ][ py ]   ==  car :       result . append (( car , px , py ))       grid [ cx ][ cy ]   =   0       parked  +=   1      elif  grid [ nx ][ ny ]   ==   0 :       result . append (( car , nx , ny ))       grid [ nx ][ ny ]   =  car       grid [ cx ][ cy ]   =   0   print ( len ( result ))   for  c , x , y  in  result :    print ( c , x + 1 , y + 1 )",pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln kwd pln pun lit pun pln kwd pln pun pln kwd pln kwd pln pun lit pun pln pun pln kwd pln pun lit pun pln pun lit pun pln pun lit pun lit pun pln pun pln kwd pln pun lit pun pln pun lit pun lit pun pln pun lit pun lit pun pln pun lit pun pln kwd pln kwd pln pun pln pun pln pun lit pun pln kwd pln pun lit pun pln pun lit pun pln pun lit pun lit pun pln pun pln kwd pln pun lit pun lit pun lit pun lit pun lit pun lit pun pln com kwd pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln kwd pln pun pln pun pln pun pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd kwd pun pln kwd pun lit pun pln pun pln pln pun pln pun pln pun pln lit kwd pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln pun pln pun pln pun pln pun pln kwd pln pun pln lit pun pln kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln lit pln pun pln lit pln kwd pln pun pln pun pln pun pln pun pln lit pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun pln pun pln lit pln kwd pun pln pun pln pun pln kwd pln pun pln pun pln kwd pln pun pln kwd pun pln pun pln pun lit pun pln pun lit pun,171 ms,800 KB,996
50796282,2019-03-04 21:45:00,galim665,998C - Convert to Ones,Python 3,Accepted,5,52,"n ,  x ,  y  =  map ( int ,  input (). split ())   s  =  input (). replace ( ""1"" ,   "" "" ) z  =  len ( s . split ()) print ( z  and   ( z - 1 )* min ( x , y )+ y )",pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pln pun pln pun pln pun str pun pln str pun pln pun pln pun pln pun pln pun kwd pun pln kwd pln pun pln pun lit pun pln pun pln pun pln pun pln pun,109 ms,3200 KB,998
39482318,2018-06-21 18:37:00,eugalt,999C - Alphabetic Removals,Python 3,Accepted,3,48,"n , k = map ( int , input (). split ()) print ( '' . join ( x [ 0 ] for  x  in sorted ( sorted ( zip ( input (), range ( n )))[ k :], key = lambda  x : x [ 1 ])))",pln pun pln pun pln pun pln pun pln pun pln pun kwd pun str pun pln pun pln pun lit pun kwd pln kwd pln pun pln pun pln pun pln pun pln pun pln pun pln pun pln pun kwd pln pun pln pun lit pun,655 ms,29600 KB,999
